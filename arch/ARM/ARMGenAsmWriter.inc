/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2022, */
/*    Rot127 <unisono@quyllur.org> 2022-2023 */
/* Automatically generated file by Capstone's LLVM TableGen Disassembler Backend. */

/* LLVM-commit: 464bda7750a3ba9e23823fc707d7e7b6fc38438d */
/* LLVM-tag: llvmorg-16.0.2-5-g464bda7750a3 */

/* Do not edit. */

/* Capstone's LLVM TableGen Backends: */
/* https://github.com/capstone-engine/llvm-capstone */

#include <capstone/platform.h>
#include <assert.h>

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
static MnemonicBitsInfo getMnemonic(MCInst *MI, SStream *O) {
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ "vcx1\t\0"
  /* 6 */ "vld20.32\t\0"
  /* 16 */ "vst20.32\t\0"
  /* 26 */ "vld40.32\t\0"
  /* 36 */ "vst40.32\t\0"
  /* 46 */ "sha1su0.32\t\0"
  /* 58 */ "sha256su0.32\t\0"
  /* 72 */ "vld21.32\t\0"
  /* 82 */ "vst21.32\t\0"
  /* 92 */ "vld41.32\t\0"
  /* 102 */ "vst41.32\t\0"
  /* 112 */ "sha1su1.32\t\0"
  /* 124 */ "sha256su1.32\t\0"
  /* 138 */ "vld42.32\t\0"
  /* 148 */ "vst42.32\t\0"
  /* 158 */ "sha256h2.32\t\0"
  /* 171 */ "vld43.32\t\0"
  /* 181 */ "vst43.32\t\0"
  /* 191 */ "sha1c.32\t\0"
  /* 201 */ "sha1h.32\t\0"
  /* 211 */ "sha256h.32\t\0"
  /* 223 */ "sha1m.32\t\0"
  /* 233 */ "sha1p.32\t\0"
  /* 243 */ "dlstp.32\t\0"
  /* 253 */ "wlstp.32\t\0"
  /* 263 */ "vcvta.s32.f32\t\0"
  /* 278 */ "vcvtm.s32.f32\t\0"
  /* 293 */ "vcvtn.s32.f32\t\0"
  /* 308 */ "vcvtp.s32.f32\t\0"
  /* 323 */ "vcvta.u32.f32\t\0"
  /* 338 */ "vcvtm.u32.f32\t\0"
  /* 353 */ "vcvtn.u32.f32\t\0"
  /* 368 */ "vcvtp.u32.f32\t\0"
  /* 383 */ "vcmla.f32\t\0"
  /* 394 */ "vrinta.f32\t\0"
  /* 406 */ "vcadd.f32\t\0"
  /* 417 */ "vselge.f32\t\0"
  /* 429 */ "vminnm.f32\t\0"
  /* 441 */ "vmaxnm.f32\t\0"
  /* 453 */ "vrintm.f32\t\0"
  /* 465 */ "vrintn.f32\t\0"
  /* 477 */ "vrintp.f32\t\0"
  /* 489 */ "vseleq.f32\t\0"
  /* 501 */ "vselvs.f32\t\0"
  /* 513 */ "vselgt.f32\t\0"
  /* 525 */ "vrintx.f32\t\0"
  /* 537 */ "vrintz.f32\t\0"
  /* 549 */ "ldc2\t\0"
  /* 555 */ "mrc2\t\0"
  /* 561 */ "mrrc2\t\0"
  /* 568 */ "stc2\t\0"
  /* 574 */ "cdp2\t\0"
  /* 580 */ "mcr2\t\0"
  /* 586 */ "mcrr2\t\0"
  /* 593 */ "vcx2\t\0"
  /* 599 */ "vcx3\t\0"
  /* 605 */ "dlstp.64\t\0"
  /* 615 */ "wlstp.64\t\0"
  /* 625 */ "vcvta.s32.f64\t\0"
  /* 640 */ "vcvtm.s32.f64\t\0"
  /* 655 */ "vcvtn.s32.f64\t\0"
  /* 670 */ "vcvtp.s32.f64\t\0"
  /* 685 */ "vcvta.u32.f64\t\0"
  /* 700 */ "vcvtm.u32.f64\t\0"
  /* 715 */ "vcvtn.u32.f64\t\0"
  /* 730 */ "vcvtp.u32.f64\t\0"
  /* 745 */ "vrinta.f64\t\0"
  /* 757 */ "vselge.f64\t\0"
  /* 769 */ "vminnm.f64\t\0"
  /* 781 */ "vmaxnm.f64\t\0"
  /* 793 */ "vrintm.f64\t\0"
  /* 805 */ "vrintn.f64\t\0"
  /* 817 */ "vrintp.f64\t\0"
  /* 829 */ "vseleq.f64\t\0"
  /* 841 */ "vselvs.f64\t\0"
  /* 853 */ "vselgt.f64\t\0"
  /* 865 */ "vmull.p64\t\0"
  /* 876 */ "vld20.16\t\0"
  /* 886 */ "vst20.16\t\0"
  /* 896 */ "vld40.16\t\0"
  /* 906 */ "vst40.16\t\0"
  /* 916 */ "vld21.16\t\0"
  /* 926 */ "vst21.16\t\0"
  /* 936 */ "vld41.16\t\0"
  /* 946 */ "vst41.16\t\0"
  /* 956 */ "vld42.16\t\0"
  /* 966 */ "vst42.16\t\0"
  /* 976 */ "vld43.16\t\0"
  /* 986 */ "vst43.16\t\0"
  /* 996 */ "dlstp.16\t\0"
  /* 1006 */ "wlstp.16\t\0"
  /* 1016 */ "vcvta.s32.f16\t\0"
  /* 1031 */ "vcvtm.s32.f16\t\0"
  /* 1046 */ "vcvtn.s32.f16\t\0"
  /* 1061 */ "vcvtp.s32.f16\t\0"
  /* 1076 */ "vcvta.u32.f16\t\0"
  /* 1091 */ "vcvtm.u32.f16\t\0"
  /* 1106 */ "vcvtn.u32.f16\t\0"
  /* 1121 */ "vcvtp.u32.f16\t\0"
  /* 1136 */ "vcvta.s16.f16\t\0"
  /* 1151 */ "vcvtm.s16.f16\t\0"
  /* 1166 */ "vcvtn.s16.f16\t\0"
  /* 1181 */ "vcvtp.s16.f16\t\0"
  /* 1196 */ "vcvta.u16.f16\t\0"
  /* 1211 */ "vcvtm.u16.f16\t\0"
  /* 1226 */ "vcvtn.u16.f16\t\0"
  /* 1241 */ "vcvtp.u16.f16\t\0"
  /* 1256 */ "vcmla.f16\t\0"
  /* 1267 */ "vrinta.f16\t\0"
  /* 1279 */ "vcadd.f16\t\0"
  /* 1290 */ "vselge.f16\t\0"
  /* 1302 */ "vfmal.f16\t\0"
  /* 1313 */ "vfmsl.f16\t\0"
  /* 1324 */ "vminnm.f16\t\0"
  /* 1336 */ "vmaxnm.f16\t\0"
  /* 1348 */ "vrintm.f16\t\0"
  /* 1360 */ "vrintn.f16\t\0"
  /* 1372 */ "vrintp.f16\t\0"
  /* 1384 */ "vseleq.f16\t\0"
  /* 1396 */ "vins.f16\t\0"
  /* 1406 */ "vselvs.f16\t\0"
  /* 1418 */ "vselgt.f16\t\0"
  /* 1430 */ "vrintx.f16\t\0"
  /* 1442 */ "vmovx.f16\t\0"
  /* 1453 */ "vrintz.f16\t\0"
  /* 1465 */ "vmmla.bf16\t\0"
  /* 1477 */ "vfmab.bf16\t\0"
  /* 1489 */ "vfmat.bf16\t\0"
  /* 1501 */ "vdot.bf16\t\0"
  /* 1512 */ "vld20.8\t\0"
  /* 1521 */ "vst20.8\t\0"
  /* 1530 */ "vld40.8\t\0"
  /* 1539 */ "vst40.8\t\0"
  /* 1548 */ "vld21.8\t\0"
  /* 1557 */ "vst21.8\t\0"
  /* 1566 */ "vld41.8\t\0"
  /* 1575 */ "vst41.8\t\0"
  /* 1584 */ "vld42.8\t\0"
  /* 1593 */ "vst42.8\t\0"
  /* 1602 */ "vld43.8\t\0"
  /* 1611 */ "vst43.8\t\0"
  /* 1620 */ "aesimc.8\t\0"
  /* 1630 */ "aesmc.8\t\0"
  /* 1639 */ "aesd.8\t\0"
  /* 1647 */ "aese.8\t\0"
  /* 1655 */ "dlstp.8\t\0"
  /* 1664 */ "wlstp.8\t\0"
  /* 1673 */ "vusmmla.s8\t\0"
  /* 1685 */ "vsmmla.s8\t\0"
  /* 1696 */ "vusdot.s8\t\0"
  /* 1707 */ "vsdot.s8\t\0"
  /* 1717 */ "vummla.u8\t\0"
  /* 1728 */ "vsudot.u8\t\0"
  /* 1739 */ "vudot.u8\t\0"
  /* 1749 */ "vcx1a\t\0"
  /* 1756 */ "vcx2a\t\0"
  /* 1763 */ "vcx3a\t\0"
  /* 1770 */ "rfeda\t\0"
  /* 1777 */ "rfeia\t\0"
  /* 1784 */ "crc32b\t\0"
  /* 1792 */ "crc32cb\t\0"
  /* 1801 */ "rfedb\t\0"
  /* 1808 */ "rfeib\t\0"
  /* 1815 */ "dmb\t\0"
  /* 1820 */ "dsb\t\0"
  /* 1825 */ "isb\t\0"
  /* 1830 */ "tsb\t\0"
  /* 1835 */ "csinc\t\0"
  /* 1842 */ "hvc\t\0"
  /* 1847 */ "cx1d\t\0"
  /* 1853 */ "cx2d\t\0"
  /* 1859 */ "cx3d\t\0"
  /* 1865 */ "pld\t\0"
  /* 1870 */ "setend\t\0"
  /* 1878 */ "le\t\0"
  /* 1882 */ "udf\t\0"
  /* 1887 */ "csneg\t\0"
  /* 1894 */ "crc32h\t\0"
  /* 1902 */ "crc32ch\t\0"
  /* 1911 */ "pli\t\0"
  /* 1916 */ "bti\t\0"
  /* 1921 */ "ldc2l\t\0"
  /* 1928 */ "stc2l\t\0"
  /* 1935 */ "bl\t\0"
  /* 1939 */ "bfcsel\t\0"
  /* 1947 */ "setpan\t\0"
  /* 1955 */ "letp\t\0"
  /* 1961 */ "dls\t\0"
  /* 1966 */ "wls\t\0"
  /* 1971 */ "cps\t\0"
  /* 1976 */ "movs\t\0"
  /* 1982 */ "hlt\t\0"
  /* 1987 */ "bkpt\t\0"
  /* 1993 */ "csinv\t\0"
  /* 2000 */ "hvc.w\t\0"
  /* 2007 */ "udf.w\t\0"
  /* 2014 */ "crc32w\t\0"
  /* 2022 */ "crc32cw\t\0"
  /* 2031 */ "pldw\t\0"
  /* 2037 */ "bx\t\0"
  /* 2041 */ "blx\t\0"
  /* 2046 */ "cbz\t\0"
  /* 2051 */ "cbnz\t\0"
  /* 2057 */ "srsda\tsp!, \0"
  /* 2069 */ "srsia\tsp!, \0"
  /* 2081 */ "srsdb\tsp!, \0"
  /* 2093 */ "srsib\tsp!, \0"
  /* 2105 */ "srsda\tsp, \0"
  /* 2116 */ "srsia\tsp, \0"
  /* 2127 */ "srsdb\tsp, \0"
  /* 2138 */ "srsib\tsp, \0"
  /* 2149 */ "# XRay Function Patchable RET.\0"
  /* 2180 */ "# XRay Typed Event Log.\0"
  /* 2204 */ "# XRay Custom Event Log.\0"
  /* 2229 */ "# XRay Function Enter.\0"
  /* 2252 */ "# XRay Tail Call Exit.\0"
  /* 2275 */ "# XRay Function Exit.\0"
  /* 2297 */ "__brkdiv0\0"
  /* 2307 */ "vld1\0"
  /* 2312 */ "dcps1\0"
  /* 2318 */ "vst1\0"
  /* 2323 */ "vcx1\0"
  /* 2328 */ "vrev32\0"
  /* 2335 */ "ldc2\0"
  /* 2340 */ "mrc2\0"
  /* 2345 */ "mrrc2\0"
  /* 2351 */ "stc2\0"
  /* 2356 */ "vld2\0"
  /* 2361 */ "cdp2\0"
  /* 2366 */ "mcr2\0"
  /* 2371 */ "mcrr2\0"
  /* 2377 */ "dcps2\0"
  /* 2383 */ "vst2\0"
  /* 2388 */ "vcx2\0"
  /* 2393 */ "vld3\0"
  /* 2398 */ "dcps3\0"
  /* 2404 */ "vst3\0"
  /* 2409 */ "vcx3\0"
  /* 2414 */ "vrev64\0"
  /* 2421 */ "vld4\0"
  /* 2426 */ "vst4\0"
  /* 2431 */ "sxtab16\0"
  /* 2439 */ "uxtab16\0"
  /* 2447 */ "sxtb16\0"
  /* 2454 */ "uxtb16\0"
  /* 2461 */ "shsub16\0"
  /* 2469 */ "uhsub16\0"
  /* 2477 */ "uqsub16\0"
  /* 2485 */ "ssub16\0"
  /* 2492 */ "usub16\0"
  /* 2499 */ "shadd16\0"
  /* 2507 */ "uhadd16\0"
  /* 2515 */ "uqadd16\0"
  /* 2523 */ "sadd16\0"
  /* 2530 */ "uadd16\0"
  /* 2537 */ "ssat16\0"
  /* 2544 */ "usat16\0"
  /* 2551 */ "vrev16\0"
  /* 2558 */ "usada8\0"
  /* 2565 */ "shsub8\0"
  /* 2572 */ "uhsub8\0"
  /* 2579 */ "uqsub8\0"
  /* 2586 */ "ssub8\0"
  /* 2592 */ "usub8\0"
  /* 2598 */ "usad8\0"
  /* 2604 */ "shadd8\0"
  /* 2611 */ "uhadd8\0"
  /* 2618 */ "uqadd8\0"
  /* 2625 */ "sadd8\0"
  /* 2631 */ "uadd8\0"
  /* 2637 */ "LIFETIME_END\0"
  /* 2650 */ "PSEUDO_PROBE\0"
  /* 2663 */ "BUNDLE\0"
  /* 2670 */ "DBG_VALUE\0"
  /* 2680 */ "DBG_INSTR_REF\0"
  /* 2694 */ "DBG_PHI\0"
  /* 2702 */ "DBG_LABEL\0"
  /* 2712 */ "LIFETIME_START\0"
  /* 2727 */ "DBG_VALUE_LIST\0"
  /* 2742 */ "vcx1a\0"
  /* 2748 */ "vcx2a\0"
  /* 2754 */ "vcx3a\0"
  /* 2760 */ "vaba\0"
  /* 2765 */ "cx1da\0"
  /* 2771 */ "cx2da\0"
  /* 2777 */ "cx3da\0"
  /* 2783 */ "lda\0"
  /* 2787 */ "ldmda\0"
  /* 2793 */ "stmda\0"
  /* 2799 */ "vrmlaldavha\0"
  /* 2811 */ "vrmlsldavha\0"
  /* 2823 */ "rfeia\0"
  /* 2829 */ "vldmia\0"
  /* 2836 */ "vstmia\0"
  /* 2843 */ "srsia\0"
  /* 2849 */ "vcmla\0"
  /* 2855 */ "smmla\0"
  /* 2861 */ "vnmla\0"
  /* 2867 */ "vmla\0"
  /* 2872 */ "vfma\0"
  /* 2877 */ "vfnma\0"
  /* 2883 */ "vminnma\0"
  /* 2891 */ "vmaxnma\0"
  /* 2899 */ "vmina\0"
  /* 2905 */ "vrsra\0"
  /* 2911 */ "vsra\0"
  /* 2916 */ "vrinta\0"
  /* 2923 */ "tta\0"
  /* 2927 */ "vcvta\0"
  /* 2933 */ "vmladava\0"
  /* 2942 */ "vmlaldava\0"
  /* 2952 */ "vmlsldava\0"
  /* 2962 */ "vmlsdava\0"
  /* 2971 */ "vaddva\0"
  /* 2978 */ "vaddlva\0"
  /* 2986 */ "vmaxa\0"
  /* 2992 */ "ldab\0"
  /* 2997 */ "sxtab\0"
  /* 3003 */ "uxtab\0"
  /* 3009 */ "smlabb\0"
  /* 3016 */ "smlalbb\0"
  /* 3024 */ "smulbb\0"
  /* 3031 */ "tbb\0"
  /* 3035 */ "rfedb\0"
  /* 3041 */ "vldmdb\0"
  /* 3048 */ "vstmdb\0"
  /* 3055 */ "srsdb\0"
  /* 3061 */ "ldmib\0"
  /* 3067 */ "stmib\0"
  /* 3073 */ "vshllb\0"
  /* 3080 */ "vqdmullb\0"
  /* 3089 */ "vmullb\0"
  /* 3096 */ "stlb\0"
  /* 3101 */ "vmovlb\0"
  /* 3108 */ "dmb\0"
  /* 3112 */ "vqshrnb\0"
  /* 3120 */ "vqrshrnb\0"
  /* 3129 */ "vrshrnb\0"
  /* 3137 */ "vshrnb\0"
  /* 3144 */ "vqshrunb\0"
  /* 3153 */ "vqrshrunb\0"
  /* 3163 */ "vqmovunb\0"
  /* 3172 */ "vqmovnb\0"
  /* 3180 */ "vmovnb\0"
  /* 3187 */ "swpb\0"
  /* 3192 */ "vldrb\0"
  /* 3198 */ "vstrb\0"
  /* 3204 */ "dsb\0"
  /* 3208 */ "isb\0"
  /* 3212 */ "ldrsb\0"
  /* 3218 */ "tsb\0"
  /* 3222 */ "smlatb\0"
  /* 3229 */ "pkhtb\0"
  /* 3235 */ "smlaltb\0"
  /* 3243 */ "smultb\0"
  /* 3250 */ "vcvtb\0"
  /* 3256 */ "sxtb\0"
  /* 3261 */ "uxtb\0"
  /* 3266 */ "qdsub\0"
  /* 3272 */ "vhsub\0"
  /* 3278 */ "vqsub\0"
  /* 3284 */ "vsub\0"
  /* 3289 */ "smlawb\0"
  /* 3296 */ "smulwb\0"
  /* 3303 */ "ldaexb\0"
  /* 3310 */ "stlexb\0"
  /* 3317 */ "ldrexb\0"
  /* 3324 */ "strexb\0"
  /* 3331 */ "vsbc\0"
  /* 3336 */ "vadc\0"
  /* 3341 */ "ldc\0"
  /* 3345 */ "bfc\0"
  /* 3349 */ "vbic\0"
  /* 3354 */ "vshlc\0"
  /* 3360 */ "smc\0"
  /* 3364 */ "mrc\0"
  /* 3368 */ "mrrc\0"
  /* 3373 */ "rsc\0"
  /* 3377 */ "stc\0"
  /* 3381 */ "svc\0"
  /* 3385 */ "smlad\0"
  /* 3391 */ "smuad\0"
  /* 3397 */ "vabd\0"
  /* 3402 */ "vhcadd\0"
  /* 3409 */ "vcadd\0"
  /* 3415 */ "qdadd\0"
  /* 3421 */ "vrhadd\0"
  /* 3428 */ "vhadd\0"
  /* 3434 */ "vpadd\0"
  /* 3440 */ "vqadd\0"
  /* 3446 */ "vadd\0"
  /* 3451 */ "smlald\0"
  /* 3458 */ "pld\0"
  /* 3462 */ "smlsld\0"
  /* 3469 */ "vand\0"
  /* 3474 */ "vldrd\0"
  /* 3480 */ "vstrd\0"
  /* 3486 */ "smlsd\0"
  /* 3492 */ "smusd\0"
  /* 3498 */ "ldaexd\0"
  /* 3505 */ "stlexd\0"
  /* 3512 */ "ldrexd\0"
  /* 3519 */ "strexd\0"
  /* 3526 */ "vacge\0"
  /* 3532 */ "vcge\0"
  /* 3537 */ "vcle\0"
  /* 3542 */ "vrecpe\0"
  /* 3549 */ "vcmpe\0"
  /* 3555 */ "vrsqrte\0"
  /* 3563 */ "bf\0"
  /* 3566 */ "vbif\0"
  /* 3571 */ "dbg\0"
  /* 3575 */ "pacg\0"
  /* 3580 */ "vqneg\0"
  /* 3586 */ "vneg\0"
  /* 3591 */ "sg\0"
  /* 3594 */ "autg\0"
  /* 3599 */ "ldah\0"
  /* 3604 */ "vqdmlah\0"
  /* 3612 */ "vqrdmlah\0"
  /* 3621 */ "sxtah\0"
  /* 3627 */ "uxtah\0"
  /* 3633 */ "tbh\0"
  /* 3637 */ "vqdmladh\0"
  /* 3646 */ "vqrdmladh\0"
  /* 3656 */ "vqdmlsdh\0"
  /* 3665 */ "vqrdmlsdh\0"
  /* 3675 */ "stlh\0"
  /* 3680 */ "vqdmulh\0"
  /* 3688 */ "vqrdmulh\0"
  /* 3697 */ "vrmulh\0"
  /* 3704 */ "vmulh\0"
  /* 3710 */ "vldrh\0"
  /* 3716 */ "vstrh\0"
  /* 3722 */ "vqdmlash\0"
  /* 3731 */ "vqrdmlash\0"
  /* 3741 */ "vqrdmlsh\0"
  /* 3750 */ "ldrsh\0"
  /* 3756 */ "push\0"
  /* 3761 */ "revsh\0"
  /* 3767 */ "sxth\0"
  /* 3772 */ "uxth\0"
  /* 3777 */ "vrmlaldavh\0"
  /* 3788 */ "vrmlsldavh\0"
  /* 3799 */ "ldaexh\0"
  /* 3806 */ "stlexh\0"
  /* 3813 */ "ldrexh\0"
  /* 3820 */ "strexh\0"
  /* 3827 */ "vsbci\0"
  /* 3833 */ "vadci\0"
  /* 3839 */ "bfi\0"
  /* 3843 */ "pli\0"
  /* 3847 */ "vsli\0"
  /* 3852 */ "vsri\0"
  /* 3857 */ "bxj\0"
  /* 3861 */ "ldc2l\0"
  /* 3867 */ "stc2l\0"
  /* 3873 */ "umaal\0"
  /* 3879 */ "vabal\0"
  /* 3885 */ "vpadal\0"
  /* 3892 */ "vqdmlal\0"
  /* 3900 */ "smlal\0"
  /* 3906 */ "umlal\0"
  /* 3912 */ "vmlal\0"
  /* 3918 */ "vtbl\0"
  /* 3923 */ "vsubl\0"
  /* 3929 */ "ldcl\0"
  /* 3934 */ "stcl\0"
  /* 3939 */ "vabdl\0"
  /* 3945 */ "vpaddl\0"
  /* 3952 */ "vaddl\0"
  /* 3958 */ "vpsel\0"
  /* 3964 */ "bfl\0"
  /* 3968 */ "sqshl\0"
  /* 3974 */ "uqshl\0"
  /* 3980 */ "vqshl\0"
  /* 3986 */ "uqrshl\0"
  /* 3993 */ "vqrshl\0"
  /* 4000 */ "vrshl\0"
  /* 4006 */ "vshl\0"
  /* 4011 */ "# FEntry call\0"
  /* 4025 */ "sqshll\0"
  /* 4032 */ "uqshll\0"
  /* 4039 */ "uqrshll\0"
  /* 4047 */ "vshll\0"
  /* 4053 */ "lsll\0"
  /* 4058 */ "vqdmull\0"
  /* 4066 */ "smull\0"
  /* 4072 */ "umull\0"
  /* 4078 */ "vmull\0"
  /* 4084 */ "sqrshrl\0"
  /* 4092 */ "srshrl\0"
  /* 4099 */ "urshrl\0"
  /* 4106 */ "asrl\0"
  /* 4111 */ "lsrl\0"
  /* 4116 */ "vbsl\0"
  /* 4121 */ "vqdmlsl\0"
  /* 4129 */ "vmlsl\0"
  /* 4135 */ "stl\0"
  /* 4139 */ "vcmul\0"
  /* 4145 */ "smmul\0"
  /* 4151 */ "vnmul\0"
  /* 4157 */ "vmul\0"
  /* 4162 */ "vmovl\0"
  /* 4168 */ "vlldm\0"
  /* 4174 */ "vminnm\0"
  /* 4181 */ "vmaxnm\0"
  /* 4188 */ "vscclrm\0"
  /* 4196 */ "vrintm\0"
  /* 4203 */ "vlstm\0"
  /* 4209 */ "vcvtm\0"
  /* 4215 */ "vrsubhn\0"
  /* 4223 */ "vsubhn\0"
  /* 4230 */ "vraddhn\0"
  /* 4238 */ "vaddhn\0"
  /* 4245 */ "vpmin\0"
  /* 4251 */ "vmin\0"
  /* 4256 */ "cmn\0"
  /* 4260 */ "vqshrn\0"
  /* 4267 */ "vqrshrn\0"
  /* 4275 */ "vrshrn\0"
  /* 4282 */ "vshrn\0"
  /* 4288 */ "vorn\0"
  /* 4293 */ "vtrn\0"
  /* 4298 */ "vrintn\0"
  /* 4305 */ "vcvtn\0"
  /* 4311 */ "vqshrun\0"
  /* 4319 */ "vqrshrun\0"
  /* 4328 */ "vqmovun\0"
  /* 4336 */ "vmvn\0"
  /* 4341 */ "vqmovn\0"
  /* 4348 */ "vmovn\0"
  /* 4354 */ "trap\0"
  /* 4359 */ "cdp\0"
  /* 4363 */ "vzip\0"
  /* 4368 */ "vcmp\0"
  /* 4373 */ "pop\0"
  /* 4377 */ "pac\tr12, lr, sp\0"
  /* 4393 */ "pacbti\tr12, lr, sp\0"
  /* 4412 */ "aut\tr12, lr, sp\0"
  /* 4428 */ "lctp\0"
  /* 4433 */ "vctp\0"
  /* 4438 */ "vrintp\0"
  /* 4445 */ "vcvtp\0"
  /* 4451 */ "vddup\0"
  /* 4457 */ "vidup\0"
  /* 4463 */ "vdup\0"
  /* 4468 */ "vdwdup\0"
  /* 4475 */ "viwdup\0"
  /* 4482 */ "vswp\0"
  /* 4487 */ "vuzp\0"
  /* 4492 */ "vceq\0"
  /* 4497 */ "teq\0"
  /* 4501 */ "smmlar\0"
  /* 4508 */ "mcr\0"
  /* 4512 */ "adr\0"
  /* 4516 */ "vldr\0"
  /* 4521 */ "sqrshr\0"
  /* 4528 */ "srshr\0"
  /* 4534 */ "urshr\0"
  /* 4540 */ "vrshr\0"
  /* 4546 */ "vshr\0"
  /* 4551 */ "smmulr\0"
  /* 4558 */ "veor\0"
  /* 4563 */ "ror\0"
  /* 4567 */ "mcrr\0"
  /* 4572 */ "vorr\0"
  /* 4577 */ "asr\0"
  /* 4581 */ "smmlsr\0"
  /* 4588 */ "vmsr\0"
  /* 4593 */ "vbrsr\0"
  /* 4599 */ "vrintr\0"
  /* 4606 */ "vstr\0"
  /* 4611 */ "vcvtr\0"
  /* 4617 */ "vmlas\0"
  /* 4623 */ "vfmas\0"
  /* 4629 */ "vqabs\0"
  /* 4635 */ "vabs\0"
  /* 4640 */ "subs\0"
  /* 4645 */ "vcls\0"
  /* 4650 */ "smmls\0"
  /* 4656 */ "vnmls\0"
  /* 4662 */ "vmls\0"
  /* 4667 */ "vfms\0"
  /* 4672 */ "vfnms\0"
  /* 4678 */ "bxns\0"
  /* 4683 */ "blxns\0"
  /* 4689 */ "vrecps\0"
  /* 4696 */ "vmrs\0"
  /* 4701 */ "asrs\0"
  /* 4706 */ "lsrs\0"
  /* 4711 */ "vrsqrts\0"
  /* 4719 */ "movs\0"
  /* 4724 */ "ssat\0"
  /* 4729 */ "usat\0"
  /* 4734 */ "ttat\0"
  /* 4739 */ "smlabt\0"
  /* 4746 */ "pkhbt\0"
  /* 4752 */ "smlalbt\0"
  /* 4760 */ "smulbt\0"
  /* 4767 */ "ldrbt\0"
  /* 4773 */ "strbt\0"
  /* 4779 */ "ldrsbt\0"
  /* 4786 */ "eret\0"
  /* 4791 */ "vacgt\0"
  /* 4797 */ "vcgt\0"
  /* 4802 */ "ldrht\0"
  /* 4808 */ "strht\0"
  /* 4814 */ "ldrsht\0"
  /* 4821 */ "rbit\0"
  /* 4826 */ "vbit\0"
  /* 4831 */ "vclt\0"
  /* 4836 */ "vshllt\0"
  /* 4843 */ "vqdmullt\0"
  /* 4852 */ "vmullt\0"
  /* 4859 */ "vmovlt\0"
  /* 4866 */ "vcnt\0"
  /* 4871 */ "hint\0"
  /* 4876 */ "vqshrnt\0"
  /* 4884 */ "vqrshrnt\0"
  /* 4893 */ "vrshrnt\0"
  /* 4901 */ "vshrnt\0"
  /* 4908 */ "vqshrunt\0"
  /* 4917 */ "vqrshrunt\0"
  /* 4927 */ "vqmovunt\0"
  /* 4936 */ "vqmovnt\0"
  /* 4944 */ "vmovnt\0"
  /* 4951 */ "vpnot\0"
  /* 4957 */ "vpt\0"
  /* 4961 */ "ldrt\0"
  /* 4966 */ "vsqrt\0"
  /* 4972 */ "strt\0"
  /* 4977 */ "vpst\0"
  /* 4982 */ "vtst\0"
  /* 4987 */ "smlatt\0"
  /* 4994 */ "smlaltt\0"
  /* 5002 */ "smultt\0"
  /* 5009 */ "ttt\0"
  /* 5013 */ "vcvtt\0"
  /* 5019 */ "bxaut\0"
  /* 5025 */ "vjcvt\0"
  /* 5031 */ "vcvt\0"
  /* 5036 */ "movt\0"
  /* 5041 */ "smlawt\0"
  /* 5048 */ "smulwt\0"
  /* 5055 */ "vext\0"
  /* 5060 */ "vqshlu\0"
  /* 5067 */ "vabav\0"
  /* 5073 */ "vmladav\0"
  /* 5081 */ "vmlaldav\0"
  /* 5090 */ "vmlsldav\0"
  /* 5099 */ "vmlsdav\0"
  /* 5107 */ "vminnmav\0"
  /* 5116 */ "vmaxnmav\0"
  /* 5125 */ "vminav\0"
  /* 5132 */ "vmaxav\0"
  /* 5139 */ "vaddv\0"
  /* 5145 */ "rev\0"
  /* 5149 */ "sdiv\0"
  /* 5154 */ "udiv\0"
  /* 5159 */ "vdiv\0"
  /* 5164 */ "vaddlv\0"
  /* 5171 */ "vminnmv\0"
  /* 5179 */ "vmaxnmv\0"
  /* 5187 */ "vminv\0"
  /* 5193 */ "vmov\0"
  /* 5198 */ "vmaxv\0"
  /* 5204 */ "vsubw\0"
  /* 5210 */ "vaddw\0"
  /* 5216 */ "pldw\0"
  /* 5221 */ "vldrw\0"
  /* 5227 */ "vstrw\0"
  /* 5233 */ "movw\0"
  /* 5238 */ "vrmlaldavhax\0"
  /* 5251 */ "vrmlsldavhax\0"
  /* 5264 */ "fldmiax\0"
  /* 5272 */ "fstmiax\0"
  /* 5280 */ "vpmax\0"
  /* 5286 */ "vmax\0"
  /* 5291 */ "shsax\0"
  /* 5297 */ "uhsax\0"
  /* 5303 */ "uqsax\0"
  /* 5309 */ "ssax\0"
  /* 5314 */ "usax\0"
  /* 5319 */ "vmladavax\0"
  /* 5329 */ "vmlaldavax\0"
  /* 5340 */ "vmlsldavax\0"
  /* 5351 */ "vmlsdavax\0"
  /* 5361 */ "fldmdbx\0"
  /* 5369 */ "fstmdbx\0"
  /* 5377 */ "vtbx\0"
  /* 5382 */ "smladx\0"
  /* 5389 */ "smuadx\0"
  /* 5396 */ "smlaldx\0"
  /* 5404 */ "smlsldx\0"
  /* 5412 */ "smlsdx\0"
  /* 5419 */ "smusdx\0"
  /* 5426 */ "ldaex\0"
  /* 5432 */ "stlex\0"
  /* 5438 */ "ldrex\0"
  /* 5444 */ "clrex\0"
  /* 5450 */ "strex\0"
  /* 5456 */ "sbfx\0"
  /* 5461 */ "ubfx\0"
  /* 5466 */ "vqdmladhx\0"
  /* 5476 */ "vqrdmladhx\0"
  /* 5487 */ "vqdmlsdhx\0"
  /* 5497 */ "vqrdmlsdhx\0"
  /* 5508 */ "vrmlaldavhx\0"
  /* 5520 */ "vrmlsldavhx\0"
  /* 5532 */ "blx\0"
  /* 5536 */ "bflx\0"
  /* 5541 */ "rrx\0"
  /* 5545 */ "shasx\0"
  /* 5551 */ "uhasx\0"
  /* 5557 */ "uqasx\0"
  /* 5563 */ "sasx\0"
  /* 5568 */ "uasx\0"
  /* 5573 */ "vrintx\0"
  /* 5580 */ "vmladavx\0"
  /* 5589 */ "vmlaldavx\0"
  /* 5599 */ "vmlsldavx\0"
  /* 5609 */ "vmlsdavx\0"
  /* 5618 */ "vclz\0"
  /* 5623 */ "vrintz\0"
};
#endif // CAPSTONE_DIET

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    2671U,	// DBG_VALUE
    2728U,	// DBG_VALUE_LIST
    2681U,	// DBG_INSTR_REF
    2695U,	// DBG_PHI
    2703U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    2664U,	// BUNDLE
    2713U,	// LIFETIME_START
    2638U,	// LIFETIME_END
    2651U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    4012U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    2230U,	// PATCHABLE_FUNCTION_ENTER
    2150U,	// PATCHABLE_RET
    2276U,	// PATCHABLE_FUNCTION_EXIT
    2253U,	// PATCHABLE_TAIL_CALL
    2205U,	// PATCHABLE_EVENT_CALL
    2181U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    12770U,	// ASRi
    12770U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BLX_noip
    0U,	// BLX_pred_noip
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    67130072U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    29344U,	// LDRBT_POST
    29094U,	// LDRConstPool
    29379U,	// LDRHTii
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    29356U,	// LDRSBTii
    29391U,	// LDRSHTii
    29538U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LOADDUAL
    12318U,	// LSLi
    12318U,	// LSLr
    12777U,	// LSRi
    12777U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MQPRCopy
    0U,	// MQQPRLoad
    0U,	// MQQPRStore
    0U,	// MQQQQPRLoad
    0U,	// MQQQQPRStore
    0U,	// MULv5
    0U,	// MVE_MEMCPYLOOPINST
    0U,	// MVE_MEMSETLOOPINST
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    12756U,	// RORi
    12756U,	// RORr
    0U,	// RRX
    38310U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SEH_EpilogEnd
    0U,	// SEH_EpilogStart
    0U,	// SEH_Nop
    0U,	// SEH_Nop_Ret
    0U,	// SEH_PrologEnd
    0U,	// SEH_SaveFRegs
    0U,	// SEH_SaveLR
    0U,	// SEH_SaveRegs
    0U,	// SEH_SaveRegs_Ret
    0U,	// SEH_SaveSP
    0U,	// SEH_StackAlloc
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    0U,	// STOREDUAL
    29350U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    29549U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// SpeculationBarrierISBDSBEndBB
    0U,	// SpeculationBarrierSBEndBB
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    567556U,	// VLD1LNdAsm_16
    1091844U,	// VLD1LNdAsm_32
    1616132U,	// VLD1LNdAsm_8
    567556U,	// VLD1LNdWB_fixed_Asm_16
    1091844U,	// VLD1LNdWB_fixed_Asm_32
    1616132U,	// VLD1LNdWB_fixed_Asm_8
    575748U,	// VLD1LNdWB_register_Asm_16
    1100036U,	// VLD1LNdWB_register_Asm_32
    1624324U,	// VLD1LNdWB_register_Asm_8
    567605U,	// VLD2LNdAsm_16
    1091893U,	// VLD2LNdAsm_32
    1616181U,	// VLD2LNdAsm_8
    567605U,	// VLD2LNdWB_fixed_Asm_16
    1091893U,	// VLD2LNdWB_fixed_Asm_32
    1616181U,	// VLD2LNdWB_fixed_Asm_8
    575797U,	// VLD2LNdWB_register_Asm_16
    1100085U,	// VLD2LNdWB_register_Asm_32
    1624373U,	// VLD2LNdWB_register_Asm_8
    567605U,	// VLD2LNqAsm_16
    1091893U,	// VLD2LNqAsm_32
    567605U,	// VLD2LNqWB_fixed_Asm_16
    1091893U,	// VLD2LNqWB_fixed_Asm_32
    575797U,	// VLD2LNqWB_register_Asm_16
    1100085U,	// VLD2LNqWB_register_Asm_32
    134801754U,	// VLD3DUPdAsm_16
    135326042U,	// VLD3DUPdAsm_32
    135850330U,	// VLD3DUPdAsm_8
    134801754U,	// VLD3DUPdWB_fixed_Asm_16
    135326042U,	// VLD3DUPdWB_fixed_Asm_32
    135850330U,	// VLD3DUPdWB_fixed_Asm_8
    134785370U,	// VLD3DUPdWB_register_Asm_16
    135309658U,	// VLD3DUPdWB_register_Asm_32
    135833946U,	// VLD3DUPdWB_register_Asm_8
    201910618U,	// VLD3DUPqAsm_16
    202434906U,	// VLD3DUPqAsm_32
    202959194U,	// VLD3DUPqAsm_8
    201910618U,	// VLD3DUPqWB_fixed_Asm_16
    202434906U,	// VLD3DUPqWB_fixed_Asm_32
    202959194U,	// VLD3DUPqWB_fixed_Asm_8
    201894234U,	// VLD3DUPqWB_register_Asm_16
    202418522U,	// VLD3DUPqWB_register_Asm_32
    202942810U,	// VLD3DUPqWB_register_Asm_8
    567642U,	// VLD3LNdAsm_16
    1091930U,	// VLD3LNdAsm_32
    1616218U,	// VLD3LNdAsm_8
    567642U,	// VLD3LNdWB_fixed_Asm_16
    1091930U,	// VLD3LNdWB_fixed_Asm_32
    1616218U,	// VLD3LNdWB_fixed_Asm_8
    575834U,	// VLD3LNdWB_register_Asm_16
    1100122U,	// VLD3LNdWB_register_Asm_32
    1624410U,	// VLD3LNdWB_register_Asm_8
    567642U,	// VLD3LNqAsm_16
    1091930U,	// VLD3LNqAsm_32
    567642U,	// VLD3LNqWB_fixed_Asm_16
    1091930U,	// VLD3LNqWB_fixed_Asm_32
    575834U,	// VLD3LNqWB_register_Asm_16
    1100122U,	// VLD3LNqWB_register_Asm_32
    269019482U,	// VLD3dAsm_16
    269543770U,	// VLD3dAsm_32
    270068058U,	// VLD3dAsm_8
    269019482U,	// VLD3dWB_fixed_Asm_16
    269543770U,	// VLD3dWB_fixed_Asm_32
    270068058U,	// VLD3dWB_fixed_Asm_8
    269003098U,	// VLD3dWB_register_Asm_16
    269527386U,	// VLD3dWB_register_Asm_32
    270051674U,	// VLD3dWB_register_Asm_8
    336128346U,	// VLD3qAsm_16
    336652634U,	// VLD3qAsm_32
    337176922U,	// VLD3qAsm_8
    336128346U,	// VLD3qWB_fixed_Asm_16
    336652634U,	// VLD3qWB_fixed_Asm_32
    337176922U,	// VLD3qWB_fixed_Asm_8
    336111962U,	// VLD3qWB_register_Asm_16
    336636250U,	// VLD3qWB_register_Asm_32
    337160538U,	// VLD3qWB_register_Asm_8
    403237238U,	// VLD4DUPdAsm_16
    403761526U,	// VLD4DUPdAsm_32
    404285814U,	// VLD4DUPdAsm_8
    403237238U,	// VLD4DUPdWB_fixed_Asm_16
    403761526U,	// VLD4DUPdWB_fixed_Asm_32
    404285814U,	// VLD4DUPdWB_fixed_Asm_8
    403220854U,	// VLD4DUPdWB_register_Asm_16
    403745142U,	// VLD4DUPdWB_register_Asm_32
    404269430U,	// VLD4DUPdWB_register_Asm_8
    470346102U,	// VLD4DUPqAsm_16
    470870390U,	// VLD4DUPqAsm_32
    471394678U,	// VLD4DUPqAsm_8
    470346102U,	// VLD4DUPqWB_fixed_Asm_16
    470870390U,	// VLD4DUPqWB_fixed_Asm_32
    471394678U,	// VLD4DUPqWB_fixed_Asm_8
    470329718U,	// VLD4DUPqWB_register_Asm_16
    470854006U,	// VLD4DUPqWB_register_Asm_32
    471378294U,	// VLD4DUPqWB_register_Asm_8
    567670U,	// VLD4LNdAsm_16
    1091958U,	// VLD4LNdAsm_32
    1616246U,	// VLD4LNdAsm_8
    567670U,	// VLD4LNdWB_fixed_Asm_16
    1091958U,	// VLD4LNdWB_fixed_Asm_32
    1616246U,	// VLD4LNdWB_fixed_Asm_8
    575862U,	// VLD4LNdWB_register_Asm_16
    1100150U,	// VLD4LNdWB_register_Asm_32
    1624438U,	// VLD4LNdWB_register_Asm_8
    567670U,	// VLD4LNqAsm_16
    1091958U,	// VLD4LNqAsm_32
    567670U,	// VLD4LNqWB_fixed_Asm_16
    1091958U,	// VLD4LNqWB_fixed_Asm_32
    575862U,	// VLD4LNqWB_register_Asm_16
    1100150U,	// VLD4LNqWB_register_Asm_32
    537454966U,	// VLD4dAsm_16
    537979254U,	// VLD4dAsm_32
    538503542U,	// VLD4dAsm_8
    537454966U,	// VLD4dWB_fixed_Asm_16
    537979254U,	// VLD4dWB_fixed_Asm_32
    538503542U,	// VLD4dWB_fixed_Asm_8
    537438582U,	// VLD4dWB_register_Asm_16
    537962870U,	// VLD4dWB_register_Asm_32
    538487158U,	// VLD4dWB_register_Asm_8
    604563830U,	// VLD4qAsm_16
    605088118U,	// VLD4qAsm_32
    605612406U,	// VLD4qAsm_8
    604563830U,	// VLD4qWB_fixed_Asm_16
    605088118U,	// VLD4qWB_fixed_Asm_32
    605612406U,	// VLD4qWB_fixed_Asm_8
    604547446U,	// VLD4qWB_register_Asm_16
    605071734U,	// VLD4qWB_register_Asm_32
    605596022U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    567567U,	// VST1LNdAsm_16
    1091855U,	// VST1LNdAsm_32
    1616143U,	// VST1LNdAsm_8
    567567U,	// VST1LNdWB_fixed_Asm_16
    1091855U,	// VST1LNdWB_fixed_Asm_32
    1616143U,	// VST1LNdWB_fixed_Asm_8
    575759U,	// VST1LNdWB_register_Asm_16
    1100047U,	// VST1LNdWB_register_Asm_32
    1624335U,	// VST1LNdWB_register_Asm_8
    567632U,	// VST2LNdAsm_16
    1091920U,	// VST2LNdAsm_32
    1616208U,	// VST2LNdAsm_8
    567632U,	// VST2LNdWB_fixed_Asm_16
    1091920U,	// VST2LNdWB_fixed_Asm_32
    1616208U,	// VST2LNdWB_fixed_Asm_8
    575824U,	// VST2LNdWB_register_Asm_16
    1100112U,	// VST2LNdWB_register_Asm_32
    1624400U,	// VST2LNdWB_register_Asm_8
    567632U,	// VST2LNqAsm_16
    1091920U,	// VST2LNqAsm_32
    567632U,	// VST2LNqWB_fixed_Asm_16
    1091920U,	// VST2LNqWB_fixed_Asm_32
    575824U,	// VST2LNqWB_register_Asm_16
    1100112U,	// VST2LNqWB_register_Asm_32
    567653U,	// VST3LNdAsm_16
    1091941U,	// VST3LNdAsm_32
    1616229U,	// VST3LNdAsm_8
    567653U,	// VST3LNdWB_fixed_Asm_16
    1091941U,	// VST3LNdWB_fixed_Asm_32
    1616229U,	// VST3LNdWB_fixed_Asm_8
    575845U,	// VST3LNdWB_register_Asm_16
    1100133U,	// VST3LNdWB_register_Asm_32
    1624421U,	// VST3LNdWB_register_Asm_8
    567653U,	// VST3LNqAsm_16
    1091941U,	// VST3LNqAsm_32
    567653U,	// VST3LNqWB_fixed_Asm_16
    1091941U,	// VST3LNqWB_fixed_Asm_32
    575845U,	// VST3LNqWB_register_Asm_16
    1100133U,	// VST3LNqWB_register_Asm_32
    269019493U,	// VST3dAsm_16
    269543781U,	// VST3dAsm_32
    270068069U,	// VST3dAsm_8
    269019493U,	// VST3dWB_fixed_Asm_16
    269543781U,	// VST3dWB_fixed_Asm_32
    270068069U,	// VST3dWB_fixed_Asm_8
    269003109U,	// VST3dWB_register_Asm_16
    269527397U,	// VST3dWB_register_Asm_32
    270051685U,	// VST3dWB_register_Asm_8
    336128357U,	// VST3qAsm_16
    336652645U,	// VST3qAsm_32
    337176933U,	// VST3qAsm_8
    336128357U,	// VST3qWB_fixed_Asm_16
    336652645U,	// VST3qWB_fixed_Asm_32
    337176933U,	// VST3qWB_fixed_Asm_8
    336111973U,	// VST3qWB_register_Asm_16
    336636261U,	// VST3qWB_register_Asm_32
    337160549U,	// VST3qWB_register_Asm_8
    567675U,	// VST4LNdAsm_16
    1091963U,	// VST4LNdAsm_32
    1616251U,	// VST4LNdAsm_8
    567675U,	// VST4LNdWB_fixed_Asm_16
    1091963U,	// VST4LNdWB_fixed_Asm_32
    1616251U,	// VST4LNdWB_fixed_Asm_8
    575867U,	// VST4LNdWB_register_Asm_16
    1100155U,	// VST4LNdWB_register_Asm_32
    1624443U,	// VST4LNdWB_register_Asm_8
    567675U,	// VST4LNqAsm_16
    1091963U,	// VST4LNqAsm_32
    567675U,	// VST4LNqWB_fixed_Asm_16
    1091963U,	// VST4LNqWB_fixed_Asm_32
    575867U,	// VST4LNqWB_register_Asm_16
    1100155U,	// VST4LNqWB_register_Asm_32
    537454971U,	// VST4dAsm_16
    537979259U,	// VST4dAsm_32
    538503547U,	// VST4dAsm_8
    537454971U,	// VST4dWB_fixed_Asm_16
    537979259U,	// VST4dWB_fixed_Asm_32
    538503547U,	// VST4dWB_fixed_Asm_8
    537438587U,	// VST4dWB_register_Asm_16
    537962875U,	// VST4dWB_register_Asm_32
    538487163U,	// VST4dWB_register_Asm_8
    604563835U,	// VST4qAsm_16
    605088123U,	// VST4qAsm_32
    605612411U,	// VST4qAsm_8
    604563835U,	// VST4qWB_fixed_Asm_16
    605088123U,	// VST4qWB_fixed_Asm_32
    605612411U,	// VST4qWB_fixed_Asm_8
    604547451U,	// VST4qWB_register_Asm_16
    605071739U,	// VST4qWB_register_Asm_32
    605596027U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2CALL_BTI
    0U,	// t2DoLoopStart
    0U,	// t2DoLoopStartTP
    0U,	// t2LDMIA_RET
    27770U,	// t2LDRBpcrel
    29094U,	// t2LDRConstPool
    28288U,	// t2LDRHpcrel
    0U,	// t2LDRLIT_ga_pcrel
    27789U,	// t2LDRSBpcrel
    28327U,	// t2LDRSHpcrel
    673247654U,	// t2LDR_POST_imm
    740356518U,	// t2LDR_PRE_imm
    0U,	// t2LDRpci_pic
    29094U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2LoopEndDec
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    62064U,	// t2MOVSsi
    45680U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    62539U,	// t2MOVsi
    46155U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    673247744U,	// t2STR_POST_imm
    740356608U,	// t2STR_PRE_imm
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2SpeculationBarrierISBDSBEndBB
    0U,	// t2SpeculationBarrierSBEndBB
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopSetup
    0U,	// t2WhileLoopStart
    0U,	// t2WhileLoopStartLR
    0U,	// t2WhileLoopStartTP
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBLXNS_CALL
    0U,	// tBLXr_noip
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBXNS_RET
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tCMP_SWAP_16
    0U,	// tCMP_SWAP_32
    0U,	// tCMP_SWAP_8
    0U,	// tLDMIA_UPD
    29094U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    2632970U,	// ADCri
    2632970U,	// ADCrr
    2690314U,	// ADCrsi
    77066U,	// ADCrsr
    2633038U,	// ADDri
    2633038U,	// ADDrr
    2690382U,	// ADDrsi
    77134U,	// ADDrsr
    2650529U,	// ADR
    808535656U,	// AESD
    808535664U,	// AESE
    875644501U,	// AESIMC
    875644511U,	// AESMC
    2633103U,	// ANDri
    2633103U,	// ANDrr
    2690447U,	// ANDrsi
    77199U,	// ANDrsr
    808543710U,	// BF16VDOTI_VDOTD
    808543710U,	// BF16VDOTI_VDOTQ
    808543710U,	// BF16VDOTS_VDOTD
    808543710U,	// BF16VDOTS_VDOTQ
    876114856U,	// BF16_VCVT
    809036979U,	// BF16_VCVTB
    809038742U,	// BF16_VCVTT
    2682130U,	// BFC
    2666240U,	// BFI
    2632983U,	// BICri
    2632983U,	// BICrr
    2690327U,	// BICrsi
    77079U,	// BICrsr
    4278212U,	// BKPT
    4294544U,	// BL
    4278266U,	// BLX
    2733469U,	// BLX_pred
    4294650U,	// BLXi
    942255953U,	// BL_pred
    4278262U,	// BX
    2731794U,	// BXJ
    4838647U,	// BX_RET
    2733303U,	// BX_pred
    942255028U,	// Bcc
    810672130U,	// CDE_CX1
    1009298104U,	// CDE_CX1A
    1079633720U,	// CDE_CX1D
    1009298126U,	// CDE_CX1DA
    810672723U,	// CDE_CX2
    1009306302U,	// CDE_CX2A
    1146742590U,	// CDE_CX2D
    1009306324U,	// CDE_CX2DA
    810672729U,	// CDE_CX3
    1009388228U,	// CDE_CX3A
    1146742596U,	// CDE_CX3D
    1009388250U,	// CDE_CX3DA
    1213327062U,	// CDE_VCX1A_fpdp
    1213327062U,	// CDE_VCX1A_fpsp
    1009396407U,	// CDE_VCX1A_vec
    810672129U,	// CDE_VCX1_fpdp
    810672129U,	// CDE_VCX1_fpsp
    1009404180U,	// CDE_VCX1_vec
    1213327069U,	// CDE_VCX2A_fpdp
    1213327069U,	// CDE_VCX2A_fpsp
    1009412797U,	// CDE_VCX2A_vec
    810672722U,	// CDE_VCX2_fpdp
    810672722U,	// CDE_VCX2_fpsp
    1009396053U,	// CDE_VCX2_vec
    1213327076U,	// CDE_VCX3A_fpdp
    1213327076U,	// CDE_VCX3A_fpsp
    1009420995U,	// CDE_VCX3A_vec
    810672728U,	// CDE_VCX3_fpdp
    810672728U,	// CDE_VCX3_fpsp
    1009412458U,	// CDE_VCX3_vec
    1277825288U,	// CDP
    1348641343U,	// CDP2
    5445U,	// CLREX
    2651636U,	// CLZ
    2650273U,	// CMNri
    2650273U,	// CMNzrr
    2683041U,	// CMNzrsi
    2666657U,	// CMNzrsr
    2650386U,	// CMPri
    2650386U,	// CMPrr
    2683154U,	// CMPrsi
    2666770U,	// CMPrsr
    4278196U,	// CPS1p
    1412092501U,	// CPS2p
    1412092501U,	// CPS3p
    875644665U,	// CRC32B
    875644673U,	// CRC32CB
    875644783U,	// CRC32CH
    875644903U,	// CRC32CW
    875644775U,	// CRC32H
    875644895U,	// CRC32W
    2731508U,	// DBG
    190232U,	// DMB
    190237U,	// DSB
    2634192U,	// EORri
    2634192U,	// EORrr
    2691536U,	// EORrsi
    78288U,	// EORrsr
    4313779U,	// ERET
    1147696202U,	// FCONSTD
    7369802U,	// FCONSTH
    7894090U,	// FCONSTS
    875066610U,	// FLDMXDB_UPD
    2733201U,	// FLDMXIA
    875066513U,	// FLDMXIA_UPD
    8507993U,	// FMSTAT
    875066618U,	// FSTMXDB_UPD
    2733209U,	// FSTMXIA
    875066521U,	// FSTMXIA_UPD
    2732808U,	// HINT
    4278207U,	// HLT
    4278067U,	// HVC
    198434U,	// ISB
    2648800U,	// LDA
    2649009U,	// LDAB
    2651443U,	// LDAEX
    2649320U,	// LDAEXB
    1479044523U,	// LDAEXD
    2649816U,	// LDAEXH
    2649616U,	// LDAH
    1552590722U,	// LDC2L_OFFSET
    1619699586U,	// LDC2L_OPTION
    1619699586U,	// LDC2L_POST
    1686808450U,	// LDC2L_PRE
    1552589350U,	// LDC2_OFFSET
    1619698214U,	// LDC2_OPTION
    1619698214U,	// LDC2_POST
    1686807078U,	// LDC2_PRE
    1277734746U,	// LDCL_OFFSET
    1277734746U,	// LDCL_OPTION
    1277734746U,	// LDCL_POST
    1277734746U,	// LDCL_PRE
    1277734158U,	// LDC_OFFSET
    1277734158U,	// LDC_OPTION
    1277734158U,	// LDC_POST
    1277734158U,	// LDC_PRE
    2730724U,	// LDMDA
    875064036U,	// LDMDA_UPD
    2730979U,	// LDMDB
    875064291U,	// LDMDB_UPD
    2732107U,	// LDMIA
    875065419U,	// LDMIA_UPD
    2730998U,	// LDMIB
    875064310U,	// LDMIB_UPD
    2675360U,	// LDRBT_POST_IMM
    2675360U,	// LDRBT_POST_REG
    2673786U,	// LDRB_POST_IMM
    2673786U,	// LDRB_POST_REG
    2665594U,	// LDRB_PRE_IMM
    2673786U,	// LDRB_PRE_REG
    2681978U,	// LDRBi12
    2665594U,	// LDRBrs
    2674068U,	// LDRD
    2755988U,	// LDRD_POST
    2755988U,	// LDRD_PRE
    2651455U,	// LDREX
    2649334U,	// LDREXB
    1479044537U,	// LDREXD
    2649830U,	// LDREXH
    2666112U,	// LDRH
    2667203U,	// LDRHTi
    2675395U,	// LDRHTr
    2674304U,	// LDRH_POST
    2674304U,	// LDRH_PRE
    2665613U,	// LDRSB
    2667180U,	// LDRSBTi
    2675372U,	// LDRSBTr
    2673805U,	// LDRSB_POST
    2673805U,	// LDRSB_PRE
    2666151U,	// LDRSH
    2667215U,	// LDRSHTi
    2675407U,	// LDRSHTr
    2674343U,	// LDRSH_POST
    2674343U,	// LDRSH_PRE
    2675554U,	// LDRT_POST_IMM
    2675554U,	// LDRT_POST_REG
    2675110U,	// LDR_POST_IMM
    2675110U,	// LDR_POST_REG
    2666918U,	// LDR_PRE_IMM
    2675110U,	// LDR_PRE_REG
    2683302U,	// LDRcp
    2683302U,	// LDRi12
    2666918U,	// LDRrs
    1277825437U,	// MCR
    811770437U,	// MCR2
    1277743576U,	// MCRR
    811770443U,	// MCRR2
    2689828U,	// MLA
    2667053U,	// MLS
    9557067U,	// MOVPCLR
    2683821U,	// MOVTi16
    2659403U,	// MOVi
    2651250U,	// MOVi16
    2659403U,	// MOVr
    2659403U,	// MOVr_TC
    2634827U,	// MOVsi
    2692171U,	// MOVsr
    1009388837U,	// MRC
    10084908U,	// MRC2
    1747504425U,	// MRRC
    205362U,	// MRRC2
    2732634U,	// MRS
    2650714U,	// MRSbanked
    2732634U,	// MRSsys
    1814589934U,	// MSR
    1881698798U,	// MSRbanked
    1814589934U,	// MSRi
    2633774U,	// MUL
    2674699U,	// MVE_ASRLi
    2674699U,	// MVE_ASRLr
    875643877U,	// MVE_DLSTP_16
    875643124U,	// MVE_DLSTP_32
    875643486U,	// MVE_DLSTP_64
    875644536U,	// MVE_DLSTP_8
    1076482381U,	// MVE_LCTP
    1949394852U,	// MVE_LETP
    2674646U,	// MVE_LSLLi
    2674646U,	// MVE_LSLLr
    2674704U,	// MVE_LSRL
    875098538U,	// MVE_SQRSHR
    2756597U,	// MVE_SQRSHRL
    875097985U,	// MVE_SQSHL
    2674618U,	// MVE_SQSHLL
    875098545U,	// MVE_SRSHR
    2674685U,	// MVE_SRSHRL
    875098003U,	// MVE_UQRSHL
    2756552U,	// MVE_UQRSHLL
    875097991U,	// MVE_UQSHL
    2674625U,	// MVE_UQSHLL
    875098551U,	// MVE_URSHR
    2674692U,	// MVE_URSHRL
    10630092U,	// MVE_VABAVs16
    11154380U,	// MVE_VABAVs32
    11678668U,	// MVE_VABAVs8
    12202956U,	// MVE_VABAVu16
    12727244U,	// MVE_VABAVu32
    13251532U,	// MVE_VABAVu8
    7490886U,	// MVE_VABDf16
    8015174U,	// MVE_VABDf32
    10636614U,	// MVE_VABDs16
    11160902U,	// MVE_VABDs32
    11685190U,	// MVE_VABDs8
    12209478U,	// MVE_VABDu16
    12733766U,	// MVE_VABDu32
    13258054U,	// MVE_VABDu8
    7557660U,	// MVE_VABSf16
    8081948U,	// MVE_VABSf32
    10703388U,	// MVE_VABSs16
    11227676U,	// MVE_VABSs32
    11751964U,	// MVE_VABSs8
    13790473U,	// MVE_VADC
    13774586U,	// MVE_VADCI
    11168675U,	// MVE_VADDLVs32acc
    11162669U,	// MVE_VADDLVs32no_acc
    12741539U,	// MVE_VADDLVu32acc
    12735533U,	// MVE_VADDLVu32no_acc
    10636188U,	// MVE_VADDVs16acc
    10703892U,	// MVE_VADDVs16no_acc
    11160476U,	// MVE_VADDVs32acc
    11228180U,	// MVE_VADDVs32no_acc
    11684764U,	// MVE_VADDVs8acc
    11752468U,	// MVE_VADDVs8no_acc
    12209052U,	// MVE_VADDVu16acc
    12276756U,	// MVE_VADDVu16no_acc
    12733340U,	// MVE_VADDVu32acc
    12801044U,	// MVE_VADDVu32no_acc
    13257628U,	// MVE_VADDVu8acc
    13325332U,	// MVE_VADDVu8no_acc
    7490935U,	// MVE_VADD_qr_f16
    8015223U,	// MVE_VADD_qr_f32
    14306679U,	// MVE_VADD_qr_i16
    13782391U,	// MVE_VADD_qr_i32
    14830967U,	// MVE_VADD_qr_i8
    7490935U,	// MVE_VADDf16
    8015223U,	// MVE_VADDf32
    14306679U,	// MVE_VADDi16
    13782391U,	// MVE_VADDi32
    14830967U,	// MVE_VADDi8
    2772366U,	// MVE_VAND
    2772246U,	// MVE_VBIC
    14306582U,	// MVE_VBICimmi16
    13782294U,	// MVE_VBICimmi32
    676338U,	// MVE_VBRSR16
    1200626U,	// MVE_VBRSR32
    1724914U,	// MVE_VBRSR8
    7482706U,	// MVE_VCADDf16
    8006994U,	// MVE_VCADDf32
    14298450U,	// MVE_VCADDi16
    13774162U,	// MVE_VCADDi32
    14822738U,	// MVE_VCADDi8
    10703398U,	// MVE_VCLSs16
    11227686U,	// MVE_VCLSs32
    11751974U,	// MVE_VCLSs8
    14374387U,	// MVE_VCLZs16
    13850099U,	// MVE_VCLZs32
    14898675U,	// MVE_VCLZs8
    7498530U,	// MVE_VCMLAf16
    8022818U,	// MVE_VCMLAf32
    2020749585U,	// MVE_VCMPf16
    2020749585U,	// MVE_VCMPf16r
    2021273873U,	// MVE_VCMPf32
    2021273873U,	// MVE_VCMPf32r
    2027565329U,	// MVE_VCMPi16
    2027565329U,	// MVE_VCMPi16r
    2027041041U,	// MVE_VCMPi32
    2027041041U,	// MVE_VCMPi32r
    2028089617U,	// MVE_VCMPi8
    2028089617U,	// MVE_VCMPi8r
    2023895313U,	// MVE_VCMPs16
    2023895313U,	// MVE_VCMPs16r
    2024419601U,	// MVE_VCMPs32
    2024419601U,	// MVE_VCMPs32r
    2024943889U,	// MVE_VCMPs8
    2024943889U,	// MVE_VCMPs8r
    2025468177U,	// MVE_VCMPu16
    2025468177U,	// MVE_VCMPu16r
    2025992465U,	// MVE_VCMPu32
    2025992465U,	// MVE_VCMPu32r
    2026516753U,	// MVE_VCMPu8
    2026516753U,	// MVE_VCMPu8r
    7483436U,	// MVE_VCMULf16
    8007724U,	// MVE_VCMULf32
    873156946U,	// MVE_VCTP16
    873681234U,	// MVE_VCTP32
    887837010U,	// MVE_VCTP64
    874205522U,	// MVE_VCTP8
    821185715U,	// MVE_VCVTf16f32bh
    821187478U,	// MVE_VCVTf16f32th
    1157256104U,	// MVE_VCVTf16s16_fix
    1090212776U,	// MVE_VCVTf16s16n
    1157780392U,	// MVE_VCVTf16u16_fix
    1090737064U,	// MVE_VCVTf16u16n
    17517747U,	// MVE_VCVTf32f16bh
    17519510U,	// MVE_VCVTf32f16th
    1158828968U,	// MVE_VCVTf32s32_fix
    1091785640U,	// MVE_VCVTf32s32n
    1159353256U,	// MVE_VCVTf32u32_fix
    1092309928U,	// MVE_VCVTf32u32n
    1159877544U,	// MVE_VCVTs16f16_fix
    1092832112U,	// MVE_VCVTs16f16a
    1092833394U,	// MVE_VCVTs16f16m
    1092833490U,	// MVE_VCVTs16f16n
    1092833630U,	// MVE_VCVTs16f16p
    1092834216U,	// MVE_VCVTs16f16z
    1160401832U,	// MVE_VCVTs32f32_fix
    1093356400U,	// MVE_VCVTs32f32a
    1093357682U,	// MVE_VCVTs32f32m
    1093357778U,	// MVE_VCVTs32f32n
    1093357918U,	// MVE_VCVTs32f32p
    1093358504U,	// MVE_VCVTs32f32z
    1160926120U,	// MVE_VCVTu16f16_fix
    1093880688U,	// MVE_VCVTu16f16a
    1093881970U,	// MVE_VCVTu16f16m
    1093882066U,	// MVE_VCVTu16f16n
    1093882206U,	// MVE_VCVTu16f16p
    1093882792U,	// MVE_VCVTu16f16z
    1161450408U,	// MVE_VCVTu32f32_fix
    1094404976U,	// MVE_VCVTu32f32a
    1094406258U,	// MVE_VCVTu32f32m
    1094406354U,	// MVE_VCVTu32f32n
    1094406494U,	// MVE_VCVTu32f32p
    1094407080U,	// MVE_VCVTu32f32z
    12202340U,	// MVE_VDDUPu16
    12726628U,	// MVE_VDDUPu32
    13250916U,	// MVE_VDDUPu8
    741744U,	// MVE_VDUP16
    1266032U,	// MVE_VDUP32
    1790320U,	// MVE_VDUP8
    12218741U,	// MVE_VDWDUPu16
    12743029U,	// MVE_VDWDUPu32
    13267317U,	// MVE_VDWDUPu8
    2773455U,	// MVE_VEOR
    7483920U,	// MVE_VFMA_qr_Sf16
    8008208U,	// MVE_VFMA_qr_Sf32
    7482169U,	// MVE_VFMA_qr_f16
    8006457U,	// MVE_VFMA_qr_f32
    7482169U,	// MVE_VFMAf16
    8006457U,	// MVE_VFMAf32
    7483964U,	// MVE_VFMSf16
    8008252U,	// MVE_VFMSf32
    10636645U,	// MVE_VHADD_qr_s16
    11160933U,	// MVE_VHADD_qr_s32
    11685221U,	// MVE_VHADD_qr_s8
    12209509U,	// MVE_VHADD_qr_u16
    12733797U,	// MVE_VHADD_qr_u32
    13258085U,	// MVE_VHADD_qr_u8
    10636645U,	// MVE_VHADDs16
    11160933U,	// MVE_VHADDs32
    11685221U,	// MVE_VHADDs8
    12209509U,	// MVE_VHADDu16
    12733797U,	// MVE_VHADDu32
    13258085U,	// MVE_VHADDu8
    10628427U,	// MVE_VHCADDs16
    11152715U,	// MVE_VHCADDs32
    11677003U,	// MVE_VHCADDs8
    10636489U,	// MVE_VHSUB_qr_s16
    11160777U,	// MVE_VHSUB_qr_s32
    11685065U,	// MVE_VHSUB_qr_s8
    12209353U,	// MVE_VHSUB_qr_u16
    12733641U,	// MVE_VHSUB_qr_u32
    13257929U,	// MVE_VHSUB_qr_u8
    10636489U,	// MVE_VHSUBs16
    11160777U,	// MVE_VHSUBs32
    11685065U,	// MVE_VHSUBs8
    12209353U,	// MVE_VHSUBu16
    12733641U,	// MVE_VHSUBu32
    13257929U,	// MVE_VHSUBu8
    12202346U,	// MVE_VIDUPu16
    12726634U,	// MVE_VIDUPu32
    13250922U,	// MVE_VIDUPu8
    12218748U,	// MVE_VIWDUPu16
    12743036U,	// MVE_VIWDUPu32
    13267324U,	// MVE_VIWDUPu8
    21193581U,	// MVE_VLD20_16
    21717869U,	// MVE_VLD20_16_wb
    21192711U,	// MVE_VLD20_32
    21716999U,	// MVE_VLD20_32_wb
    21194217U,	// MVE_VLD20_8
    21718505U,	// MVE_VLD20_8_wb
    21193621U,	// MVE_VLD21_16
    21717909U,	// MVE_VLD21_16_wb
    21192777U,	// MVE_VLD21_32
    21717065U,	// MVE_VLD21_32_wb
    21194253U,	// MVE_VLD21_8
    21718541U,	// MVE_VLD21_8_wb
    21201793U,	// MVE_VLD40_16
    21726081U,	// MVE_VLD40_16_wb
    21200923U,	// MVE_VLD40_32
    21725211U,	// MVE_VLD40_32_wb
    21202427U,	// MVE_VLD40_8
    21726715U,	// MVE_VLD40_8_wb
    21201833U,	// MVE_VLD41_16
    21726121U,	// MVE_VLD41_16_wb
    21200989U,	// MVE_VLD41_32
    21725277U,	// MVE_VLD41_32_wb
    21202463U,	// MVE_VLD41_8
    21726751U,	// MVE_VLD41_8_wb
    21201853U,	// MVE_VLD42_16
    21726141U,	// MVE_VLD42_16_wb
    21201035U,	// MVE_VLD42_32
    21725323U,	// MVE_VLD42_32_wb
    21202481U,	// MVE_VLD42_8
    21726769U,	// MVE_VLD42_8_wb
    21201873U,	// MVE_VLD43_16
    21726161U,	// MVE_VLD43_16_wb
    21201068U,	// MVE_VLD43_32
    21725356U,	// MVE_VLD43_32_wb
    21202499U,	// MVE_VLD43_8
    21726787U,	// MVE_VLD43_8_wb
    10636409U,	// MVE_VLDRBS16
    883043449U,	// MVE_VLDRBS16_post
    883043449U,	// MVE_VLDRBS16_pre
    10636409U,	// MVE_VLDRBS16_rq
    11160697U,	// MVE_VLDRBS32
    883567737U,	// MVE_VLDRBS32_post
    883567737U,	// MVE_VLDRBS32_pre
    11160697U,	// MVE_VLDRBS32_rq
    12209273U,	// MVE_VLDRBU16
    884616313U,	// MVE_VLDRBU16_post
    884616313U,	// MVE_VLDRBU16_pre
    12209273U,	// MVE_VLDRBU16_rq
    12733561U,	// MVE_VLDRBU32
    885140601U,	// MVE_VLDRBU32_post
    885140601U,	// MVE_VLDRBU32_pre
    12733561U,	// MVE_VLDRBU32_rq
    13257849U,	// MVE_VLDRBU8
    885664889U,	// MVE_VLDRBU8_post
    885664889U,	// MVE_VLDRBU8_pre
    13257849U,	// MVE_VLDRBU8_rq
    22171027U,	// MVE_VLDRDU64_qi
    894578067U,	// MVE_VLDRDU64_qi_pre
    22171027U,	// MVE_VLDRDU64_rq
    22171027U,	// MVE_VLDRDU64_rq_u
    11161215U,	// MVE_VLDRHS32
    883568255U,	// MVE_VLDRHS32_post
    883568255U,	// MVE_VLDRHS32_pre
    11161215U,	// MVE_VLDRHS32_rq
    11161215U,	// MVE_VLDRHS32_rq_u
    12209791U,	// MVE_VLDRHU16
    884616831U,	// MVE_VLDRHU16_post
    884616831U,	// MVE_VLDRHU16_pre
    12209791U,	// MVE_VLDRHU16_rq
    12209791U,	// MVE_VLDRHU16_rq_u
    12734079U,	// MVE_VLDRHU32
    885141119U,	// MVE_VLDRHU32_post
    885141119U,	// MVE_VLDRHU32_pre
    12734079U,	// MVE_VLDRHU32_rq
    12734079U,	// MVE_VLDRHU32_rq_u
    12735590U,	// MVE_VLDRWU32
    885142630U,	// MVE_VLDRWU32_post
    885142630U,	// MVE_VLDRWU32_pre
    12735590U,	// MVE_VLDRWU32_qi
    885142630U,	// MVE_VLDRWU32_qi_pre
    12735590U,	// MVE_VLDRWU32_rq
    12735590U,	// MVE_VLDRWU32_rq_u
    883053581U,	// MVE_VMAXAVs16
    883577869U,	// MVE_VMAXAVs32
    884102157U,	// MVE_VMAXAVs8
    10636203U,	// MVE_VMAXAs16
    11160491U,	// MVE_VMAXAs32
    11684779U,	// MVE_VMAXAs8
    879907837U,	// MVE_VMAXNMAVf16
    880432125U,	// MVE_VMAXNMAVf32
    7490380U,	// MVE_VMAXNMAf16
    8014668U,	// MVE_VMAXNMAf32
    879907900U,	// MVE_VMAXNMVf16
    880432188U,	// MVE_VMAXNMVf32
    7491670U,	// MVE_VMAXNMf16
    8015958U,	// MVE_VMAXNMf32
    883053647U,	// MVE_VMAXVs16
    883577935U,	// MVE_VMAXVs32
    884102223U,	// MVE_VMAXVs8
    884626511U,	// MVE_VMAXVu16
    885150799U,	// MVE_VMAXVu32
    885675087U,	// MVE_VMAXVu8
    10638503U,	// MVE_VMAXs16
    11162791U,	// MVE_VMAXs32
    11687079U,	// MVE_VMAXs8
    12211367U,	// MVE_VMAXu16
    12735655U,	// MVE_VMAXu32
    13259943U,	// MVE_VMAXu8
    883053574U,	// MVE_VMINAVs16
    883577862U,	// MVE_VMINAVs32
    884102150U,	// MVE_VMINAVs8
    10636116U,	// MVE_VMINAs16
    11160404U,	// MVE_VMINAs32
    11684692U,	// MVE_VMINAs8
    879907828U,	// MVE_VMINNMAVf16
    880432116U,	// MVE_VMINNMAVf32
    7490372U,	// MVE_VMINNMAf16
    8014660U,	// MVE_VMINNMAf32
    879907892U,	// MVE_VMINNMVf16
    880432180U,	// MVE_VMINNMVf32
    7491663U,	// MVE_VMINNMf16
    8015951U,	// MVE_VMINNMf32
    883053636U,	// MVE_VMINVs16
    883577924U,	// MVE_VMINVs32
    884102212U,	// MVE_VMINVs8
    884626500U,	// MVE_VMINVu16
    885150788U,	// MVE_VMINVu32
    885675076U,	// MVE_VMINVu8
    10637468U,	// MVE_VMINs16
    11161756U,	// MVE_VMINs32
    11686044U,	// MVE_VMINs8
    12210332U,	// MVE_VMINu16
    12734620U,	// MVE_VMINu32
    13258908U,	// MVE_VMINu8
    10627958U,	// MVE_VMLADAVas16
    11152246U,	// MVE_VMLADAVas32
    11676534U,	// MVE_VMLADAVas8
    12200822U,	// MVE_VMLADAVau16
    12725110U,	// MVE_VMLADAVau32
    13249398U,	// MVE_VMLADAVau8
    10630344U,	// MVE_VMLADAVaxs16
    11154632U,	// MVE_VMLADAVaxs32
    11678920U,	// MVE_VMLADAVaxs8
    10638290U,	// MVE_VMLADAVs16
    11162578U,	// MVE_VMLADAVs32
    11686866U,	// MVE_VMLADAVs8
    12211154U,	// MVE_VMLADAVu16
    12735442U,	// MVE_VMLADAVu32
    13259730U,	// MVE_VMLADAVu8
    10638797U,	// MVE_VMLADAVxs16
    11163085U,	// MVE_VMLADAVxs32
    11687373U,	// MVE_VMLADAVxs8
    10652543U,	// MVE_VMLALDAVas16
    11176831U,	// MVE_VMLALDAVas32
    12225407U,	// MVE_VMLALDAVau16
    12749695U,	// MVE_VMLALDAVau32
    10654930U,	// MVE_VMLALDAVaxs16
    11179218U,	// MVE_VMLALDAVaxs32
    10630106U,	// MVE_VMLALDAVs16
    11154394U,	// MVE_VMLALDAVs32
    12202970U,	// MVE_VMLALDAVu16
    12727258U,	// MVE_VMLALDAVu32
    10630614U,	// MVE_VMLALDAVxs16
    11154902U,	// MVE_VMLALDAVxs32
    14299658U,	// MVE_VMLAS_qr_i16
    13775370U,	// MVE_VMLAS_qr_i32
    14823946U,	// MVE_VMLAS_qr_i8
    14297908U,	// MVE_VMLA_qr_i16
    13773620U,	// MVE_VMLA_qr_i32
    14822196U,	// MVE_VMLA_qr_i8
    10627987U,	// MVE_VMLSDAVas16
    11152275U,	// MVE_VMLSDAVas32
    11676563U,	// MVE_VMLSDAVas8
    10630376U,	// MVE_VMLSDAVaxs16
    11154664U,	// MVE_VMLSDAVaxs32
    11678952U,	// MVE_VMLSDAVaxs8
    10638316U,	// MVE_VMLSDAVs16
    11162604U,	// MVE_VMLSDAVs32
    11686892U,	// MVE_VMLSDAVs8
    10638826U,	// MVE_VMLSDAVxs16
    11163114U,	// MVE_VMLSDAVxs32
    11687402U,	// MVE_VMLSDAVxs8
    10652553U,	// MVE_VMLSLDAVas16
    11176841U,	// MVE_VMLSLDAVas32
    10654941U,	// MVE_VMLSLDAVaxs16
    11179229U,	// MVE_VMLSLDAVaxs32
    10630115U,	// MVE_VMLSLDAVs16
    11154403U,	// MVE_VMLSLDAVs32
    10630624U,	// MVE_VMLSLDAVxs16
    11154912U,	// MVE_VMLSLDAVxs32
    10701854U,	// MVE_VMOVLs16bh
    10703612U,	// MVE_VMOVLs16th
    11750430U,	// MVE_VMOVLs8bh
    11752188U,	// MVE_VMOVLs8th
    12274718U,	// MVE_VMOVLu16bh
    12276476U,	// MVE_VMOVLu16th
    13323294U,	// MVE_VMOVLu8bh
    13325052U,	// MVE_VMOVLu8th
    14306413U,	// MVE_VMOVNi16bh
    14308177U,	// MVE_VMOVNi16th
    13782125U,	// MVE_VMOVNi32bh
    13783889U,	// MVE_VMOVNi32th
    1111114U,	// MVE_VMOV_from_lane_32
    10548298U,	// MVE_VMOV_from_lane_s16
    11596874U,	// MVE_VMOV_from_lane_s8
    12121162U,	// MVE_VMOV_from_lane_u16
    13169738U,	// MVE_VMOV_from_lane_u8
    2757706U,	// MVE_VMOV_q_rr
    2675786U,	// MVE_VMOV_rr_q
    570442U,	// MVE_VMOV_to_lane_16
    1094730U,	// MVE_VMOV_to_lane_32
    1619018U,	// MVE_VMOV_to_lane_8
    8082506U,	// MVE_VMOVimmf32
    14373962U,	// MVE_VMOVimmi16
    13849674U,	// MVE_VMOVimmi32
    2103137354U,	// MVE_VMOVimmi64
    14898250U,	// MVE_VMOVimmi8
    10636921U,	// MVE_VMULHs16
    11161209U,	// MVE_VMULHs32
    11685497U,	// MVE_VMULHs8
    12209785U,	// MVE_VMULHu16
    12734073U,	// MVE_VMULHu32
    13258361U,	// MVE_VMULHu8
    23219218U,	// MVE_VMULLBp16
    23743506U,	// MVE_VMULLBp8
    10636306U,	// MVE_VMULLBs16
    11160594U,	// MVE_VMULLBs32
    11684882U,	// MVE_VMULLBs8
    12209170U,	// MVE_VMULLBu16
    12733458U,	// MVE_VMULLBu32
    13257746U,	// MVE_VMULLBu8
    23220981U,	// MVE_VMULLTp16
    23745269U,	// MVE_VMULLTp8
    10638069U,	// MVE_VMULLTs16
    11162357U,	// MVE_VMULLTs32
    11686645U,	// MVE_VMULLTs8
    12210933U,	// MVE_VMULLTu16
    12735221U,	// MVE_VMULLTu32
    13259509U,	// MVE_VMULLTu8
    7491646U,	// MVE_VMUL_qr_f16
    8015934U,	// MVE_VMUL_qr_f32
    14307390U,	// MVE_VMUL_qr_i16
    13783102U,	// MVE_VMUL_qr_i32
    14831678U,	// MVE_VMUL_qr_i8
    7491646U,	// MVE_VMULf16
    8015934U,	// MVE_VMULf32
    14307390U,	// MVE_VMULi16
    13783102U,	// MVE_VMULi32
    14831678U,	// MVE_VMULi8
    2838769U,	// MVE_VMVN
    14373105U,	// MVE_VMVNimmi16
    13848817U,	// MVE_VMVNimmi32
    7556611U,	// MVE_VNEGf16
    8080899U,	// MVE_VNEGf32
    10702339U,	// MVE_VNEGs16
    11226627U,	// MVE_VNEGs32
    11750915U,	// MVE_VNEGs8
    2773185U,	// MVE_VORN
    2773469U,	// MVE_VORR
    14307805U,	// MVE_VORRimmi16
    13783517U,	// MVE_VORRimmi32
    1076581208U,	// MVE_VPNOT
    2772855U,	// MVE_VPSEL
    1076605810U,	// MVE_VPST
    2028188510U,	// MVE_VPTv16i8
    2028188510U,	// MVE_VPTv16i8r
    2025042782U,	// MVE_VPTv16s8
    2025042782U,	// MVE_VPTv16s8r
    2026615646U,	// MVE_VPTv16u8
    2026615646U,	// MVE_VPTv16u8r
    2021372766U,	// MVE_VPTv4f32
    2021372766U,	// MVE_VPTv4f32r
    2027139934U,	// MVE_VPTv4i32
    2027139934U,	// MVE_VPTv4i32r
    2024518494U,	// MVE_VPTv4s32
    2024518494U,	// MVE_VPTv4s32r
    2026091358U,	// MVE_VPTv4u32
    2026091358U,	// MVE_VPTv4u32r
    2020848478U,	// MVE_VPTv8f16
    2020848478U,	// MVE_VPTv8f16r
    2027664222U,	// MVE_VPTv8i16
    2027664222U,	// MVE_VPTv8i16r
    2023994206U,	// MVE_VPTv8s16
    2023994206U,	// MVE_VPTv8s16r
    2025567070U,	// MVE_VPTv8u16
    2025567070U,	// MVE_VPTv8u16r
    10703382U,	// MVE_VQABSs16
    11227670U,	// MVE_VQABSs32
    11751958U,	// MVE_VQABSs8
    10636657U,	// MVE_VQADD_qr_s16
    11160945U,	// MVE_VQADD_qr_s32
    11685233U,	// MVE_VQADD_qr_s8
    12209521U,	// MVE_VQADD_qr_u16
    12733809U,	// MVE_VQADD_qr_u32
    13258097U,	// MVE_VQADD_qr_u8
    10636657U,	// MVE_VQADDs16
    11160945U,	// MVE_VQADDs32
    11685233U,	// MVE_VQADDs8
    12209521U,	// MVE_VQADDu16
    12733809U,	// MVE_VQADDu32
    13258097U,	// MVE_VQADDu8
    10630491U,	// MVE_VQDMLADHXs16
    11154779U,	// MVE_VQDMLADHXs32
    11679067U,	// MVE_VQDMLADHXs8
    10628662U,	// MVE_VQDMLADHs16
    11152950U,	// MVE_VQDMLADHs32
    11677238U,	// MVE_VQDMLADHs8
    10628629U,	// MVE_VQDMLAH_qrs16
    11152917U,	// MVE_VQDMLAH_qrs32
    11677205U,	// MVE_VQDMLAH_qrs8
    10628747U,	// MVE_VQDMLASH_qrs16
    11153035U,	// MVE_VQDMLASH_qrs32
    11677323U,	// MVE_VQDMLASH_qrs8
    10630512U,	// MVE_VQDMLSDHXs16
    11154800U,	// MVE_VQDMLSDHXs32
    11679088U,	// MVE_VQDMLSDHXs8
    10628681U,	// MVE_VQDMLSDHs16
    11152969U,	// MVE_VQDMLSDHs32
    11677257U,	// MVE_VQDMLSDHs8
    10636897U,	// MVE_VQDMULH_qr_s16
    11161185U,	// MVE_VQDMULH_qr_s32
    11685473U,	// MVE_VQDMULH_qr_s8
    10636897U,	// MVE_VQDMULHi16
    11161185U,	// MVE_VQDMULHi32
    11685473U,	// MVE_VQDMULHi8
    10636297U,	// MVE_VQDMULL_qr_s16bh
    10638060U,	// MVE_VQDMULL_qr_s16th
    11160585U,	// MVE_VQDMULL_qr_s32bh
    11162348U,	// MVE_VQDMULL_qr_s32th
    10636297U,	// MVE_VQDMULLs16bh
    10638060U,	// MVE_VQDMULLs16th
    11160585U,	// MVE_VQDMULLs32bh
    11162348U,	// MVE_VQDMULLs32th
    10636389U,	// MVE_VQMOVNs16bh
    10638153U,	// MVE_VQMOVNs16th
    11160677U,	// MVE_VQMOVNs32bh
    11162441U,	// MVE_VQMOVNs32th
    12209253U,	// MVE_VQMOVNu16bh
    12211017U,	// MVE_VQMOVNu16th
    12733541U,	// MVE_VQMOVNu32bh
    12735305U,	// MVE_VQMOVNu32th
    10636380U,	// MVE_VQMOVUNs16bh
    10638144U,	// MVE_VQMOVUNs16th
    11160668U,	// MVE_VQMOVUNs32bh
    11162432U,	// MVE_VQMOVUNs32th
    10702333U,	// MVE_VQNEGs16
    11226621U,	// MVE_VQNEGs32
    11750909U,	// MVE_VQNEGs8
    10630501U,	// MVE_VQRDMLADHXs16
    11154789U,	// MVE_VQRDMLADHXs32
    11679077U,	// MVE_VQRDMLADHXs8
    10628671U,	// MVE_VQRDMLADHs16
    11152959U,	// MVE_VQRDMLADHs32
    11677247U,	// MVE_VQRDMLADHs8
    10628637U,	// MVE_VQRDMLAH_qrs16
    11152925U,	// MVE_VQRDMLAH_qrs32
    11677213U,	// MVE_VQRDMLAH_qrs8
    10628756U,	// MVE_VQRDMLASH_qrs16
    11153044U,	// MVE_VQRDMLASH_qrs32
    11677332U,	// MVE_VQRDMLASH_qrs8
    10630522U,	// MVE_VQRDMLSDHXs16
    11154810U,	// MVE_VQRDMLSDHXs32
    11679098U,	// MVE_VQRDMLSDHXs8
    10628690U,	// MVE_VQRDMLSDHs16
    11152978U,	// MVE_VQRDMLSDHs32
    11677266U,	// MVE_VQRDMLSDHs8
    10636905U,	// MVE_VQRDMULH_qr_s16
    11161193U,	// MVE_VQRDMULH_qr_s32
    11685481U,	// MVE_VQRDMULH_qr_s8
    10636905U,	// MVE_VQRDMULHi16
    11161193U,	// MVE_VQRDMULHi32
    11685481U,	// MVE_VQRDMULHi8
    10637210U,	// MVE_VQRSHL_by_vecs16
    11161498U,	// MVE_VQRSHL_by_vecs32
    11685786U,	// MVE_VQRSHL_by_vecs8
    12210074U,	// MVE_VQRSHL_by_vecu16
    12734362U,	// MVE_VQRSHL_by_vecu32
    13258650U,	// MVE_VQRSHL_by_vecu8
    10637210U,	// MVE_VQRSHL_qrs16
    11161498U,	// MVE_VQRSHL_qrs32
    11685786U,	// MVE_VQRSHL_qrs8
    12210074U,	// MVE_VQRSHL_qru16
    12734362U,	// MVE_VQRSHL_qru32
    13258650U,	// MVE_VQRSHL_qru8
    10628145U,	// MVE_VQRSHRNbhs16
    11152433U,	// MVE_VQRSHRNbhs32
    12201009U,	// MVE_VQRSHRNbhu16
    12725297U,	// MVE_VQRSHRNbhu32
    10629909U,	// MVE_VQRSHRNths16
    11154197U,	// MVE_VQRSHRNths32
    12202773U,	// MVE_VQRSHRNthu16
    12727061U,	// MVE_VQRSHRNthu32
    10628178U,	// MVE_VQRSHRUNs16bh
    10629942U,	// MVE_VQRSHRUNs16th
    11152466U,	// MVE_VQRSHRUNs32bh
    11154230U,	// MVE_VQRSHRUNs32th
    10638277U,	// MVE_VQSHLU_imms16
    11162565U,	// MVE_VQSHLU_imms32
    11686853U,	// MVE_VQSHLU_imms8
    10637197U,	// MVE_VQSHL_by_vecs16
    11161485U,	// MVE_VQSHL_by_vecs32
    11685773U,	// MVE_VQSHL_by_vecs8
    12210061U,	// MVE_VQSHL_by_vecu16
    12734349U,	// MVE_VQSHL_by_vecu32
    13258637U,	// MVE_VQSHL_by_vecu8
    10637197U,	// MVE_VQSHL_qrs16
    11161485U,	// MVE_VQSHL_qrs32
    11685773U,	// MVE_VQSHL_qrs8
    12210061U,	// MVE_VQSHL_qru16
    12734349U,	// MVE_VQSHL_qru32
    13258637U,	// MVE_VQSHL_qru8
    10637197U,	// MVE_VQSHLimms16
    11161485U,	// MVE_VQSHLimms32
    11685773U,	// MVE_VQSHLimms8
    12210061U,	// MVE_VQSHLimmu16
    12734349U,	// MVE_VQSHLimmu32
    13258637U,	// MVE_VQSHLimmu8
    10628137U,	// MVE_VQSHRNbhs16
    11152425U,	// MVE_VQSHRNbhs32
    12201001U,	// MVE_VQSHRNbhu16
    12725289U,	// MVE_VQSHRNbhu32
    10629901U,	// MVE_VQSHRNths16
    11154189U,	// MVE_VQSHRNths32
    12202765U,	// MVE_VQSHRNthu16
    12727053U,	// MVE_VQSHRNthu32
    10628169U,	// MVE_VQSHRUNs16bh
    10629933U,	// MVE_VQSHRUNs16th
    11152457U,	// MVE_VQSHRUNs32bh
    11154221U,	// MVE_VQSHRUNs32th
    10636495U,	// MVE_VQSUB_qr_s16
    11160783U,	// MVE_VQSUB_qr_s32
    11685071U,	// MVE_VQSUB_qr_s8
    12209359U,	// MVE_VQSUB_qr_u16
    12733647U,	// MVE_VQSUB_qr_u32
    13257935U,	// MVE_VQSUB_qr_u8
    10636495U,	// MVE_VQSUBs16
    11160783U,	// MVE_VQSUBs32
    11685071U,	// MVE_VQSUBs8
    12209359U,	// MVE_VQSUBu16
    12733647U,	// MVE_VQSUBu32
    13257935U,	// MVE_VQSUBu8
    1788408U,	// MVE_VREV16_8
    739609U,	// MVE_VREV32_16
    1788185U,	// MVE_VREV32_8
    739695U,	// MVE_VREV64_16
    1263983U,	// MVE_VREV64_32
    1788271U,	// MVE_VREV64_8
    10636638U,	// MVE_VRHADDs16
    11160926U,	// MVE_VRHADDs32
    11685214U,	// MVE_VRHADDs8
    12209502U,	// MVE_VRHADDu16
    12733790U,	// MVE_VRHADDu32
    13258078U,	// MVE_VRHADDu8
    7555941U,	// MVE_VRINTf16A
    7557221U,	// MVE_VRINTf16M
    7557323U,	// MVE_VRINTf16N
    7557463U,	// MVE_VRINTf16P
    7558598U,	// MVE_VRINTf16X
    7558648U,	// MVE_VRINTf16Z
    8080229U,	// MVE_VRINTf32A
    8081509U,	// MVE_VRINTf32M
    8081611U,	// MVE_VRINTf32N
    8081751U,	// MVE_VRINTf32P
    8082886U,	// MVE_VRINTf32X
    8082936U,	// MVE_VRINTf32Z
    11176688U,	// MVE_VRMLALDAVHas32
    12749552U,	// MVE_VRMLALDAVHau32
    11179127U,	// MVE_VRMLALDAVHaxs32
    11153090U,	// MVE_VRMLALDAVHs32
    12725954U,	// MVE_VRMLALDAVHu32
    11154821U,	// MVE_VRMLALDAVHxs32
    11176700U,	// MVE_VRMLSLDAVHas32
    11179140U,	// MVE_VRMLSLDAVHaxs32
    11153101U,	// MVE_VRMLSLDAVHs32
    11154833U,	// MVE_VRMLSLDAVHxs32
    10636914U,	// MVE_VRMULHs16
    11161202U,	// MVE_VRMULHs32
    11685490U,	// MVE_VRMULHs8
    12209778U,	// MVE_VRMULHu16
    12734066U,	// MVE_VRMULHu32
    13258354U,	// MVE_VRMULHu8
    10637217U,	// MVE_VRSHL_by_vecs16
    11161505U,	// MVE_VRSHL_by_vecs32
    11685793U,	// MVE_VRSHL_by_vecs8
    12210081U,	// MVE_VRSHL_by_vecu16
    12734369U,	// MVE_VRSHL_by_vecu32
    13258657U,	// MVE_VRSHL_by_vecu8
    10637217U,	// MVE_VRSHL_qrs16
    11161505U,	// MVE_VRSHL_qrs32
    11685793U,	// MVE_VRSHL_qrs8
    12210081U,	// MVE_VRSHL_qru16
    12734369U,	// MVE_VRSHL_qru32
    13258657U,	// MVE_VRSHL_qru8
    14298170U,	// MVE_VRSHRNi16bh
    14299934U,	// MVE_VRSHRNi16th
    13773882U,	// MVE_VRSHRNi32bh
    13775646U,	// MVE_VRSHRNi32th
    10637757U,	// MVE_VRSHR_imms16
    11162045U,	// MVE_VRSHR_imms32
    11686333U,	// MVE_VRSHR_imms8
    12210621U,	// MVE_VRSHR_immu16
    12734909U,	// MVE_VRSHR_immu32
    13259197U,	// MVE_VRSHR_immu8
    13790468U,	// MVE_VSBC
    13774580U,	// MVE_VSBCI
    808086811U,	// MVE_VSHLC
    10636290U,	// MVE_VSHLL_imms16bh
    10638053U,	// MVE_VSHLL_imms16th
    11684866U,	// MVE_VSHLL_imms8bh
    11686629U,	// MVE_VSHLL_imms8th
    12209154U,	// MVE_VSHLL_immu16bh
    12210917U,	// MVE_VSHLL_immu16th
    13257730U,	// MVE_VSHLL_immu8bh
    13259493U,	// MVE_VSHLL_immu8th
    10701826U,	// MVE_VSHLL_lws16bh
    10703589U,	// MVE_VSHLL_lws16th
    11750402U,	// MVE_VSHLL_lws8bh
    11752165U,	// MVE_VSHLL_lws8th
    12274690U,	// MVE_VSHLL_lwu16bh
    12276453U,	// MVE_VSHLL_lwu16th
    13323266U,	// MVE_VSHLL_lwu8bh
    13325029U,	// MVE_VSHLL_lwu8th
    10637223U,	// MVE_VSHL_by_vecs16
    11161511U,	// MVE_VSHL_by_vecs32
    11685799U,	// MVE_VSHL_by_vecs8
    12210087U,	// MVE_VSHL_by_vecu16
    12734375U,	// MVE_VSHL_by_vecu32
    13258663U,	// MVE_VSHL_by_vecu8
    14307239U,	// MVE_VSHL_immi16
    13782951U,	// MVE_VSHL_immi32
    14831527U,	// MVE_VSHL_immi8
    10637223U,	// MVE_VSHL_qrs16
    11161511U,	// MVE_VSHL_qrs32
    11685799U,	// MVE_VSHL_qrs8
    12210087U,	// MVE_VSHL_qru16
    12734375U,	// MVE_VSHL_qru32
    13258663U,	// MVE_VSHL_qru8
    14298178U,	// MVE_VSHRNi16bh
    14299942U,	// MVE_VSHRNi16th
    13773890U,	// MVE_VSHRNi32bh
    13775654U,	// MVE_VSHRNi32th
    10637763U,	// MVE_VSHR_imms16
    11162051U,	// MVE_VSHR_imms32
    11686339U,	// MVE_VSHR_imms8
    12210627U,	// MVE_VSHR_immu16
    12734915U,	// MVE_VSHR_immu32
    13259203U,	// MVE_VSHR_immu8
    667400U,	// MVE_VSLIimm16
    1191688U,	// MVE_VSLIimm32
    1715976U,	// MVE_VSLIimm8
    667405U,	// MVE_VSRIimm16
    1191693U,	// MVE_VSRIimm32
    1715981U,	// MVE_VSRIimm8
    24339319U,	// MVE_VST20_16
    246647U,	// MVE_VST20_16_wb
    24338449U,	// MVE_VST20_32
    245777U,	// MVE_VST20_32_wb
    24339954U,	// MVE_VST20_8
    247282U,	// MVE_VST20_8_wb
    24339359U,	// MVE_VST21_16
    246687U,	// MVE_VST21_16_wb
    24338515U,	// MVE_VST21_32
    245843U,	// MVE_VST21_32_wb
    24339990U,	// MVE_VST21_8
    247318U,	// MVE_VST21_8_wb
    24347531U,	// MVE_VST40_16
    254859U,	// MVE_VST40_16_wb
    24346661U,	// MVE_VST40_32
    253989U,	// MVE_VST40_32_wb
    24348164U,	// MVE_VST40_8
    255492U,	// MVE_VST40_8_wb
    24347571U,	// MVE_VST41_16
    254899U,	// MVE_VST41_16_wb
    24346727U,	// MVE_VST41_32
    254055U,	// MVE_VST41_32_wb
    24348200U,	// MVE_VST41_8
    255528U,	// MVE_VST41_8_wb
    24347591U,	// MVE_VST42_16
    254919U,	// MVE_VST42_16_wb
    24346773U,	// MVE_VST42_32
    254101U,	// MVE_VST42_32_wb
    24348218U,	// MVE_VST42_8
    255546U,	// MVE_VST42_8_wb
    24347611U,	// MVE_VST43_16
    254939U,	// MVE_VST43_16_wb
    24346806U,	// MVE_VST43_32
    254134U,	// MVE_VST43_32_wb
    24348236U,	// MVE_VST43_8
    255564U,	// MVE_VST43_8_wb
    674943U,	// MVE_VSTRB16
    873081983U,	// MVE_VSTRB16_post
    873081983U,	// MVE_VSTRB16_pre
    674943U,	// MVE_VSTRB16_rq
    1199231U,	// MVE_VSTRB32
    873606271U,	// MVE_VSTRB32_post
    873606271U,	// MVE_VSTRB32_pre
    1199231U,	// MVE_VSTRB32_rq
    1723519U,	// MVE_VSTRB8_rq
    1723519U,	// MVE_VSTRBU8
    874130559U,	// MVE_VSTRBU8_post
    874130559U,	// MVE_VSTRBU8_pre
    15355289U,	// MVE_VSTRD64_qi
    887762329U,	// MVE_VSTRD64_qi_pre
    15355289U,	// MVE_VSTRD64_rq
    15355289U,	// MVE_VSTRD64_rq_u
    675461U,	// MVE_VSTRH16_rq
    675461U,	// MVE_VSTRH16_rq_u
    1199749U,	// MVE_VSTRH32
    873606789U,	// MVE_VSTRH32_post
    873606789U,	// MVE_VSTRH32_pre
    1199749U,	// MVE_VSTRH32_rq
    1199749U,	// MVE_VSTRH32_rq_u
    675461U,	// MVE_VSTRHU16
    873082501U,	// MVE_VSTRHU16_post
    873082501U,	// MVE_VSTRHU16_pre
    1201260U,	// MVE_VSTRW32_qi
    873608300U,	// MVE_VSTRW32_qi_pre
    1201260U,	// MVE_VSTRW32_rq
    1201260U,	// MVE_VSTRW32_rq_u
    1201260U,	// MVE_VSTRWU32
    873608300U,	// MVE_VSTRWU32_post
    873608300U,	// MVE_VSTRWU32_pre
    7490773U,	// MVE_VSUB_qr_f16
    8015061U,	// MVE_VSUB_qr_f32
    14306517U,	// MVE_VSUB_qr_i16
    13782229U,	// MVE_VSUB_qr_i32
    14830805U,	// MVE_VSUB_qr_i8
    7490773U,	// MVE_VSUBf16
    8015061U,	// MVE_VSUBf32
    14306517U,	// MVE_VSUBi16
    13782229U,	// MVE_VSUBi32
    14830805U,	// MVE_VSUBi8
    875643887U,	// MVE_WLSTP_16
    875643134U,	// MVE_WLSTP_32
    875643496U,	// MVE_WLSTP_64
    875644545U,	// MVE_WLSTP_8
    2658546U,	// MVNi
    2658546U,	// MVNr
    2633970U,	// MVNsi
    2691314U,	// MVNsr
    875643322U,	// NEON_VMAXNMNDf
    875644217U,	// NEON_VMAXNMNDh
    875643322U,	// NEON_VMAXNMNQf
    875644217U,	// NEON_VMAXNMNQh
    875643310U,	// NEON_VMINNMNDf
    875644205U,	// NEON_VMINNMNDh
    875643310U,	// NEON_VMINNMNQf
    875644205U,	// NEON_VMINNMNQh
    2634206U,	// ORRri
    2634206U,	// ORRrr
    2691550U,	// ORRrsi
    78302U,	// ORRrsr
    2667147U,	// PKHBT
    2665630U,	// PKHTB
    264176U,	// PLDWi12
    272368U,	// PLDWrs
    264010U,	// PLDi12
    272202U,	// PLDrs
    264056U,	// PLIi12
    272248U,	// PLIrs
    2682226U,	// QADD
    2681301U,	// QADD16
    2681404U,	// QADD8
    2684343U,	// QASX
    2682200U,	// QDADD
    2682051U,	// QDSUB
    2684089U,	// QSAX
    2682064U,	// QSUB
    2681263U,	// QSUB16
    2681365U,	// QSUB8
    2650838U,	// RBIT
    2651162U,	// REV
    2648569U,	// REV16
    2649778U,	// REVSH
    4277995U,	// RFEDA
    24733419U,	// RFEDA_UPD
    4278026U,	// RFEDB
    24733450U,	// RFEDB_UPD
    4278002U,	// RFEIA
    24733426U,	// RFEIA_UPD
    4278033U,	// RFEIB
    24733457U,	// RFEIB_UPD
    2632847U,	// RSBri
    2632847U,	// RSBrr
    2690191U,	// RSBrsi
    76943U,	// RSBrsr
    2633006U,	// RSCri
    2633006U,	// RSCrr
    2690350U,	// RSCrsi
    77102U,	// RSCrsr
    2681308U,	// SADD16
    2681410U,	// SADD8
    2684348U,	// SASX
    3206U,	// SB
    2632965U,	// SBCri
    2632965U,	// SBCrr
    2690309U,	// SBCrsi
    77061U,	// SBCrsr
    2667857U,	// SBFX
    2683934U,	// SDIV
    2682745U,	// SEL
    280399U,	// SETEND
    4278172U,	// SETPAN
    808534208U,	// SHA1C
    875643082U,	// SHA1H
    808534240U,	// SHA1M
    808534250U,	// SHA1P
    808534063U,	// SHA1SU0
    808534129U,	// SHA1SU1
    808534228U,	// SHA256H
    808534175U,	// SHA256H2
    808534075U,	// SHA256SU0
    808534141U,	// SHA256SU1
    2681284U,	// SHADD16
    2681389U,	// SHADD8
    2684330U,	// SHASX
    2684076U,	// SHSAX
    2681246U,	// SHSUB16
    2681350U,	// SHSUB8
    2731297U,	// SMC
    2665410U,	// SMLABB
    2667140U,	// SMLABT
    2665786U,	// SMLAD
    2667783U,	// SMLADX
    290621U,	// SMLAL
    2755529U,	// SMLALBB
    2757265U,	// SMLALBT
    2755964U,	// SMLALD
    2757909U,	// SMLALDX
    2755748U,	// SMLALTB
    2757507U,	// SMLALTT
    2665623U,	// SMLATB
    2667388U,	// SMLATT
    2665690U,	// SMLAWB
    2667442U,	// SMLAWT
    2665887U,	// SMLSD
    2667813U,	// SMLSDX
    2755975U,	// SMLSLD
    2757917U,	// SMLSLDX
    2665256U,	// SMMLA
    2666902U,	// SMMLAR
    2667051U,	// SMMLS
    2666982U,	// SMMLSR
    2682930U,	// SMMUL
    2683336U,	// SMMULR
    2682176U,	// SMUAD
    2684174U,	// SMUADX
    2681809U,	// SMULBB
    2683545U,	// SMULBT
    2691043U,	// SMULL
    2682028U,	// SMULTB
    2683787U,	// SMULTT
    2682081U,	// SMULWB
    2683833U,	// SMULWT
    2682277U,	// SMUSD
    2684204U,	// SMUSDX
    4278330U,	// SRSDA
    4278282U,	// SRSDA_UPD
    4278352U,	// SRSDB
    4278306U,	// SRSDB_UPD
    4278341U,	// SRSIA
    4278294U,	// SRSIA_UPD
    4278363U,	// SRSIB
    4278318U,	// SRSIB_UPD
    2667125U,	// SSAT
    2681322U,	// SSAT16
    2684094U,	// SSAX
    2681270U,	// SSUB16
    2681371U,	// SSUB8
    1552590729U,	// STC2L_OFFSET
    1619699593U,	// STC2L_OPTION
    1619699593U,	// STC2L_POST
    1686808457U,	// STC2L_PRE
    1552589369U,	// STC2_OFFSET
    1619698233U,	// STC2_OPTION
    1619698233U,	// STC2_POST
    1686807097U,	// STC2_PRE
    1277734751U,	// STCL_OFFSET
    1277734751U,	// STCL_OPTION
    1277734751U,	// STCL_POST
    1277734751U,	// STCL_PRE
    1277734194U,	// STC_OFFSET
    1277734194U,	// STC_OPTION
    1277734194U,	// STC_POST
    1277734194U,	// STC_PRE
    2650152U,	// STL
    2649113U,	// STLB
    2684217U,	// STLEX
    2682095U,	// STLEXB
    2682290U,	// STLEXD
    2682591U,	// STLEXH
    2649692U,	// STLH
    2730730U,	// STMDA
    875064042U,	// STMDA_UPD
    2730986U,	// STMDB
    875064298U,	// STMDB_UPD
    2732142U,	// STMIA
    875065454U,	// STMIA_UPD
    2731004U,	// STMIB
    875064316U,	// STMIB_UPD
    875090598U,	// STRBT_POST_IMM
    875090598U,	// STRBT_POST_REG
    875089024U,	// STRB_POST_IMM
    875089024U,	// STRB_POST_REG
    875080832U,	// STRB_PRE_IMM
    875089024U,	// STRB_PRE_REG
    2681984U,	// STRBi12
    2665600U,	// STRBrs
    2674074U,	// STRD
    875171226U,	// STRD_POST
    875171226U,	// STRD_PRE
    2684235U,	// STREX
    2682109U,	// STREXB
    2682304U,	// STREXD
    2682605U,	// STREXH
    2666118U,	// STRH
    875082441U,	// STRHTi
    875090633U,	// STRHTr
    875089542U,	// STRH_POST
    875089542U,	// STRH_PRE
    875090797U,	// STRT_POST_IMM
    875090797U,	// STRT_POST_REG
    875090432U,	// STR_POST_IMM
    875090432U,	// STR_POST_REG
    875082240U,	// STR_PRE_IMM
    875090432U,	// STR_PRE_REG
    2683392U,	// STRi12
    2667008U,	// STRrs
    2632901U,	// SUBri
    2632901U,	// SUBrr
    2690245U,	// SUBrsi
    76997U,	// SUBrsr
    2731318U,	// SVC
    2683268U,	// SWP
    2681972U,	// SWPB
    2665398U,	// SXTAB
    2664832U,	// SXTAB16
    2666022U,	// SXTAH
    2682041U,	// SXTB
    2681232U,	// SXTB16
    2682552U,	// SXTH
    2650514U,	// TEQri
    2650514U,	// TEQrr
    2683282U,	// TEQrsi
    2666898U,	// TEQrsr
    4355U,	// TRAP
    4355U,	// TRAPNaCl
    296743U,	// TSB
    2651000U,	// TSTri
    2651000U,	// TSTrr
    2683768U,	// TSTrsi
    2667384U,	// TSTrsr
    2681315U,	// UADD16
    2681416U,	// UADD8
    2684353U,	// UASX
    2667862U,	// UBFX
    4278107U,	// UDF
    2683939U,	// UDIV
    2681292U,	// UHADD16
    2681396U,	// UHADD8
    2684336U,	// UHASX
    2684082U,	// UHSAX
    2681254U,	// UHSUB16
    2681357U,	// UHSUB8
    2756386U,	// UMAAL
    290627U,	// UMLAL
    2691049U,	// UMULL
    2681300U,	// UQADD16
    2681403U,	// UQADD8
    2684342U,	// UQASX
    2684088U,	// UQSAX
    2681262U,	// UQSUB16
    2681364U,	// UQSUB8
    2681383U,	// USAD8
    2664959U,	// USADA8
    2667130U,	// USAT
    2681329U,	// USAT16
    2684099U,	// USAX
    2681277U,	// USUB16
    2681377U,	// USUB8
    2665404U,	// UXTAB
    2664840U,	// UXTAB16
    2666028U,	// UXTAH
    2682046U,	// UXTB
    2681239U,	// UXTB16
    2682557U,	// UXTH
    11054888U,	// VABALsv2i64
    10530600U,	// VABALsv4i32
    11579176U,	// VABALsv8i16
    12627752U,	// VABALuv2i64
    12103464U,	// VABALuv4i32
    13152040U,	// VABALuv8i16
    11578057U,	// VABAsv16i8
    11053769U,	// VABAsv2i32
    10529481U,	// VABAsv4i16
    11053769U,	// VABAsv4i32
    10529481U,	// VABAsv8i16
    11578057U,	// VABAsv8i8
    13150921U,	// VABAuv16i8
    12626633U,	// VABAuv2i32
    12102345U,	// VABAuv4i16
    12626633U,	// VABAuv4i32
    12102345U,	// VABAuv8i16
    13150921U,	// VABAuv8i8
    11071332U,	// VABDLsv2i64
    10547044U,	// VABDLsv4i32
    11595620U,	// VABDLsv8i16
    12644196U,	// VABDLuv2i64
    12119908U,	// VABDLuv4i32
    13168484U,	// VABDLuv8i16
    7925062U,	// VABDfd
    7925062U,	// VABDfq
    7400774U,	// VABDhd
    7400774U,	// VABDhq
    11595078U,	// VABDsv16i8
    11070790U,	// VABDsv2i32
    10546502U,	// VABDsv4i16
    11070790U,	// VABDsv4i32
    10546502U,	// VABDsv8i16
    11595078U,	// VABDsv8i8
    13167942U,	// VABDuv16i8
    12643654U,	// VABDuv2i32
    12119366U,	// VABDuv4i16
    12643654U,	// VABDuv4i32
    12119366U,	// VABDuv8i16
    13167942U,	// VABDuv8i8
    1147695644U,	// VABSD
    7369244U,	// VABSH
    7893532U,	// VABSS
    7893532U,	// VABSfd
    7893532U,	// VABSfq
    7369244U,	// VABShd
    7369244U,	// VABShq
    11563548U,	// VABSv16i8
    11039260U,	// VABSv2i32
    10514972U,	// VABSv4i16
    11039260U,	// VABSv4i32
    10514972U,	// VABSv8i16
    11563548U,	// VABSv8i8
    7925191U,	// VACGEfd
    7925191U,	// VACGEfq
    7400903U,	// VACGEhd
    7400903U,	// VACGEhq
    7926456U,	// VACGTfd
    7926456U,	// VACGTfq
    7402168U,	// VACGThd
    7402168U,	// VACGThq
    1147727223U,	// VADDD
    7400823U,	// VADDH
    895021199U,	// VADDHNv2i32
    13693071U,	// VADDHNv4i16
    14217359U,	// VADDHNv8i8
    11071345U,	// VADDLsv2i64
    10547057U,	// VADDLsv4i32
    11595633U,	// VADDLsv8i16
    12644209U,	// VADDLuv2i64
    12119921U,	// VADDLuv4i32
    13168497U,	// VADDLuv8i16
    7925111U,	// VADDS
    11072603U,	// VADDWsv2i64
    10548315U,	// VADDWsv4i32
    11596891U,	// VADDWsv8i16
    12645467U,	// VADDWuv2i64
    12121179U,	// VADDWuv4i32
    13169755U,	// VADDWuv8i16
    7925111U,	// VADDfd
    7925111U,	// VADDfq
    7400823U,	// VADDhd
    7400823U,	// VADDhq
    14740855U,	// VADDv16i8
    895020407U,	// VADDv1i64
    13692279U,	// VADDv2i32
    895020407U,	// VADDv2i64
    14216567U,	// VADDv4i16
    13692279U,	// VADDv4i32
    14216567U,	// VADDv8i16
    14740855U,	// VADDv8i8
    2682254U,	// VANDd
    2682254U,	// VANDq
    808543686U,	// VBF16MALBQ
    808543686U,	// VBF16MALBQI
    808543698U,	// VBF16MALTQ
    808543698U,	// VBF16MALTQI
    2682134U,	// VBICd
    13692182U,	// VBICiv2i32
    14216470U,	// VBICiv4i16
    13692182U,	// VBICiv4i32
    14216470U,	// VBICiv8i16
    2682134U,	// VBICq
    2665967U,	// VBIFd
    2665967U,	// VBIFq
    2667227U,	// VBITd
    2667227U,	// VBITq
    2666517U,	// VBSLd
    2666517U,	// VBSLq
    0U,	// VBSPd
    0U,	// VBSPq
    875643287U,	// VCADDv2f32
    875644160U,	// VCADDv4f16
    875643287U,	// VCADDv4f32
    875644160U,	// VCADDv8f16
    7926157U,	// VCEQfd
    7926157U,	// VCEQfq
    7401869U,	// VCEQhd
    7401869U,	// VCEQhq
    14741901U,	// VCEQv16i8
    13693325U,	// VCEQv2i32
    14217613U,	// VCEQv4i16
    13693325U,	// VCEQv4i32
    14217613U,	// VCEQv8i16
    14741901U,	// VCEQv8i8
    14709133U,	// VCEQzv16i8
    7893389U,	// VCEQzv2f32
    13660557U,	// VCEQzv2i32
    7369101U,	// VCEQzv4f16
    7893389U,	// VCEQzv4f32
    14184845U,	// VCEQzv4i16
    13660557U,	// VCEQzv4i32
    7369101U,	// VCEQzv8f16
    14184845U,	// VCEQzv8i16
    14709133U,	// VCEQzv8i8
    7925197U,	// VCGEfd
    7925197U,	// VCGEfq
    7400909U,	// VCGEhd
    7400909U,	// VCGEhq
    11595213U,	// VCGEsv16i8
    11070925U,	// VCGEsv2i32
    10546637U,	// VCGEsv4i16
    11070925U,	// VCGEsv4i32
    10546637U,	// VCGEsv8i16
    11595213U,	// VCGEsv8i8
    13168077U,	// VCGEuv16i8
    12643789U,	// VCGEuv2i32
    12119501U,	// VCGEuv4i16
    12643789U,	// VCGEuv4i32
    12119501U,	// VCGEuv8i16
    13168077U,	// VCGEuv8i8
    11562445U,	// VCGEzv16i8
    7892429U,	// VCGEzv2f32
    11038157U,	// VCGEzv2i32
    7368141U,	// VCGEzv4f16
    7892429U,	// VCGEzv4f32
    10513869U,	// VCGEzv4i16
    11038157U,	// VCGEzv4i32
    7368141U,	// VCGEzv8f16
    10513869U,	// VCGEzv8i16
    11562445U,	// VCGEzv8i8
    7926462U,	// VCGTfd
    7926462U,	// VCGTfq
    7402174U,	// VCGThd
    7402174U,	// VCGThq
    11596478U,	// VCGTsv16i8
    11072190U,	// VCGTsv2i32
    10547902U,	// VCGTsv4i16
    11072190U,	// VCGTsv4i32
    10547902U,	// VCGTsv8i16
    11596478U,	// VCGTsv8i8
    13169342U,	// VCGTuv16i8
    12645054U,	// VCGTuv2i32
    12120766U,	// VCGTuv4i16
    12645054U,	// VCGTuv4i32
    12120766U,	// VCGTuv8i16
    13169342U,	// VCGTuv8i8
    11563710U,	// VCGTzv16i8
    7893694U,	// VCGTzv2f32
    11039422U,	// VCGTzv2i32
    7369406U,	// VCGTzv4f16
    7893694U,	// VCGTzv4f32
    10515134U,	// VCGTzv4i16
    11039422U,	// VCGTzv4i32
    7369406U,	// VCGTzv8f16
    10515134U,	// VCGTzv8i16
    11563710U,	// VCGTzv8i8
    11562450U,	// VCLEzv16i8
    7892434U,	// VCLEzv2f32
    11038162U,	// VCLEzv2i32
    7368146U,	// VCLEzv4f16
    7892434U,	// VCLEzv4f32
    10513874U,	// VCLEzv4i16
    11038162U,	// VCLEzv4i32
    7368146U,	// VCLEzv8f16
    10513874U,	// VCLEzv8i16
    11562450U,	// VCLEzv8i8
    11563558U,	// VCLSv16i8
    11039270U,	// VCLSv2i32
    10514982U,	// VCLSv4i16
    11039270U,	// VCLSv4i32
    10514982U,	// VCLSv8i16
    11563558U,	// VCLSv8i8
    11563744U,	// VCLTzv16i8
    7893728U,	// VCLTzv2f32
    11039456U,	// VCLTzv2i32
    7369440U,	// VCLTzv4f16
    7893728U,	// VCLTzv4f32
    10515168U,	// VCLTzv4i16
    11039456U,	// VCLTzv4i32
    7369440U,	// VCLTzv8f16
    10515168U,	// VCLTzv8i16
    11563744U,	// VCLTzv8i8
    14710259U,	// VCLZv16i8
    13661683U,	// VCLZv2i32
    14185971U,	// VCLZv4i16
    13661683U,	// VCLZv4i32
    14185971U,	// VCLZv8i16
    14710259U,	// VCLZv8i8
    808534400U,	// VCMLAv2f32
    808534400U,	// VCMLAv2f32_indexed
    808535273U,	// VCMLAv4f16
    808535273U,	// VCMLAv4f16_indexed
    808534400U,	// VCMLAv4f32
    808534400U,	// VCMLAv4f32_indexed
    808535273U,	// VCMLAv8f16
    808535273U,	// VCMLAv8f16_indexed
    1147695377U,	// VCMPD
    1147694558U,	// VCMPED
    7368158U,	// VCMPEH
    7892446U,	// VCMPES
    2154409438U,	// VCMPEZD
    7450078U,	// VCMPEZH
    7974366U,	// VCMPEZS
    7368977U,	// VCMPH
    7893265U,	// VCMPS
    2154410257U,	// VCMPZD
    7450897U,	// VCMPZH
    7975185U,	// VCMPZS
    1602307U,	// VCNTd
    1602307U,	// VCNTq
    875643144U,	// VCVTANSDf
    875644017U,	// VCVTANSDh
    875643144U,	// VCVTANSQf
    875644017U,	// VCVTANSQh
    875643204U,	// VCVTANUDf
    875644077U,	// VCVTANUDh
    875643204U,	// VCVTANUQf
    875644077U,	// VCVTANUQh
    875643506U,	// VCVTASD
    875643897U,	// VCVTASH
    875643144U,	// VCVTASS
    875643566U,	// VCVTAUD
    875643957U,	// VCVTAUH
    875643204U,	// VCVTAUS
    25226419U,	// VCVTBDH
    25717939U,	// VCVTBHD
    17329331U,	// VCVTBHS
    821095603U,	// VCVTBSH
    26244008U,	// VCVTDS
    875643159U,	// VCVTMNSDf
    875644032U,	// VCVTMNSDh
    875643159U,	// VCVTMNSQf
    875644032U,	// VCVTMNSQh
    875643219U,	// VCVTMNUDf
    875644092U,	// VCVTMNUDh
    875643219U,	// VCVTMNUQf
    875644092U,	// VCVTMNUQh
    875643521U,	// VCVTMSD
    875643912U,	// VCVTMSH
    875643159U,	// VCVTMSS
    875643581U,	// VCVTMUD
    875643972U,	// VCVTMUH
    875643219U,	// VCVTMUS
    875643174U,	// VCVTNNSDf
    875644047U,	// VCVTNNSDh
    875643174U,	// VCVTNNSQf
    875644047U,	// VCVTNNSQh
    875643234U,	// VCVTNNUDf
    875644107U,	// VCVTNNUDh
    875643234U,	// VCVTNNUQf
    875644107U,	// VCVTNNUQh
    875643536U,	// VCVTNSD
    875643927U,	// VCVTNSH
    875643174U,	// VCVTNSS
    875643596U,	// VCVTNUD
    875643987U,	// VCVTNUH
    875643234U,	// VCVTNUS
    875643189U,	// VCVTPNSDf
    875644062U,	// VCVTPNSDh
    875643189U,	// VCVTPNSQf
    875644062U,	// VCVTPNSQh
    875643249U,	// VCVTPNUDf
    875644122U,	// VCVTPNUDh
    875643249U,	// VCVTPNUQf
    875644122U,	// VCVTPNUQh
    875643551U,	// VCVTPSD
    875643942U,	// VCVTPSH
    875643189U,	// VCVTPSS
    875643611U,	// VCVTPUD
    875644002U,	// VCVTPUH
    875643249U,	// VCVTPUS
    26768296U,	// VCVTSD
    25228182U,	// VCVTTDH
    25719702U,	// VCVTTHD
    17331094U,	// VCVTTHS
    821097366U,	// VCVTTSH
    888173480U,	// VCVTf2h
    1093170088U,	// VCVTf2sd
    1093170088U,	// VCVTf2sq
    1094218664U,	// VCVTf2ud
    1094218664U,	// VCVTf2uq
    1160311720U,	// VCVTf2xsd
    1160311720U,	// VCVTf2xsq
    1161360296U,	// VCVTf2xud
    1161360296U,	// VCVTf2xuq
    17331112U,	// VCVTh2f
    1092645800U,	// VCVTh2sd
    1092645800U,	// VCVTh2sq
    1093694376U,	// VCVTh2ud
    1093694376U,	// VCVTh2uq
    1159787432U,	// VCVTh2xsd
    1159787432U,	// VCVTh2xsq
    1160836008U,	// VCVTh2xud
    1160836008U,	// VCVTh2xuq
    1091597224U,	// VCVTs2fd
    1091597224U,	// VCVTs2fq
    1090024360U,	// VCVTs2hd
    1090024360U,	// VCVTs2hq
    1092121512U,	// VCVTu2fd
    1092121512U,	// VCVTu2fq
    1090548648U,	// VCVTu2hd
    1090548648U,	// VCVTu2hq
    1158738856U,	// VCVTxs2fd
    1158738856U,	// VCVTxs2fq
    1157165992U,	// VCVTxs2hd
    1157165992U,	// VCVTxs2hq
    1159263144U,	// VCVTxu2fd
    1159263144U,	// VCVTxu2fq
    1157690280U,	// VCVTxu2hd
    1157690280U,	// VCVTxu2hq
    1147728936U,	// VDIVD
    7402536U,	// VDIVH
    7926824U,	// VDIVS
    553328U,	// VDUP16d
    553328U,	// VDUP16q
    1077616U,	// VDUP32d
    1077616U,	// VDUP32q
    1601904U,	// VDUP8d
    1601904U,	// VDUP8q
    586096U,	// VDUPLN16d
    586096U,	// VDUPLN16q
    1110384U,	// VDUPLN32d
    1110384U,	// VDUPLN32q
    1634672U,	// VDUPLN8d
    1634672U,	// VDUPLN8q
    2683343U,	// VEORd
    2683343U,	// VEORq
    570304U,	// VEXTd16
    1094592U,	// VEXTd32
    1618880U,	// VEXTd8
    570304U,	// VEXTq16
    1094592U,	// VEXTq32
    15250368U,	// VEXTq64
    1618880U,	// VEXTq8
    1147710265U,	// VFMAD
    7383865U,	// VFMAH
    875644183U,	// VFMALD
    875644183U,	// VFMALDI
    875644183U,	// VFMALQ
    875644183U,	// VFMALQI
    7908153U,	// VFMAS
    7908153U,	// VFMAfd
    7908153U,	// VFMAfq
    7383865U,	// VFMAhd
    7383865U,	// VFMAhq
    1147712060U,	// VFMSD
    7385660U,	// VFMSH
    875644194U,	// VFMSLD
    875644194U,	// VFMSLDI
    875644194U,	// VFMSLQ
    875644194U,	// VFMSLQI
    7909948U,	// VFMSS
    7909948U,	// VFMSfd
    7909948U,	// VFMSfq
    7385660U,	// VFMShd
    7385660U,	// VFMShq
    1147710270U,	// VFNMAD
    7383870U,	// VFNMAH
    7908158U,	// VFNMAS
    1147712065U,	// VFNMSD
    7385665U,	// VFNMSH
    7909953U,	// VFNMSS
    875643662U,	// VFP_VMAXNMD
    875644217U,	// VFP_VMAXNMH
    875643322U,	// VFP_VMAXNMS
    875643650U,	// VFP_VMINNMD
    875644205U,	// VFP_VMINNMH
    875643310U,	// VFP_VMINNMS
    1111114U,	// VGETLNi32
    10548298U,	// VGETLNs16
    11596874U,	// VGETLNs8
    12121162U,	// VGETLNu16
    13169738U,	// VGETLNu8
    11595109U,	// VHADDsv16i8
    11070821U,	// VHADDsv2i32
    10546533U,	// VHADDsv4i16
    11070821U,	// VHADDsv4i32
    10546533U,	// VHADDsv8i16
    11595109U,	// VHADDsv8i8
    13167973U,	// VHADDuv16i8
    12643685U,	// VHADDuv2i32
    12119397U,	// VHADDuv4i16
    12643685U,	// VHADDuv4i32
    12119397U,	// VHADDuv8i16
    13167973U,	// VHADDuv8i8
    11594953U,	// VHSUBsv16i8
    11070665U,	// VHSUBsv2i32
    10546377U,	// VHSUBsv4i16
    11070665U,	// VHSUBsv4i32
    10546377U,	// VHSUBsv8i16
    11594953U,	// VHSUBsv8i8
    13167817U,	// VHSUBuv16i8
    12643529U,	// VHSUBuv2i32
    12119241U,	// VHSUBuv4i16
    12643529U,	// VHSUBuv4i32
    12119241U,	// VHSUBuv8i16
    13167817U,	// VHSUBuv8i8
    808535413U,	// VINSH
    1101034402U,	// VJCVT
    2215176452U,	// VLD1DUPd16
    2215160068U,	// VLD1DUPd16wb_fixed
    2215168260U,	// VLD1DUPd16wb_register
    2215700740U,	// VLD1DUPd32
    2215684356U,	// VLD1DUPd32wb_fixed
    2215692548U,	// VLD1DUPd32wb_register
    2216225028U,	// VLD1DUPd8
    2216208644U,	// VLD1DUPd8wb_fixed
    2216216836U,	// VLD1DUPd8wb_register
    2282285316U,	// VLD1DUPq16
    2282268932U,	// VLD1DUPq16wb_fixed
    2282277124U,	// VLD1DUPq16wb_register
    2282809604U,	// VLD1DUPq32
    2282793220U,	// VLD1DUPq32wb_fixed
    2282801412U,	// VLD1DUPq32wb_register
    2283333892U,	// VLD1DUPq8
    2283317508U,	// VLD1DUPq8wb_fixed
    2283325700U,	// VLD1DUPq8wb_register
    27838724U,	// VLD1LNd16
    28092676U,	// VLD1LNd16_UPD
    28363012U,	// VLD1LNd32
    28616964U,	// VLD1LNd32_UPD
    28887300U,	// VLD1LNd8
    29141252U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    2349394180U,	// VLD1d16
    537454852U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    0U,	// VLD1d16QPseudoWB_fixed
    0U,	// VLD1d16QPseudoWB_register
    537438468U,	// VLD1d16Qwb_fixed
    537446660U,	// VLD1d16Qwb_register
    269019396U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    0U,	// VLD1d16TPseudoWB_fixed
    0U,	// VLD1d16TPseudoWB_register
    269003012U,	// VLD1d16Twb_fixed
    269011204U,	// VLD1d16Twb_register
    2349377796U,	// VLD1d16wb_fixed
    2349385988U,	// VLD1d16wb_register
    2349918468U,	// VLD1d32
    537979140U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    0U,	// VLD1d32QPseudoWB_fixed
    0U,	// VLD1d32QPseudoWB_register
    537962756U,	// VLD1d32Qwb_fixed
    537970948U,	// VLD1d32Qwb_register
    269543684U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    0U,	// VLD1d32TPseudoWB_fixed
    0U,	// VLD1d32TPseudoWB_register
    269527300U,	// VLD1d32Twb_fixed
    269535492U,	// VLD1d32Twb_register
    2349902084U,	// VLD1d32wb_fixed
    2349910276U,	// VLD1d32wb_register
    2364074244U,	// VLD1d64
    552134916U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    552118532U,	// VLD1d64Qwb_fixed
    552126724U,	// VLD1d64Qwb_register
    283699460U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    283683076U,	// VLD1d64Twb_fixed
    283691268U,	// VLD1d64Twb_register
    2364057860U,	// VLD1d64wb_fixed
    2364066052U,	// VLD1d64wb_register
    2350442756U,	// VLD1d8
    538503428U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    0U,	// VLD1d8QPseudoWB_fixed
    0U,	// VLD1d8QPseudoWB_register
    538487044U,	// VLD1d8Qwb_fixed
    538495236U,	// VLD1d8Qwb_register
    270067972U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    0U,	// VLD1d8TPseudoWB_fixed
    0U,	// VLD1d8TPseudoWB_register
    270051588U,	// VLD1d8Twb_fixed
    270059780U,	// VLD1d8Twb_register
    2350426372U,	// VLD1d8wb_fixed
    2350434564U,	// VLD1d8wb_register
    2416503044U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighQPseudo_UPD
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16HighTPseudo_UPD
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    2416486660U,	// VLD1q16wb_fixed
    2416494852U,	// VLD1q16wb_register
    2417027332U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighQPseudo_UPD
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32HighTPseudo_UPD
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    2417010948U,	// VLD1q32wb_fixed
    2417019140U,	// VLD1q32wb_register
    2431183108U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighQPseudo_UPD
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64HighTPseudo_UPD
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    2431166724U,	// VLD1q64wb_fixed
    2431174916U,	// VLD1q64wb_register
    2417551620U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighQPseudo_UPD
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8HighTPseudo_UPD
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    2417535236U,	// VLD1q8wb_fixed
    2417543428U,	// VLD1q8wb_register
    2282285365U,	// VLD2DUPd16
    2282268981U,	// VLD2DUPd16wb_fixed
    2282277173U,	// VLD2DUPd16wb_register
    2483611957U,	// VLD2DUPd16x2
    2483595573U,	// VLD2DUPd16x2wb_fixed
    2483603765U,	// VLD2DUPd16x2wb_register
    2282809653U,	// VLD2DUPd32
    2282793269U,	// VLD2DUPd32wb_fixed
    2282801461U,	// VLD2DUPd32wb_register
    2484136245U,	// VLD2DUPd32x2
    2484119861U,	// VLD2DUPd32x2wb_fixed
    2484128053U,	// VLD2DUPd32x2wb_register
    2283333941U,	// VLD2DUPd8
    2283317557U,	// VLD2DUPd8wb_fixed
    2283325749U,	// VLD2DUPd8wb_register
    2484660533U,	// VLD2DUPd8x2
    2484644149U,	// VLD2DUPd8x2wb_fixed
    2484652341U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq16OddPseudoWB_fixed
    0U,	// VLD2DUPq16OddPseudoWB_register
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq32OddPseudoWB_fixed
    0U,	// VLD2DUPq32OddPseudoWB_register
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    0U,	// VLD2DUPq8OddPseudoWB_fixed
    0U,	// VLD2DUPq8OddPseudoWB_register
    28092725U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    28100917U,	// VLD2LNd16_UPD
    28617013U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    28625205U,	// VLD2LNd32_UPD
    29141301U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    29149493U,	// VLD2LNd8_UPD
    28092725U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    28100917U,	// VLD2LNq16_UPD
    28617013U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    28625205U,	// VLD2LNq32_UPD
    2550720821U,	// VLD2b16
    2550704437U,	// VLD2b16wb_fixed
    2550712629U,	// VLD2b16wb_register
    2551245109U,	// VLD2b32
    2551228725U,	// VLD2b32wb_fixed
    2551236917U,	// VLD2b32wb_register
    2551769397U,	// VLD2b8
    2551753013U,	// VLD2b8wb_fixed
    2551761205U,	// VLD2b8wb_register
    2416503093U,	// VLD2d16
    2416486709U,	// VLD2d16wb_fixed
    2416494901U,	// VLD2d16wb_register
    2417027381U,	// VLD2d32
    2417010997U,	// VLD2d32wb_fixed
    2417019189U,	// VLD2d32wb_register
    2417551669U,	// VLD2d8
    2417535285U,	// VLD2d8wb_fixed
    2417543477U,	// VLD2d8wb_register
    537454901U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    537438517U,	// VLD2q16wb_fixed
    537446709U,	// VLD2q16wb_register
    537979189U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    537962805U,	// VLD2q32wb_fixed
    537970997U,	// VLD2q32wb_register
    538503477U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    538487093U,	// VLD2q8wb_fixed
    538495285U,	// VLD2q8wb_register
    27838810U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    28092762U,	// VLD3DUPd16_UPD
    28363098U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    28617050U,	// VLD3DUPd32_UPD
    28887386U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    29141338U,	// VLD3DUPd8_UPD
    27838810U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    0U,	// VLD3DUPq16OddPseudo_UPD
    28092762U,	// VLD3DUPq16_UPD
    28363098U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    0U,	// VLD3DUPq32OddPseudo_UPD
    28617050U,	// VLD3DUPq32_UPD
    28887386U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    0U,	// VLD3DUPq8OddPseudo_UPD
    29141338U,	// VLD3DUPq8_UPD
    28100954U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    28109146U,	// VLD3LNd16_UPD
    28625242U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    28633434U,	// VLD3LNd32_UPD
    29149530U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    29157722U,	// VLD3LNd8_UPD
    28100954U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    28109146U,	// VLD3LNq16_UPD
    28625242U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    28633434U,	// VLD3LNq32_UPD
    27838810U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    28092762U,	// VLD3d16_UPD
    28363098U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    28617050U,	// VLD3d32_UPD
    28887386U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    29141338U,	// VLD3d8_UPD
    27838810U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    28092762U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    28363098U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    28617050U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    28887386U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    29141338U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    27920758U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    28117366U,	// VLD4DUPd16_UPD
    28445046U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    28641654U,	// VLD4DUPd32_UPD
    28969334U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    29165942U,	// VLD4DUPd8_UPD
    27920758U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    0U,	// VLD4DUPq16OddPseudo_UPD
    28117366U,	// VLD4DUPq16_UPD
    28445046U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    0U,	// VLD4DUPq32OddPseudo_UPD
    28641654U,	// VLD4DUPq32_UPD
    28969334U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    0U,	// VLD4DUPq8OddPseudo_UPD
    29165942U,	// VLD4DUPq8_UPD
    28109174U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    28125558U,	// VLD4LNd16_UPD
    28633462U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    28649846U,	// VLD4LNd32_UPD
    29157750U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    29174134U,	// VLD4LNd8_UPD
    28109174U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    28125558U,	// VLD4LNq16_UPD
    28633462U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    28649846U,	// VLD4LNq32_UPD
    27920758U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    28117366U,	// VLD4d16_UPD
    28445046U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    28641654U,	// VLD4d32_UPD
    28969334U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    29165942U,	// VLD4d8_UPD
    27920758U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    28117366U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    28445046U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    28641654U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    28969334U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    29165942U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    875064290U,	// VLDMDDB_UPD
    2730766U,	// VLDMDIA
    875064078U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    875064290U,	// VLDMSDB_UPD
    2730766U,	// VLDMSIA
    875064078U,	// VLDMSIA_UPD
    2683301U,	// VLDRD
    586149U,	// VLDRH
    2683301U,	// VLDRS
    2646634917U,	// VLDR_FPCXTNS_off
    700510629U,	// VLDR_FPCXTNS_post
    2713776549U,	// VLDR_FPCXTNS_pre
    2647159205U,	// VLDR_FPCXTS_off
    701034917U,	// VLDR_FPCXTS_post
    2714300837U,	// VLDR_FPCXTS_pre
    2647683493U,	// VLDR_FPSCR_NZCVQC_off
    701559205U,	// VLDR_FPSCR_NZCVQC_post
    2714825125U,	// VLDR_FPSCR_NZCVQC_pre
    2648207781U,	// VLDR_FPSCR_off
    702083493U,	// VLDR_FPSCR_post
    2715349413U,	// VLDR_FPSCR_pre
    2782982565U,	// VLDR_P0_off
    1642115493U,	// VLDR_P0_post
    2850075045U,	// VLDR_P0_pre
    2649256357U,	// VLDR_VPR_off
    703132069U,	// VLDR_VPR_post
    2716397989U,	// VLDR_VPR_pre
    2732105U,	// VLLDM
    2732140U,	// VLSTM
    7926951U,	// VMAXfd
    7926951U,	// VMAXfq
    7402663U,	// VMAXhd
    7402663U,	// VMAXhq
    11596967U,	// VMAXsv16i8
    11072679U,	// VMAXsv2i32
    10548391U,	// VMAXsv4i16
    11072679U,	// VMAXsv4i32
    10548391U,	// VMAXsv8i16
    11596967U,	// VMAXsv8i8
    13169831U,	// VMAXuv16i8
    12645543U,	// VMAXuv2i32
    12121255U,	// VMAXuv4i16
    12645543U,	// VMAXuv4i32
    12121255U,	// VMAXuv8i16
    13169831U,	// VMAXuv8i8
    7925916U,	// VMINfd
    7925916U,	// VMINfq
    7401628U,	// VMINhd
    7401628U,	// VMINhq
    11595932U,	// VMINsv16i8
    11071644U,	// VMINsv2i32
    10547356U,	// VMINsv4i16
    11071644U,	// VMINsv4i32
    10547356U,	// VMINsv8i16
    11595932U,	// VMINsv8i8
    13168796U,	// VMINuv16i8
    12644508U,	// VMINuv2i32
    12120220U,	// VMINuv4i16
    12644508U,	// VMINuv4i32
    12120220U,	// VMINuv8i16
    13168796U,	// VMINuv8i8
    1147710260U,	// VMLAD
    7383860U,	// VMLAH
    11063113U,	// VMLALslsv2i32
    10538825U,	// VMLALslsv4i16
    12635977U,	// VMLALsluv2i32
    12111689U,	// VMLALsluv4i16
    11054921U,	// VMLALsv2i64
    10530633U,	// VMLALsv4i32
    11579209U,	// VMLALsv8i16
    12627785U,	// VMLALuv2i64
    12103497U,	// VMLALuv4i32
    13152073U,	// VMLALuv8i16
    7908148U,	// VMLAS
    7908148U,	// VMLAfd
    7908148U,	// VMLAfq
    7383860U,	// VMLAhd
    7383860U,	// VMLAhq
    7916340U,	// VMLAslfd
    7916340U,	// VMLAslfq
    7392052U,	// VMLAslhd
    7392052U,	// VMLAslhq
    13683508U,	// VMLAslv2i32
    14207796U,	// VMLAslv4i16
    13683508U,	// VMLAslv4i32
    14207796U,	// VMLAslv8i16
    14723892U,	// VMLAv16i8
    13675316U,	// VMLAv2i32
    14199604U,	// VMLAv4i16
    13675316U,	// VMLAv4i32
    14199604U,	// VMLAv8i16
    14723892U,	// VMLAv8i8
    1147712055U,	// VMLSD
    7385655U,	// VMLSH
    11063330U,	// VMLSLslsv2i32
    10539042U,	// VMLSLslsv4i16
    12636194U,	// VMLSLsluv2i32
    12111906U,	// VMLSLsluv4i16
    11055138U,	// VMLSLsv2i64
    10530850U,	// VMLSLsv4i32
    11579426U,	// VMLSLsv8i16
    12628002U,	// VMLSLuv2i64
    12103714U,	// VMLSLuv4i32
    13152290U,	// VMLSLuv8i16
    7909943U,	// VMLSS
    7909943U,	// VMLSfd
    7909943U,	// VMLSfq
    7385655U,	// VMLShd
    7385655U,	// VMLShq
    7918135U,	// VMLSslfd
    7918135U,	// VMLSslfq
    7393847U,	// VMLSslhd
    7393847U,	// VMLSslhq
    13685303U,	// VMLSslv2i32
    14209591U,	// VMLSslv4i16
    13685303U,	// VMLSslv4i32
    14209591U,	// VMLSslv8i16
    14725687U,	// VMLSv16i8
    13677111U,	// VMLSv2i32
    14201399U,	// VMLSv4i16
    13677111U,	// VMLSv4i32
    14201399U,	// VMLSv8i16
    14725687U,	// VMLSv8i8
    808543674U,	// VMMLA
    1147696202U,	// VMOVD
    2683978U,	// VMOVDRR
    875644323U,	// VMOVH
    7369802U,	// VMOVHR
    11038787U,	// VMOVLsv2i64
    10514499U,	// VMOVLsv4i32
    11563075U,	// VMOVLsv8i16
    12611651U,	// VMOVLuv2i64
    12087363U,	// VMOVLuv4i32
    13135939U,	// VMOVLuv8i16
    894988541U,	// VMOVNv2i32
    13660413U,	// VMOVNv4i16
    14184701U,	// VMOVNv8i8
    7369802U,	// VMOVRH
    2683978U,	// VMOVRRD
    2667594U,	// VMOVRRS
    2651210U,	// VMOVRS
    7894090U,	// VMOVS
    2651210U,	// VMOVSR
    2667594U,	// VMOVSRR
    14709834U,	// VMOVv16i8
    2102948938U,	// VMOVv1i64
    7894090U,	// VMOVv2f32
    13661258U,	// VMOVv2i32
    2102948938U,	// VMOVv2i64
    7894090U,	// VMOVv4f32
    14185546U,	// VMOVv4i16
    13661258U,	// VMOVv4i32
    14185546U,	// VMOVv8i16
    14709834U,	// VMOVv8i8
    2732633U,	// VMRS
    2732633U,	// VMRS_FPCXTNS
    2732633U,	// VMRS_FPCXTS
    2732633U,	// VMRS_FPEXC
    2732633U,	// VMRS_FPINST
    2732633U,	// VMRS_FPINST2
    2650713U,	// VMRS_FPSCR_NZCVQC
    2732633U,	// VMRS_FPSID
    2732633U,	// VMRS_MVFR0
    2732633U,	// VMRS_MVFR1
    2732633U,	// VMRS_MVFR2
    2650713U,	// VMRS_P0
    2732633U,	// VMRS_VPR
    31044077U,	// VMSR
    29471213U,	// VMSR_FPCXTNS
    29995501U,	// VMSR_FPCXTS
    32616941U,	// VMSR_FPEXC
    33141229U,	// VMSR_FPINST
    33665517U,	// VMSR_FPINST2
    902853101U,	// VMSR_FPSCR_NZCVQC
    34189805U,	// VMSR_FPSID
    903901677U,	// VMSR_P0
    32092653U,	// VMSR_VPR
    1147727934U,	// VMULD
    7401534U,	// VMULH
    875643746U,	// VMULLp64
    23654383U,	// VMULLp8
    11055087U,	// VMULLslsv2i32
    10530799U,	// VMULLslsv4i16
    12627951U,	// VMULLsluv2i32
    12103663U,	// VMULLsluv4i16
    11071471U,	// VMULLsv2i64
    10547183U,	// VMULLsv4i32
    11595759U,	// VMULLsv8i16
    12644335U,	// VMULLuv2i64
    12120047U,	// VMULLuv4i32
    13168623U,	// VMULLuv8i16
    7925822U,	// VMULS
    7925822U,	// VMULfd
    7925822U,	// VMULfq
    7401534U,	// VMULhd
    7401534U,	// VMULhq
    23654462U,	// VMULpd
    23654462U,	// VMULpq
    7909438U,	// VMULslfd
    7909438U,	// VMULslfq
    7385150U,	// VMULslhd
    7385150U,	// VMULslhq
    13676606U,	// VMULslv2i32
    14200894U,	// VMULslv4i16
    13676606U,	// VMULslv4i32
    14200894U,	// VMULslv8i16
    14741566U,	// VMULv16i8
    13692990U,	// VMULv2i32
    14217278U,	// VMULv4i16
    13692990U,	// VMULv4i32
    14217278U,	// VMULv8i16
    14741566U,	// VMULv8i8
    2650353U,	// VMVNd
    2650353U,	// VMVNq
    13660401U,	// VMVNv2i32
    14184689U,	// VMVNv4i16
    13660401U,	// VMVNv4i32
    14184689U,	// VMVNv8i16
    1147694595U,	// VNEGD
    7368195U,	// VNEGH
    7892483U,	// VNEGS
    7892483U,	// VNEGf32q
    7892483U,	// VNEGfd
    7368195U,	// VNEGhd
    7368195U,	// VNEGhq
    10513923U,	// VNEGs16d
    10513923U,	// VNEGs16q
    11038211U,	// VNEGs32d
    11038211U,	// VNEGs32q
    11562499U,	// VNEGs8d
    11562499U,	// VNEGs8q
    1147710254U,	// VNMLAD
    7383854U,	// VNMLAH
    7908142U,	// VNMLAS
    1147712049U,	// VNMLSD
    7385649U,	// VNMLSH
    7909937U,	// VNMLSS
    1147727928U,	// VNMULD
    7401528U,	// VNMULH
    7925816U,	// VNMULS
    2683073U,	// VORNd
    2683073U,	// VORNq
    2683357U,	// VORRd
    13693405U,	// VORRiv2i32
    14217693U,	// VORRiv4i16
    13693405U,	// VORRiv4i32
    14217693U,	// VORRiv8i16
    2683357U,	// VORRq
    11595566U,	// VPADALsv16i8
    11071278U,	// VPADALsv2i32
    10546990U,	// VPADALsv4i16
    11071278U,	// VPADALsv4i32
    10546990U,	// VPADALsv8i16
    11595566U,	// VPADALsv8i8
    13168430U,	// VPADALuv16i8
    12644142U,	// VPADALuv2i32
    12119854U,	// VPADALuv4i16
    12644142U,	// VPADALuv4i32
    12119854U,	// VPADALuv8i16
    13168430U,	// VPADALuv8i8
    11562858U,	// VPADDLsv16i8
    11038570U,	// VPADDLsv2i32
    10514282U,	// VPADDLsv4i16
    11038570U,	// VPADDLsv4i32
    10514282U,	// VPADDLsv8i16
    11562858U,	// VPADDLsv8i8
    13135722U,	// VPADDLuv16i8
    12611434U,	// VPADDLuv2i32
    12087146U,	// VPADDLuv4i16
    12611434U,	// VPADDLuv4i32
    12087146U,	// VPADDLuv8i16
    13135722U,	// VPADDLuv8i8
    7925099U,	// VPADDf
    7400811U,	// VPADDh
    14216555U,	// VPADDi16
    13692267U,	// VPADDi32
    14740843U,	// VPADDi8
    7926945U,	// VPMAXf
    7402657U,	// VPMAXh
    10548385U,	// VPMAXs16
    11072673U,	// VPMAXs32
    11596961U,	// VPMAXs8
    12121249U,	// VPMAXu16
    12645537U,	// VPMAXu32
    13169825U,	// VPMAXu8
    7925910U,	// VPMINf
    7401622U,	// VPMINh
    10547350U,	// VPMINs16
    11071638U,	// VPMINs32
    11595926U,	// VPMINs8
    12120214U,	// VPMINu16
    12644502U,	// VPMINu32
    13168790U,	// VPMINu8
    11563542U,	// VQABSv16i8
    11039254U,	// VQABSv2i32
    10514966U,	// VQABSv4i16
    11039254U,	// VQABSv4i32
    10514966U,	// VQABSv8i16
    11563542U,	// VQABSv8i8
    11595121U,	// VQADDsv16i8
    907079025U,	// VQADDsv1i64
    11070833U,	// VQADDsv2i32
    907079025U,	// VQADDsv2i64
    10546545U,	// VQADDsv4i16
    11070833U,	// VQADDsv4i32
    10546545U,	// VQADDsv8i16
    11595121U,	// VQADDsv8i8
    13167985U,	// VQADDuv16i8
    22080881U,	// VQADDuv1i64
    12643697U,	// VQADDuv2i32
    22080881U,	// VQADDuv2i64
    12119409U,	// VQADDuv4i16
    12643697U,	// VQADDuv4i32
    12119409U,	// VQADDuv8i16
    13167985U,	// VQADDuv8i8
    11063093U,	// VQDMLALslv2i32
    10538805U,	// VQDMLALslv4i16
    11054901U,	// VQDMLALv2i64
    10530613U,	// VQDMLALv4i32
    11063322U,	// VQDMLSLslv2i32
    10539034U,	// VQDMLSLslv4i16
    11055130U,	// VQDMLSLv2i64
    10530842U,	// VQDMLSLv4i32
    11054689U,	// VQDMULHslv2i32
    10530401U,	// VQDMULHslv4i16
    11054689U,	// VQDMULHslv4i32
    10530401U,	// VQDMULHslv8i16
    11071073U,	// VQDMULHv2i32
    10546785U,	// VQDMULHv4i16
    11071073U,	// VQDMULHv4i32
    10546785U,	// VQDMULHv8i16
    11055067U,	// VQDMULLslv2i32
    10530779U,	// VQDMULLslv4i16
    11071451U,	// VQDMULLv2i64
    10547163U,	// VQDMULLv4i32
    907047145U,	// VQMOVNsuv2i32
    11038953U,	// VQMOVNsuv4i16
    10514665U,	// VQMOVNsuv8i8
    907047158U,	// VQMOVNsv2i32
    11038966U,	// VQMOVNsv4i16
    10514678U,	// VQMOVNsv8i8
    22049014U,	// VQMOVNuv2i32
    12611830U,	// VQMOVNuv4i16
    12087542U,	// VQMOVNuv8i8
    11562493U,	// VQNEGv16i8
    11038205U,	// VQNEGv2i32
    10513917U,	// VQNEGv4i16
    11038205U,	// VQNEGv4i32
    10513917U,	// VQNEGv8i16
    11562493U,	// VQNEGv8i8
    11062813U,	// VQRDMLAHslv2i32
    10538525U,	// VQRDMLAHslv4i16
    11062813U,	// VQRDMLAHslv4i32
    10538525U,	// VQRDMLAHslv8i16
    11054621U,	// VQRDMLAHv2i32
    10530333U,	// VQRDMLAHv4i16
    11054621U,	// VQRDMLAHv4i32
    10530333U,	// VQRDMLAHv8i16
    11062942U,	// VQRDMLSHslv2i32
    10538654U,	// VQRDMLSHslv4i16
    11062942U,	// VQRDMLSHslv4i32
    10538654U,	// VQRDMLSHslv8i16
    11054750U,	// VQRDMLSHv2i32
    10530462U,	// VQRDMLSHv4i16
    11054750U,	// VQRDMLSHv4i32
    10530462U,	// VQRDMLSHv8i16
    11054697U,	// VQRDMULHslv2i32
    10530409U,	// VQRDMULHslv4i16
    11054697U,	// VQRDMULHslv4i32
    10530409U,	// VQRDMULHslv8i16
    11071081U,	// VQRDMULHv2i32
    10546793U,	// VQRDMULHv4i16
    11071081U,	// VQRDMULHv4i32
    10546793U,	// VQRDMULHv8i16
    11595674U,	// VQRSHLsv16i8
    907079578U,	// VQRSHLsv1i64
    11071386U,	// VQRSHLsv2i32
    907079578U,	// VQRSHLsv2i64
    10547098U,	// VQRSHLsv4i16
    11071386U,	// VQRSHLsv4i32
    10547098U,	// VQRSHLsv8i16
    11595674U,	// VQRSHLsv8i8
    13168538U,	// VQRSHLuv16i8
    22081434U,	// VQRSHLuv1i64
    12644250U,	// VQRSHLuv2i32
    22081434U,	// VQRSHLuv2i64
    12119962U,	// VQRSHLuv4i16
    12644250U,	// VQRSHLuv4i32
    12119962U,	// VQRSHLuv8i16
    13168538U,	// VQRSHLuv8i8
    907079852U,	// VQRSHRNsv2i32
    11071660U,	// VQRSHRNsv4i16
    10547372U,	// VQRSHRNsv8i8
    22081708U,	// VQRSHRNuv2i32
    12644524U,	// VQRSHRNuv4i16
    12120236U,	// VQRSHRNuv8i8
    907079904U,	// VQRSHRUNv2i32
    11071712U,	// VQRSHRUNv4i16
    10547424U,	// VQRSHRUNv8i8
    11595661U,	// VQSHLsiv16i8
    907079565U,	// VQSHLsiv1i64
    11071373U,	// VQSHLsiv2i32
    907079565U,	// VQSHLsiv2i64
    10547085U,	// VQSHLsiv4i16
    11071373U,	// VQSHLsiv4i32
    10547085U,	// VQSHLsiv8i16
    11595661U,	// VQSHLsiv8i8
    11596741U,	// VQSHLsuv16i8
    907080645U,	// VQSHLsuv1i64
    11072453U,	// VQSHLsuv2i32
    907080645U,	// VQSHLsuv2i64
    10548165U,	// VQSHLsuv4i16
    11072453U,	// VQSHLsuv4i32
    10548165U,	// VQSHLsuv8i16
    11596741U,	// VQSHLsuv8i8
    11595661U,	// VQSHLsv16i8
    907079565U,	// VQSHLsv1i64
    11071373U,	// VQSHLsv2i32
    907079565U,	// VQSHLsv2i64
    10547085U,	// VQSHLsv4i16
    11071373U,	// VQSHLsv4i32
    10547085U,	// VQSHLsv8i16
    11595661U,	// VQSHLsv8i8
    13168525U,	// VQSHLuiv16i8
    22081421U,	// VQSHLuiv1i64
    12644237U,	// VQSHLuiv2i32
    22081421U,	// VQSHLuiv2i64
    12119949U,	// VQSHLuiv4i16
    12644237U,	// VQSHLuiv4i32
    12119949U,	// VQSHLuiv8i16
    13168525U,	// VQSHLuiv8i8
    13168525U,	// VQSHLuv16i8
    22081421U,	// VQSHLuv1i64
    12644237U,	// VQSHLuv2i32
    22081421U,	// VQSHLuv2i64
    12119949U,	// VQSHLuv4i16
    12644237U,	// VQSHLuv4i32
    12119949U,	// VQSHLuv8i16
    13168525U,	// VQSHLuv8i8
    907079845U,	// VQSHRNsv2i32
    11071653U,	// VQSHRNsv4i16
    10547365U,	// VQSHRNsv8i8
    22081701U,	// VQSHRNuv2i32
    12644517U,	// VQSHRNuv4i16
    12120229U,	// VQSHRNuv8i8
    907079896U,	// VQSHRUNv2i32
    11071704U,	// VQSHRUNv4i16
    10547416U,	// VQSHRUNv8i8
    11594959U,	// VQSUBsv16i8
    907078863U,	// VQSUBsv1i64
    11070671U,	// VQSUBsv2i32
    907078863U,	// VQSUBsv2i64
    10546383U,	// VQSUBsv4i16
    11070671U,	// VQSUBsv4i32
    10546383U,	// VQSUBsv8i16
    11594959U,	// VQSUBsv8i8
    13167823U,	// VQSUBuv16i8
    22080719U,	// VQSUBuv1i64
    12643535U,	// VQSUBuv2i32
    22080719U,	// VQSUBuv2i64
    12119247U,	// VQSUBuv4i16
    12643535U,	// VQSUBuv4i32
    12119247U,	// VQSUBuv8i16
    13167823U,	// VQSUBuv8i8
    895021191U,	// VRADDHNv2i32
    13693063U,	// VRADDHNv4i16
    14217351U,	// VRADDHNv8i8
    12611031U,	// VRECPEd
    7892439U,	// VRECPEfd
    7892439U,	// VRECPEfq
    7368151U,	// VRECPEhd
    7368151U,	// VRECPEhq
    12611031U,	// VRECPEq
    7926354U,	// VRECPSfd
    7926354U,	// VRECPSfq
    7402066U,	// VRECPShd
    7402066U,	// VRECPShq
    1599992U,	// VREV16d8
    1599992U,	// VREV16q8
    551193U,	// VREV32d16
    1599769U,	// VREV32d8
    551193U,	// VREV32q16
    1599769U,	// VREV32q8
    551279U,	// VREV64d16
    1075567U,	// VREV64d32
    1599855U,	// VREV64d8
    551279U,	// VREV64q16
    1075567U,	// VREV64q32
    1599855U,	// VREV64q8
    11595102U,	// VRHADDsv16i8
    11070814U,	// VRHADDsv2i32
    10546526U,	// VRHADDsv4i16
    11070814U,	// VRHADDsv4i32
    10546526U,	// VRHADDsv8i16
    11595102U,	// VRHADDsv8i8
    13167966U,	// VRHADDuv16i8
    12643678U,	// VRHADDuv2i32
    12119390U,	// VRHADDuv4i16
    12643678U,	// VRHADDuv4i32
    12119390U,	// VRHADDuv8i16
    13167966U,	// VRHADDuv8i8
    875643626U,	// VRINTAD
    875644148U,	// VRINTAH
    875643275U,	// VRINTANDf
    875644148U,	// VRINTANDh
    875643275U,	// VRINTANQf
    875644148U,	// VRINTANQh
    875643275U,	// VRINTAS
    875643674U,	// VRINTMD
    875644229U,	// VRINTMH
    875643334U,	// VRINTMNDf
    875644229U,	// VRINTMNDh
    875643334U,	// VRINTMNQf
    875644229U,	// VRINTMNQh
    875643334U,	// VRINTMS
    875643686U,	// VRINTND
    875644241U,	// VRINTNH
    875643346U,	// VRINTNNDf
    875644241U,	// VRINTNNDh
    875643346U,	// VRINTNNQf
    875644241U,	// VRINTNNQh
    875643346U,	// VRINTNS
    875643698U,	// VRINTPD
    875644253U,	// VRINTPH
    875643358U,	// VRINTPNDf
    875644253U,	// VRINTPNDh
    875643358U,	// VRINTPNQf
    875644253U,	// VRINTPNQh
    875643358U,	// VRINTPS
    1147695608U,	// VRINTRD
    7369208U,	// VRINTRH
    7893496U,	// VRINTRS
    1147696582U,	// VRINTXD
    7370182U,	// VRINTXH
    875643406U,	// VRINTXNDf
    875644311U,	// VRINTXNDh
    875643406U,	// VRINTXNQf
    875644311U,	// VRINTXNQh
    7894470U,	// VRINTXS
    1147696632U,	// VRINTZD
    7370232U,	// VRINTZH
    875643418U,	// VRINTZNDf
    875644334U,	// VRINTZNDh
    875643418U,	// VRINTZNQf
    875644334U,	// VRINTZNQh
    7894520U,	// VRINTZS
    11595681U,	// VRSHLsv16i8
    907079585U,	// VRSHLsv1i64
    11071393U,	// VRSHLsv2i32
    907079585U,	// VRSHLsv2i64
    10547105U,	// VRSHLsv4i16
    11071393U,	// VRSHLsv4i32
    10547105U,	// VRSHLsv8i16
    11595681U,	// VRSHLsv8i8
    13168545U,	// VRSHLuv16i8
    22081441U,	// VRSHLuv1i64
    12644257U,	// VRSHLuv2i32
    22081441U,	// VRSHLuv2i64
    12119969U,	// VRSHLuv4i16
    12644257U,	// VRSHLuv4i32
    12119969U,	// VRSHLuv8i16
    13168545U,	// VRSHLuv8i8
    895021236U,	// VRSHRNv2i32
    13693108U,	// VRSHRNv4i16
    14217396U,	// VRSHRNv8i8
    11596221U,	// VRSHRsv16i8
    907080125U,	// VRSHRsv1i64
    11071933U,	// VRSHRsv2i32
    907080125U,	// VRSHRsv2i64
    10547645U,	// VRSHRsv4i16
    11071933U,	// VRSHRsv4i32
    10547645U,	// VRSHRsv8i16
    11596221U,	// VRSHRsv8i8
    13169085U,	// VRSHRuv16i8
    22081981U,	// VRSHRuv1i64
    12644797U,	// VRSHRuv2i32
    22081981U,	// VRSHRuv2i64
    12120509U,	// VRSHRuv4i16
    12644797U,	// VRSHRuv4i32
    12120509U,	// VRSHRuv8i16
    13169085U,	// VRSHRuv8i8
    12611044U,	// VRSQRTEd
    7892452U,	// VRSQRTEfd
    7892452U,	// VRSQRTEfq
    7368164U,	// VRSQRTEhd
    7368164U,	// VRSQRTEhq
    12611044U,	// VRSQRTEq
    7926376U,	// VRSQRTSfd
    7926376U,	// VRSQRTSfq
    7402088U,	// VRSQRTShd
    7402088U,	// VRSQRTShq
    11578202U,	// VRSRAsv16i8
    839953242U,	// VRSRAsv1i64
    11053914U,	// VRSRAsv2i32
    839953242U,	// VRSRAsv2i64
    10529626U,	// VRSRAsv4i16
    11053914U,	// VRSRAsv4i32
    10529626U,	// VRSRAsv8i16
    11578202U,	// VRSRAsv8i8
    13151066U,	// VRSRAuv16i8
    22063962U,	// VRSRAuv1i64
    12626778U,	// VRSRAuv2i32
    22063962U,	// VRSRAuv2i64
    12102490U,	// VRSRAuv4i16
    12626778U,	// VRSRAuv4i32
    12102490U,	// VRSRAuv8i16
    13151066U,	// VRSRAuv8i8
    895021176U,	// VRSUBHNv2i32
    13693048U,	// VRSUBHNv4i16
    14217336U,	// VRSUBHNv8i8
    2888421469U,	// VSCCLRMD
    2888421469U,	// VSCCLRMS
    808543916U,	// VSDOTD
    808543916U,	// VSDOTDI
    808543916U,	// VSDOTQ
    808543916U,	// VSDOTQI
    875643710U,	// VSELEQD
    875644265U,	// VSELEQH
    875643370U,	// VSELEQS
    875643638U,	// VSELGED
    875644171U,	// VSELGEH
    875643298U,	// VSELGES
    875643734U,	// VSELGTD
    875644299U,	// VSELGTH
    875643394U,	// VSELGTS
    875643722U,	// VSELVSD
    875644287U,	// VSELVSH
    875643382U,	// VSELVSS
    570442U,	// VSETLNi16
    1094730U,	// VSETLNi32
    1619018U,	// VSETLNi8
    14217168U,	// VSHLLi16
    13692880U,	// VSHLLi32
    14741456U,	// VSHLLi8
    11071440U,	// VSHLLsv2i64
    10547152U,	// VSHLLsv4i32
    11595728U,	// VSHLLsv8i16
    12644304U,	// VSHLLuv2i64
    12120016U,	// VSHLLuv4i32
    13168592U,	// VSHLLuv8i16
    14741415U,	// VSHLiv16i8
    895020967U,	// VSHLiv1i64
    13692839U,	// VSHLiv2i32
    895020967U,	// VSHLiv2i64
    14217127U,	// VSHLiv4i16
    13692839U,	// VSHLiv4i32
    14217127U,	// VSHLiv8i16
    14741415U,	// VSHLiv8i8
    11595687U,	// VSHLsv16i8
    907079591U,	// VSHLsv1i64
    11071399U,	// VSHLsv2i32
    907079591U,	// VSHLsv2i64
    10547111U,	// VSHLsv4i16
    11071399U,	// VSHLsv4i32
    10547111U,	// VSHLsv8i16
    11595687U,	// VSHLsv8i8
    13168551U,	// VSHLuv16i8
    22081447U,	// VSHLuv1i64
    12644263U,	// VSHLuv2i32
    22081447U,	// VSHLuv2i64
    12119975U,	// VSHLuv4i16
    12644263U,	// VSHLuv4i32
    12119975U,	// VSHLuv8i16
    13168551U,	// VSHLuv8i8
    895021243U,	// VSHRNv2i32
    13693115U,	// VSHRNv4i16
    14217403U,	// VSHRNv8i8
    11596227U,	// VSHRsv16i8
    907080131U,	// VSHRsv1i64
    11071939U,	// VSHRsv2i32
    907080131U,	// VSHRsv2i64
    10547651U,	// VSHRsv4i16
    11071939U,	// VSHRsv4i32
    10547651U,	// VSHRsv8i16
    11596227U,	// VSHRsv8i8
    13169091U,	// VSHRuv16i8
    22081987U,	// VSHRuv1i64
    12644803U,	// VSHRuv2i32
    22081987U,	// VSHRuv2i64
    12120515U,	// VSHRuv4i16
    12644803U,	// VSHRuv4i32
    12120515U,	// VSHRuv8i16
    13169091U,	// VSHRuv8i8
    35189672U,	// VSHTOD
    1157165992U,	// VSHTOH
    35713960U,	// VSHTOS
    1109947304U,	// VSITOD
    1110471592U,	// VSITOH
    1091597224U,	// VSITOS
    1617672U,	// VSLIv16i8
    15249160U,	// VSLIv1i64
    1093384U,	// VSLIv2i32
    15249160U,	// VSLIv2i64
    569096U,	// VSLIv4i16
    1093384U,	// VSLIv4i32
    569096U,	// VSLIv8i16
    1617672U,	// VSLIv8i8
    1177088936U,	// VSLTOD
    1177613224U,	// VSLTOH
    1158738856U,	// VSLTOS
    808543894U,	// VSMMLA
    1147695975U,	// VSQRTD
    7369575U,	// VSQRTH
    7893863U,	// VSQRTS
    11578208U,	// VSRAsv16i8
    839953248U,	// VSRAsv1i64
    11053920U,	// VSRAsv2i32
    839953248U,	// VSRAsv2i64
    10529632U,	// VSRAsv4i16
    11053920U,	// VSRAsv4i32
    10529632U,	// VSRAsv8i16
    11578208U,	// VSRAsv8i8
    13151072U,	// VSRAuv16i8
    22063968U,	// VSRAuv1i64
    12626784U,	// VSRAuv2i32
    22063968U,	// VSRAuv2i64
    12102496U,	// VSRAuv4i16
    12626784U,	// VSRAuv4i32
    12102496U,	// VSRAuv8i16
    13151072U,	// VSRAuv8i8
    1617677U,	// VSRIv16i8
    15249165U,	// VSRIv1i64
    1093389U,	// VSRIv2i32
    15249165U,	// VSRIv2i64
    569101U,	// VSRIv4i16
    1093389U,	// VSRIv4i32
    569101U,	// VSRIv8i16
    1617677U,	// VSRIv8i8
    833136911U,	// VST1LNd16
    2980710671U,	// VST1LNd16_UPD
    833661199U,	// VST1LNd32
    2981234959U,	// VST1LNd32_UPD
    834185487U,	// VST1LNd8
    2981759247U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    3020482831U,	// VST1d16
    3087591695U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    0U,	// VST1d16QPseudoWB_fixed
    0U,	// VST1d16QPseudoWB_register
    3154684175U,	// VST1d16Qwb_fixed
    3221801231U,	// VST1d16Qwb_register
    3288918287U,	// VST1d16T
    0U,	// VST1d16TPseudo
    0U,	// VST1d16TPseudoWB_fixed
    0U,	// VST1d16TPseudoWB_register
    3356010767U,	// VST1d16Twb_fixed
    3423127823U,	// VST1d16Twb_register
    3490228495U,	// VST1d16wb_fixed
    3557345551U,	// VST1d16wb_register
    3021007119U,	// VST1d32
    3088115983U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    0U,	// VST1d32QPseudoWB_fixed
    0U,	// VST1d32QPseudoWB_register
    3155208463U,	// VST1d32Qwb_fixed
    3222325519U,	// VST1d32Qwb_register
    3289442575U,	// VST1d32T
    0U,	// VST1d32TPseudo
    0U,	// VST1d32TPseudoWB_fixed
    0U,	// VST1d32TPseudoWB_register
    3356535055U,	// VST1d32Twb_fixed
    3423652111U,	// VST1d32Twb_register
    3490752783U,	// VST1d32wb_fixed
    3557869839U,	// VST1d32wb_register
    3035162895U,	// VST1d64
    3102271759U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    3169364239U,	// VST1d64Qwb_fixed
    3236481295U,	// VST1d64Qwb_register
    3303598351U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    3370690831U,	// VST1d64Twb_fixed
    3437807887U,	// VST1d64Twb_register
    3504908559U,	// VST1d64wb_fixed
    3572025615U,	// VST1d64wb_register
    3021531407U,	// VST1d8
    3088640271U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    0U,	// VST1d8QPseudoWB_fixed
    0U,	// VST1d8QPseudoWB_register
    3155732751U,	// VST1d8Qwb_fixed
    3222849807U,	// VST1d8Qwb_register
    3289966863U,	// VST1d8T
    0U,	// VST1d8TPseudo
    0U,	// VST1d8TPseudoWB_fixed
    0U,	// VST1d8TPseudoWB_register
    3357059343U,	// VST1d8Twb_fixed
    3424176399U,	// VST1d8Twb_register
    3491277071U,	// VST1d8wb_fixed
    3558394127U,	// VST1d8wb_register
    3624462607U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighQPseudo_UPD
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16HighTPseudo_UPD
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    3691555087U,	// VST1q16wb_fixed
    3758672143U,	// VST1q16wb_register
    3624986895U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighQPseudo_UPD
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32HighTPseudo_UPD
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    3692079375U,	// VST1q32wb_fixed
    3759196431U,	// VST1q32wb_register
    3639142671U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighQPseudo_UPD
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64HighTPseudo_UPD
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    3706235151U,	// VST1q64wb_fixed
    3773352207U,	// VST1q64wb_register
    3625511183U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighQPseudo_UPD
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8HighTPseudo_UPD
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    3692603663U,	// VST1q8wb_fixed
    3759720719U,	// VST1q8wb_register
    833145168U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    2980882768U,	// VST2LNd16_UPD
    833669456U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    2981407056U,	// VST2LNd32_UPD
    834193744U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    2981931344U,	// VST2LNd8_UPD
    833145168U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    2980882768U,	// VST2LNq16_UPD
    833669456U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    2981407056U,	// VST2LNq32_UPD
    3825789264U,	// VST2b16
    3892881744U,	// VST2b16wb_fixed
    3959998800U,	// VST2b16wb_register
    3826313552U,	// VST2b32
    3893406032U,	// VST2b32wb_fixed
    3960523088U,	// VST2b32wb_register
    3826837840U,	// VST2b8
    3893930320U,	// VST2b8wb_fixed
    3961047376U,	// VST2b8wb_register
    3624462672U,	// VST2d16
    3691555152U,	// VST2d16wb_fixed
    3758672208U,	// VST2d16wb_register
    3624986960U,	// VST2d32
    3692079440U,	// VST2d32wb_fixed
    3759196496U,	// VST2d32wb_register
    3625511248U,	// VST2d8
    3692603728U,	// VST2d8wb_fixed
    3759720784U,	// VST2d8wb_register
    3087591760U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    3154684240U,	// VST2q16wb_fixed
    3221801296U,	// VST2q16wb_register
    3088116048U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    3155208528U,	// VST2q32wb_fixed
    3222325584U,	// VST2q32wb_register
    3088640336U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    3155732816U,	// VST2q8wb_fixed
    3222849872U,	// VST2q8wb_register
    833227109U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    2980907365U,	// VST3LNd16_UPD
    833751397U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    2981431653U,	// VST3LNd32_UPD
    834275685U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    2981955941U,	// VST3LNd8_UPD
    833227109U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    2980907365U,	// VST3LNq16_UPD
    833751397U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    2981431653U,	// VST3LNq32_UPD
    833145189U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    2980882789U,	// VST3d16_UPD
    833669477U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    2981407077U,	// VST3d32_UPD
    834193765U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    2981931365U,	// VST3d8_UPD
    833145189U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    2980882789U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    833669477U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    2981407077U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    834193765U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    2981931365U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    833399163U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    2980891003U,	// VST4LNd16_UPD
    833923451U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    2981415291U,	// VST4LNd32_UPD
    834447739U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    2981939579U,	// VST4LNd8_UPD
    833399163U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    2980891003U,	// VST4LNq16_UPD
    833923451U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    2981415291U,	// VST4LNq32_UPD
    833227131U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    2980907387U,	// VST4d16_UPD
    833751419U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    2981431675U,	// VST4d32_UPD
    834275707U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    2981955963U,	// VST4d8_UPD
    833227131U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    2980907387U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    833751419U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    2981431675U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    834275707U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    2981955963U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    875064297U,	// VSTMDDB_UPD
    2730773U,	// VSTMDIA
    875064085U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    875064297U,	// VSTMSDB_UPD
    2730773U,	// VSTMSIA
    875064085U,	// VSTMSIA_UPD
    2683391U,	// VSTRD
    586239U,	// VSTRH
    2683391U,	// VSTRS
    2646635007U,	// VSTR_FPCXTNS_off
    700510719U,	// VSTR_FPCXTNS_post
    2713776639U,	// VSTR_FPCXTNS_pre
    2647159295U,	// VSTR_FPCXTS_off
    701035007U,	// VSTR_FPCXTS_post
    2714300927U,	// VSTR_FPCXTS_pre
    2647683583U,	// VSTR_FPSCR_NZCVQC_off
    701559295U,	// VSTR_FPSCR_NZCVQC_post
    2714825215U,	// VSTR_FPSCR_NZCVQC_pre
    2648207871U,	// VSTR_FPSCR_off
    702083583U,	// VSTR_FPSCR_post
    2715349503U,	// VSTR_FPSCR_pre
    2782982655U,	// VSTR_P0_off
    1642115583U,	// VSTR_P0_post
    2850075135U,	// VSTR_P0_pre
    2649256447U,	// VSTR_VPR_off
    703132159U,	// VSTR_VPR_post
    2716398079U,	// VSTR_VPR_pre
    1147727061U,	// VSUBD
    7400661U,	// VSUBH
    895021184U,	// VSUBHNv2i32
    13693056U,	// VSUBHNv4i16
    14217344U,	// VSUBHNv8i8
    11071316U,	// VSUBLsv2i64
    10547028U,	// VSUBLsv4i32
    11595604U,	// VSUBLsv8i16
    12644180U,	// VSUBLuv2i64
    12119892U,	// VSUBLuv4i32
    13168468U,	// VSUBLuv8i16
    7924949U,	// VSUBS
    11072597U,	// VSUBWsv2i64
    10548309U,	// VSUBWsv4i32
    11596885U,	// VSUBWsv8i16
    12645461U,	// VSUBWuv2i64
    12121173U,	// VSUBWuv4i32
    13169749U,	// VSUBWuv8i16
    7924949U,	// VSUBfd
    7924949U,	// VSUBfq
    7400661U,	// VSUBhd
    7400661U,	// VSUBhq
    14740693U,	// VSUBv16i8
    895020245U,	// VSUBv1i64
    13692117U,	// VSUBv2i32
    895020245U,	// VSUBv2i64
    14216405U,	// VSUBv4i16
    13692117U,	// VSUBv4i32
    14216405U,	// VSUBv8i16
    14740693U,	// VSUBv8i8
    808543937U,	// VSUDOTDI
    808543937U,	// VSUDOTQI
    2666883U,	// VSWPd
    2666883U,	// VSWPq
    1634127U,	// VTBL1
    1634127U,	// VTBL2
    1634127U,	// VTBL3
    0U,	// VTBL3Pseudo
    1634127U,	// VTBL4
    0U,	// VTBL4Pseudo
    1619202U,	// VTBX1
    1619202U,	// VTBX2
    1619202U,	// VTBX3
    0U,	// VTBX3Pseudo
    1619202U,	// VTBX4
    0U,	// VTBX4Pseudo
    37286824U,	// VTOSHD
    1159787432U,	// VTOSHH
    37811112U,	// VTOSHS
    1101033988U,	// VTOSIRD
    1112044036U,	// VTOSIRH
    1093169668U,	// VTOSIRS
    1101034408U,	// VTOSIZD
    1112044456U,	// VTOSIZH
    1093170088U,	// VTOSIZS
    1168176040U,	// VTOSLD
    1179186088U,	// VTOSLH
    1160311720U,	// VTOSLS
    38859688U,	// VTOUHD
    1160836008U,	// VTOUHH
    39383976U,	// VTOUHS
    1113616900U,	// VTOUIRD
    1114141188U,	// VTOUIRH
    1094218244U,	// VTOUIRS
    1113617320U,	// VTOUIZD
    1114141608U,	// VTOUIZH
    1094218664U,	// VTOUIZS
    1180758952U,	// VTOULD
    1181283240U,	// VTOULH
    1161360296U,	// VTOULS
    569542U,	// VTRNd16
    1093830U,	// VTRNd32
    1618118U,	// VTRNd8
    569542U,	// VTRNq16
    1093830U,	// VTRNq32
    1618118U,	// VTRNq8
    1635191U,	// VTSTv16i8
    1110903U,	// VTSTv2i32
    586615U,	// VTSTv4i16
    1110903U,	// VTSTv4i32
    586615U,	// VTSTv8i16
    1635191U,	// VTSTv8i8
    808543948U,	// VUDOTD
    808543948U,	// VUDOTDI
    808543948U,	// VUDOTQ
    808543948U,	// VUDOTQI
    40956840U,	// VUHTOD
    1157690280U,	// VUHTOH
    41481128U,	// VUHTOS
    1115714472U,	// VUITOD
    1116238760U,	// VUITOH
    1092121512U,	// VUITOS
    1182856104U,	// VULTOD
    1183380392U,	// VULTOH
    1159263144U,	// VULTOS
    808543926U,	// VUMMLA
    808543905U,	// VUSDOTD
    808543905U,	// VUSDOTDI
    808543905U,	// VUSDOTQ
    808543905U,	// VUSDOTQI
    808543882U,	// VUSMMLA
    569736U,	// VUZPd16
    1618312U,	// VUZPd8
    569736U,	// VUZPq16
    1094024U,	// VUZPq32
    1618312U,	// VUZPq8
    569612U,	// VZIPd16
    1618188U,	// VZIPd8
    569612U,	// VZIPq16
    1093900U,	// VZIPq32
    1618188U,	// VZIPq8
    2730724U,	// sysLDMDA
    875064036U,	// sysLDMDA_UPD
    2730979U,	// sysLDMDB
    875064291U,	// sysLDMDB_UPD
    2732107U,	// sysLDMIA
    875065419U,	// sysLDMIA_UPD
    2730998U,	// sysLDMIB
    875064310U,	// sysLDMIB_UPD
    2730730U,	// sysSTMDA
    875064042U,	// sysSTMDA_UPD
    2730986U,	// sysSTMDB
    875064298U,	// sysSTMDB_UPD
    2732142U,	// sysSTMIA
    875065454U,	// sysSTMIA_UPD
    2731004U,	// sysSTMIB
    875064316U,	// sysSTMIB_UPD
    2632970U,	// t2ADCri
    43003146U,	// t2ADCrr
    43060490U,	// t2ADCrs
    43003214U,	// t2ADDri
    2683996U,	// t2ADDri12
    43003214U,	// t2ADDrr
    43060558U,	// t2ADDrs
    43003214U,	// t2ADDspImm
    2683996U,	// t2ADDspImm12
    43020705U,	// t2ADR
    2633103U,	// t2ANDri
    43003279U,	// t2ANDrr
    43060623U,	// t2ANDrs
    43004386U,	// t2ASRri
    43004386U,	// t2ASRrr
    4413U,	// t2AUT
    808046091U,	// t2AUTG
    982625204U,	// t2B
    2682130U,	// t2BFC
    2666240U,	// t2BFI
    942174077U,	// t2BFLi
    942175649U,	// t2BFLr
    942173676U,	// t2BFi
    4029777812U,	// t2BFic
    942175570U,	// t2BFr
    2632983U,	// t2BICri
    43003159U,	// t2BICrr
    43060503U,	// t2BICrs
    1917U,	// t2BTI
    808047516U,	// t2BXAUT
    2731794U,	// t2BXJ
    982625204U,	// t2Bcc
    1277825288U,	// t2CDP
    1277823290U,	// t2CDP2
    4314437U,	// t2CLREX
    2888421472U,	// t2CLRM
    2651636U,	// t2CLZ
    43020449U,	// t2CMNri
    43020449U,	// t2CMNzrr
    43053217U,	// t2CMNzrs
    43020562U,	// t2CMPri
    43020562U,	// t2CMPrr
    43053330U,	// t2CMPrs
    4278196U,	// t2CPS1p
    1452462677U,	// t2CPS2p
    1412092501U,	// t2CPS3p
    875644665U,	// t2CRC32B
    875644673U,	// t2CRC32CB
    875644783U,	// t2CRC32CH
    875644903U,	// t2CRC32CW
    875644775U,	// t2CRC32H
    875644895U,	// t2CRC32W
    875644822U,	// t2CSEL
    875644716U,	// t2CSINC
    875644874U,	// t2CSINV
    875644768U,	// t2CSNEG
    2731508U,	// t2DBG
    4311305U,	// t2DCPS1
    4311370U,	// t2DCPS2
    4311391U,	// t2DCPS3
    875644842U,	// t2DLS
    4096371749U,	// t2DMB
    4096371845U,	// t2DSB
    2634192U,	// t2EORri
    43004368U,	// t2EORrr
    43061712U,	// t2EORrs
    43102984U,	// t2HINT
    4278225U,	// t2HVC
    4163480713U,	// t2ISB
    69751512U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    2648800U,	// t2LDA
    2649009U,	// t2LDAB
    2651443U,	// t2LDAEX
    2649320U,	// t2LDAEXB
    2682283U,	// t2LDAEXD
    2649816U,	// t2LDAEXH
    2649616U,	// t2LDAH
    1277734678U,	// t2LDC2L_OFFSET
    1277734678U,	// t2LDC2L_OPTION
    1277734678U,	// t2LDC2L_POST
    1277734678U,	// t2LDC2L_PRE
    1277733152U,	// t2LDC2_OFFSET
    1277733152U,	// t2LDC2_OPTION
    1277733152U,	// t2LDC2_POST
    1277733152U,	// t2LDC2_PRE
    1277734746U,	// t2LDCL_OFFSET
    1277734746U,	// t2LDCL_OPTION
    1277734746U,	// t2LDCL_POST
    1277734746U,	// t2LDCL_PRE
    1277734158U,	// t2LDC_OFFSET
    1277734158U,	// t2LDC_OPTION
    1277734158U,	// t2LDC_POST
    1277734158U,	// t2LDC_PRE
    2730979U,	// t2LDMDB
    875064291U,	// t2LDMDB_UPD
    43102283U,	// t2LDMIA
    915435595U,	// t2LDMIA_UPD
    2683552U,	// t2LDRBT
    2665594U,	// t2LDRB_POST
    2665594U,	// t2LDRB_PRE
    43052154U,	// t2LDRBi12
    2681978U,	// t2LDRBi8
    43019386U,	// t2LDRBpci
    43035770U,	// t2LDRBs
    2674068U,	// t2LDRD_POST
    2674068U,	// t2LDRD_PRE
    2665876U,	// t2LDRDi8
    2684223U,	// t2LDREX
    2649334U,	// t2LDREXB
    2682297U,	// t2LDREXD
    2649830U,	// t2LDREXH
    2683587U,	// t2LDRHT
    2666112U,	// t2LDRH_POST
    2666112U,	// t2LDRH_PRE
    43052672U,	// t2LDRHi12
    2682496U,	// t2LDRHi8
    43019904U,	// t2LDRHpci
    43036288U,	// t2LDRHs
    2683564U,	// t2LDRSBT
    2665613U,	// t2LDRSB_POST
    2665613U,	// t2LDRSB_PRE
    43052173U,	// t2LDRSBi12
    2681997U,	// t2LDRSBi8
    43019405U,	// t2LDRSBpci
    43035789U,	// t2LDRSBs
    2683599U,	// t2LDRSHT
    2666151U,	// t2LDRSH_POST
    2666151U,	// t2LDRSH_PRE
    43052711U,	// t2LDRSHi12
    2682535U,	// t2LDRSHi8
    43019943U,	// t2LDRSHpci
    43036327U,	// t2LDRSHs
    2683746U,	// t2LDRT
    2666918U,	// t2LDR_POST
    2666918U,	// t2LDR_PRE
    43053478U,	// t2LDRi12
    2683302U,	// t2LDRi8
    43020710U,	// t2LDRpci
    43037094U,	// t2LDRs
    4294487U,	// t2LE
    1949394775U,	// t2LEUpdate
    43003934U,	// t2LSLri
    43003934U,	// t2LSLrr
    43004393U,	// t2LSRri
    43004393U,	// t2LSRrr
    1277825437U,	// t2MCR
    1277823295U,	// t2MCR2
    1277743576U,	// t2MCRR
    1277741380U,	// t2MCRR2
    2665252U,	// t2MLA
    2667053U,	// t2MLS
    2683821U,	// t2MOVTi16
    43029579U,	// t2MOVi
    2651250U,	// t2MOVi16
    43029579U,	// t2MOVr
    43020894U,	// t2MOVsra_flag
    43020899U,	// t2MOVsrl_flag
    1009388837U,	// t2MRC
    1009387813U,	// t2MRC2
    1747504425U,	// t2MRRC
    1747503402U,	// t2MRRC2
    2732634U,	// t2MRS_AR
    2650714U,	// t2MRS_M
    2650714U,	// t2MRSbanked
    2732634U,	// t2MRSsys_AR
    1814589934U,	// t2MSR_AR
    1814589934U,	// t2MSR_M
    1881698798U,	// t2MSRbanked
    2682926U,	// t2MUL
    2658546U,	// t2MVNi
    43028722U,	// t2MVNr
    43004146U,	// t2MVNs
    2633922U,	// t2ORNri
    2633922U,	// t2ORNrr
    2691266U,	// t2ORNrs
    2634206U,	// t2ORRri
    43004382U,	// t2ORRrr
    43061726U,	// t2ORRrs
    4378U,	// t2PAC
    4394U,	// t2PACBTI
    2731512U,	// t2PACG
    2667147U,	// t2PKHBT
    2665630U,	// t2PKHTB
    4230509665U,	// t2PLDWi12
    2651233U,	// t2PLDWi8
    69792865U,	// t2PLDWs
    4230507907U,	// t2PLDi12
    2649475U,	// t2PLDi8
    136949123U,	// t2PLDpci
    69791107U,	// t2PLDs
    4230508292U,	// t2PLIi12
    2649860U,	// t2PLIi8
    136949508U,	// t2PLIpci
    69791492U,	// t2PLIs
    2682226U,	// t2QADD
    2681301U,	// t2QADD16
    2681404U,	// t2QADD8
    2684343U,	// t2QASX
    2682200U,	// t2QDADD
    2682051U,	// t2QDSUB
    2684089U,	// t2QSAX
    2682064U,	// t2QSUB
    2681263U,	// t2QSUB16
    2681365U,	// t2QSUB8
    2650838U,	// t2RBIT
    43021338U,	// t2REV
    43018745U,	// t2REV16
    43019954U,	// t2REVSH
    2730972U,	// t2RFEDB
    2730972U,	// t2RFEDBW
    2730760U,	// t2RFEIA
    2730760U,	// t2RFEIAW
    43004372U,	// t2RORri
    43004372U,	// t2RORrr
    2659750U,	// t2RRX
    43003023U,	// t2RSBri
    2632847U,	// t2RSBrr
    2690191U,	// t2RSBrs
    2681308U,	// t2SADD16
    2681410U,	// t2SADD8
    2684348U,	// t2SASX
    3206U,	// t2SB
    2632965U,	// t2SBCri
    43003141U,	// t2SBCrr
    43060485U,	// t2SBCrs
    2667857U,	// t2SBFX
    2683934U,	// t2SDIV
    2682745U,	// t2SEL
    4278172U,	// t2SETPAN
    4312584U,	// t2SG
    2681284U,	// t2SHADD16
    2681389U,	// t2SHADD8
    2684330U,	// t2SHASX
    2684076U,	// t2SHSAX
    2681246U,	// t2SHSUB16
    2681350U,	// t2SHSUB8
    2731297U,	// t2SMC
    2665410U,	// t2SMLABB
    2667140U,	// t2SMLABT
    2665786U,	// t2SMLAD
    2667783U,	// t2SMLADX
    2756413U,	// t2SMLAL
    2755529U,	// t2SMLALBB
    2757265U,	// t2SMLALBT
    2755964U,	// t2SMLALD
    2757909U,	// t2SMLALDX
    2755748U,	// t2SMLALTB
    2757507U,	// t2SMLALTT
    2665623U,	// t2SMLATB
    2667388U,	// t2SMLATT
    2665690U,	// t2SMLAWB
    2667442U,	// t2SMLAWT
    2665887U,	// t2SMLSD
    2667813U,	// t2SMLSDX
    2755975U,	// t2SMLSLD
    2757917U,	// t2SMLSLDX
    2665256U,	// t2SMMLA
    2666902U,	// t2SMMLAR
    2667051U,	// t2SMMLS
    2666982U,	// t2SMMLSR
    2682930U,	// t2SMMUL
    2683336U,	// t2SMMULR
    2682176U,	// t2SMUAD
    2684174U,	// t2SMUADX
    2681809U,	// t2SMULBB
    2683545U,	// t2SMULBT
    2666467U,	// t2SMULL
    2682028U,	// t2SMULTB
    2683787U,	// t2SMULTT
    2682081U,	// t2SMULWB
    2683833U,	// t2SMULWT
    2682277U,	// t2SMUSD
    2684204U,	// t2SMUSDX
    43625456U,	// t2SRSDB
    44149744U,	// t2SRSDB_UPD
    43625244U,	// t2SRSIA
    44149532U,	// t2SRSIA_UPD
    2667125U,	// t2SSAT
    2681322U,	// t2SSAT16
    2684094U,	// t2SSAX
    2681270U,	// t2SSUB16
    2681371U,	// t2SSUB8
    1277734684U,	// t2STC2L_OFFSET
    1277734684U,	// t2STC2L_OPTION
    1277734684U,	// t2STC2L_POST
    1277734684U,	// t2STC2L_PRE
    1277733168U,	// t2STC2_OFFSET
    1277733168U,	// t2STC2_OPTION
    1277733168U,	// t2STC2_POST
    1277733168U,	// t2STC2_PRE
    1277734751U,	// t2STCL_OFFSET
    1277734751U,	// t2STCL_OPTION
    1277734751U,	// t2STCL_POST
    1277734751U,	// t2STCL_PRE
    1277734194U,	// t2STC_OFFSET
    1277734194U,	// t2STC_OPTION
    1277734194U,	// t2STC_POST
    1277734194U,	// t2STC_PRE
    2650152U,	// t2STL
    2649113U,	// t2STLB
    2684217U,	// t2STLEX
    2682095U,	// t2STLEXB
    2665906U,	// t2STLEXD
    2682591U,	// t2STLEXH
    2649692U,	// t2STLH
    2730986U,	// t2STMDB
    875064298U,	// t2STMDB_UPD
    43102318U,	// t2STMIA
    915435630U,	// t2STMIA_UPD
    2683558U,	// t2STRBT
    875080832U,	// t2STRB_POST
    875080832U,	// t2STRB_PRE
    43052160U,	// t2STRBi12
    2681984U,	// t2STRBi8
    43035776U,	// t2STRBs
    875089306U,	// t2STRD_POST
    875089306U,	// t2STRD_PRE
    2665882U,	// t2STRDi8
    2667851U,	// t2STREX
    2682109U,	// t2STREXB
    2665920U,	// t2STREXD
    2682605U,	// t2STREXH
    2683593U,	// t2STRHT
    875081350U,	// t2STRH_POST
    875081350U,	// t2STRH_PRE
    43052678U,	// t2STRHi12
    2682502U,	// t2STRHi8
    43036294U,	// t2STRHs
    2683757U,	// t2STRT
    875082240U,	// t2STR_POST
    875082240U,	// t2STR_PRE
    43053568U,	// t2STRi12
    2683392U,	// t2STRi8
    43037184U,	// t2STRs
    44675617U,	// t2SUBS_PC_LR
    43003077U,	// t2SUBri
    2683990U,	// t2SUBri12
    43003077U,	// t2SUBrr
    43060421U,	// t2SUBrs
    43003077U,	// t2SUBspImm
    2683990U,	// t2SUBspImm12
    2665398U,	// t2SXTAB
    2664832U,	// t2SXTAB16
    2666022U,	// t2SXTAH
    43052217U,	// t2SXTB
    2681232U,	// t2SXTB16
    43052728U,	// t2SXTH
    203975640U,	// t2TBB
    271085106U,	// t2TBH
    43020690U,	// t2TEQri
    43020690U,	// t2TEQrr
    43053458U,	// t2TEQrs
    338275475U,	// t2TSB
    43021176U,	// t2TSTri
    43021176U,	// t2TSTrr
    43053944U,	// t2TSTrs
    2651008U,	// t2TT
    2648940U,	// t2TTA
    2650751U,	// t2TTAT
    2651026U,	// t2TTT
    2681315U,	// t2UADD16
    2681416U,	// t2UADD8
    2684353U,	// t2UASX
    2667862U,	// t2UBFX
    4278232U,	// t2UDF
    2683939U,	// t2UDIV
    2681292U,	// t2UHADD16
    2681396U,	// t2UHADD8
    2684336U,	// t2UHASX
    2684082U,	// t2UHSAX
    2681254U,	// t2UHSUB16
    2681357U,	// t2UHSUB8
    2756386U,	// t2UMAAL
    2756419U,	// t2UMLAL
    2666473U,	// t2UMULL
    2681300U,	// t2UQADD16
    2681403U,	// t2UQADD8
    2684342U,	// t2UQASX
    2684088U,	// t2UQSAX
    2681262U,	// t2UQSUB16
    2681364U,	// t2UQSUB8
    2681383U,	// t2USAD8
    2664959U,	// t2USADA8
    2667130U,	// t2USAT
    2681329U,	// t2USAT16
    2684099U,	// t2USAX
    2681277U,	// t2USUB16
    2681377U,	// t2USUB8
    2665404U,	// t2UXTAB
    2664840U,	// t2UXTAB16
    2666028U,	// t2UXTAH
    43052222U,	// t2UXTB
    2681239U,	// t2UXTB16
    43052733U,	// t2UXTH
    875644847U,	// t2WLS
    1253395722U,	// tADC
    2682190U,	// tADDhirr
    850742606U,	// tADDi3
    1253395790U,	// tADDi8
    2682190U,	// tADDrSP
    2682190U,	// tADDrSPi
    850742606U,	// tADDrr
    2682190U,	// tADDspi
    2682190U,	// tADDspr
    2650529U,	// tADR
    1253395855U,	// tAND
    850743778U,	// tASRri
    1253396962U,	// tASRrr
    942255028U,	// tB
    1253395735U,	// tBIC
    4278212U,	// tBKPT
    1948897105U,	// tBL
    808047180U,	// tBLXNSr
    1948898717U,	// tBLXi
    808048029U,	// tBLXr
    2733303U,	// tBX
    2732615U,	// tBXNS
    942255028U,	// tBcc
    4029761540U,	// tCBNZ
    4029761535U,	// tCBZ
    2650273U,	// tCMNz
    2650386U,	// tCMPhir
    2650386U,	// tCMPi8
    2650386U,	// tCMPr
    1409471061U,	// tCPS
    1253396944U,	// tEOR
    2732808U,	// tHINT
    4278207U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    2732107U,	// tLDMIA
    2681978U,	// tLDRBi
    2681978U,	// tLDRBr
    2682496U,	// tLDRHi
    2682496U,	// tLDRHr
    2681997U,	// tLDRSB
    2682535U,	// tLDRSH
    2683302U,	// tLDRi
    2650534U,	// tLDRpci
    2683302U,	// tLDRr
    2683302U,	// tLDRspi
    850743326U,	// tLSLri
    1253396510U,	// tLSLrr
    850743785U,	// tLSRri
    1253396969U,	// tLSRrr
    875644857U,	// tMOVSr
    1119704139U,	// tMOVi8
    2651211U,	// tMOVr
    850743342U,	// tMUL
    1119703282U,	// tMVN
    1253396958U,	// tORR
    0U,	// tPICADD
    2888421654U,	// tPOP
    2888421037U,	// tPUSH
    2651162U,	// tREV
    2648569U,	// tREV16
    2649778U,	// tREVSH
    1253396948U,	// tROR
    2193443983U,	// tRSB
    1253395717U,	// tSBC
    280399U,	// tSETEND
    875065454U,	// tSTMIA_UPD
    2681984U,	// tSTRBi
    2681984U,	// tSTRBr
    2682502U,	// tSTRHi
    2682502U,	// tSTRHr
    2683392U,	// tSTRi
    2683392U,	// tSTRr
    2683392U,	// tSTRspi
    850742469U,	// tSUBi3
    1253395653U,	// tSUBi8
    850742469U,	// tSUBrr
    2682053U,	// tSUBspi
    2731318U,	// tSVC
    2649273U,	// tSXTB
    2649784U,	// tSXTH
    4355U,	// tTRAP
    2651000U,	// tTST
    4278107U,	// tUDF
    2649278U,	// tUXTB
    2649789U,	// tUXTH
    2298U,	// t__brkdiv0
  };

  static const uint32_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// MEMBARRIER
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_ATOMICRMW_UINC_WRAP
    0U,	// G_ATOMICRMW_UDEC_WRAP
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INVOKE_REGION_START
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ASRi
    0U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BLX_noip
    0U,	// BLX_pred_noip
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    128U,	// LDRBT_POST
    16384U,	// LDRConstPool
    128U,	// LDRHTii
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    128U,	// LDRSBTii
    128U,	// LDRSHTii
    128U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LOADDUAL
    0U,	// LSLi
    0U,	// LSLr
    0U,	// LSRi
    0U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MQPRCopy
    0U,	// MQQPRLoad
    0U,	// MQQPRStore
    0U,	// MQQQQPRLoad
    0U,	// MQQQQPRStore
    0U,	// MULv5
    0U,	// MVE_MEMCPYLOOPINST
    0U,	// MVE_MEMSETLOOPINST
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    0U,	// RORi
    0U,	// RORr
    0U,	// RRX
    16384U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SEH_EpilogEnd
    0U,	// SEH_EpilogStart
    0U,	// SEH_Nop
    0U,	// SEH_Nop_Ret
    0U,	// SEH_PrologEnd
    0U,	// SEH_SaveFRegs
    0U,	// SEH_SaveLR
    0U,	// SEH_SaveRegs
    0U,	// SEH_SaveRegs_Ret
    0U,	// SEH_SaveSP
    0U,	// SEH_StackAlloc
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    0U,	// STOREDUAL
    128U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    128U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// SpeculationBarrierISBDSBEndBB
    0U,	// SpeculationBarrierSBEndBB
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    16640U,	// VLD1LNdAsm_16
    16640U,	// VLD1LNdAsm_32
    16640U,	// VLD1LNdAsm_8
    33024U,	// VLD1LNdWB_fixed_Asm_16
    33024U,	// VLD1LNdWB_fixed_Asm_32
    33024U,	// VLD1LNdWB_fixed_Asm_8
    524544U,	// VLD1LNdWB_register_Asm_16
    524544U,	// VLD1LNdWB_register_Asm_32
    524544U,	// VLD1LNdWB_register_Asm_8
    16640U,	// VLD2LNdAsm_16
    16640U,	// VLD2LNdAsm_32
    16640U,	// VLD2LNdAsm_8
    33024U,	// VLD2LNdWB_fixed_Asm_16
    33024U,	// VLD2LNdWB_fixed_Asm_32
    33024U,	// VLD2LNdWB_fixed_Asm_8
    524544U,	// VLD2LNdWB_register_Asm_16
    524544U,	// VLD2LNdWB_register_Asm_32
    524544U,	// VLD2LNdWB_register_Asm_8
    16640U,	// VLD2LNqAsm_16
    16640U,	// VLD2LNqAsm_32
    33024U,	// VLD2LNqWB_fixed_Asm_16
    33024U,	// VLD2LNqWB_fixed_Asm_32
    524544U,	// VLD2LNqWB_register_Asm_16
    524544U,	// VLD2LNqWB_register_Asm_32
    2U,	// VLD3DUPdAsm_16
    2U,	// VLD3DUPdAsm_32
    2U,	// VLD3DUPdAsm_8
    4U,	// VLD3DUPdWB_fixed_Asm_16
    4U,	// VLD3DUPdWB_fixed_Asm_32
    4U,	// VLD3DUPdWB_fixed_Asm_8
    16768U,	// VLD3DUPdWB_register_Asm_16
    16768U,	// VLD3DUPdWB_register_Asm_32
    16768U,	// VLD3DUPdWB_register_Asm_8
    2U,	// VLD3DUPqAsm_16
    2U,	// VLD3DUPqAsm_32
    2U,	// VLD3DUPqAsm_8
    4U,	// VLD3DUPqWB_fixed_Asm_16
    4U,	// VLD3DUPqWB_fixed_Asm_32
    4U,	// VLD3DUPqWB_fixed_Asm_8
    16768U,	// VLD3DUPqWB_register_Asm_16
    16768U,	// VLD3DUPqWB_register_Asm_32
    16768U,	// VLD3DUPqWB_register_Asm_8
    16640U,	// VLD3LNdAsm_16
    16640U,	// VLD3LNdAsm_32
    16640U,	// VLD3LNdAsm_8
    33024U,	// VLD3LNdWB_fixed_Asm_16
    33024U,	// VLD3LNdWB_fixed_Asm_32
    33024U,	// VLD3LNdWB_fixed_Asm_8
    524544U,	// VLD3LNdWB_register_Asm_16
    524544U,	// VLD3LNdWB_register_Asm_32
    524544U,	// VLD3LNdWB_register_Asm_8
    16640U,	// VLD3LNqAsm_16
    16640U,	// VLD3LNqAsm_32
    33024U,	// VLD3LNqWB_fixed_Asm_16
    33024U,	// VLD3LNqWB_fixed_Asm_32
    524544U,	// VLD3LNqWB_register_Asm_16
    524544U,	// VLD3LNqWB_register_Asm_32
    518U,	// VLD3dAsm_16
    518U,	// VLD3dAsm_32
    518U,	// VLD3dAsm_8
    646U,	// VLD3dWB_fixed_Asm_16
    646U,	// VLD3dWB_fixed_Asm_32
    646U,	// VLD3dWB_fixed_Asm_8
    49926U,	// VLD3dWB_register_Asm_16
    49926U,	// VLD3dWB_register_Asm_32
    49926U,	// VLD3dWB_register_Asm_8
    2U,	// VLD3qAsm_16
    2U,	// VLD3qAsm_32
    2U,	// VLD3qAsm_8
    4U,	// VLD3qWB_fixed_Asm_16
    4U,	// VLD3qWB_fixed_Asm_32
    4U,	// VLD3qWB_fixed_Asm_8
    16768U,	// VLD3qWB_register_Asm_16
    16768U,	// VLD3qWB_register_Asm_32
    16768U,	// VLD3qWB_register_Asm_8
    2U,	// VLD4DUPdAsm_16
    2U,	// VLD4DUPdAsm_32
    2U,	// VLD4DUPdAsm_8
    4U,	// VLD4DUPdWB_fixed_Asm_16
    4U,	// VLD4DUPdWB_fixed_Asm_32
    4U,	// VLD4DUPdWB_fixed_Asm_8
    16768U,	// VLD4DUPdWB_register_Asm_16
    16768U,	// VLD4DUPdWB_register_Asm_32
    16768U,	// VLD4DUPdWB_register_Asm_8
    2U,	// VLD4DUPqAsm_16
    2U,	// VLD4DUPqAsm_32
    2U,	// VLD4DUPqAsm_8
    4U,	// VLD4DUPqWB_fixed_Asm_16
    4U,	// VLD4DUPqWB_fixed_Asm_32
    4U,	// VLD4DUPqWB_fixed_Asm_8
    16768U,	// VLD4DUPqWB_register_Asm_16
    16768U,	// VLD4DUPqWB_register_Asm_32
    16768U,	// VLD4DUPqWB_register_Asm_8
    16640U,	// VLD4LNdAsm_16
    16640U,	// VLD4LNdAsm_32
    16640U,	// VLD4LNdAsm_8
    33024U,	// VLD4LNdWB_fixed_Asm_16
    33024U,	// VLD4LNdWB_fixed_Asm_32
    33024U,	// VLD4LNdWB_fixed_Asm_8
    524544U,	// VLD4LNdWB_register_Asm_16
    524544U,	// VLD4LNdWB_register_Asm_32
    524544U,	// VLD4LNdWB_register_Asm_8
    16640U,	// VLD4LNqAsm_16
    16640U,	// VLD4LNqAsm_32
    33024U,	// VLD4LNqWB_fixed_Asm_16
    33024U,	// VLD4LNqWB_fixed_Asm_32
    524544U,	// VLD4LNqWB_register_Asm_16
    524544U,	// VLD4LNqWB_register_Asm_32
    518U,	// VLD4dAsm_16
    518U,	// VLD4dAsm_32
    518U,	// VLD4dAsm_8
    646U,	// VLD4dWB_fixed_Asm_16
    646U,	// VLD4dWB_fixed_Asm_32
    646U,	// VLD4dWB_fixed_Asm_8
    49926U,	// VLD4dWB_register_Asm_16
    49926U,	// VLD4dWB_register_Asm_32
    49926U,	// VLD4dWB_register_Asm_8
    2U,	// VLD4qAsm_16
    2U,	// VLD4qAsm_32
    2U,	// VLD4qAsm_8
    4U,	// VLD4qWB_fixed_Asm_16
    4U,	// VLD4qWB_fixed_Asm_32
    4U,	// VLD4qWB_fixed_Asm_8
    16768U,	// VLD4qWB_register_Asm_16
    16768U,	// VLD4qWB_register_Asm_32
    16768U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    16640U,	// VST1LNdAsm_16
    16640U,	// VST1LNdAsm_32
    16640U,	// VST1LNdAsm_8
    33024U,	// VST1LNdWB_fixed_Asm_16
    33024U,	// VST1LNdWB_fixed_Asm_32
    33024U,	// VST1LNdWB_fixed_Asm_8
    524544U,	// VST1LNdWB_register_Asm_16
    524544U,	// VST1LNdWB_register_Asm_32
    524544U,	// VST1LNdWB_register_Asm_8
    16640U,	// VST2LNdAsm_16
    16640U,	// VST2LNdAsm_32
    16640U,	// VST2LNdAsm_8
    33024U,	// VST2LNdWB_fixed_Asm_16
    33024U,	// VST2LNdWB_fixed_Asm_32
    33024U,	// VST2LNdWB_fixed_Asm_8
    524544U,	// VST2LNdWB_register_Asm_16
    524544U,	// VST2LNdWB_register_Asm_32
    524544U,	// VST2LNdWB_register_Asm_8
    16640U,	// VST2LNqAsm_16
    16640U,	// VST2LNqAsm_32
    33024U,	// VST2LNqWB_fixed_Asm_16
    33024U,	// VST2LNqWB_fixed_Asm_32
    524544U,	// VST2LNqWB_register_Asm_16
    524544U,	// VST2LNqWB_register_Asm_32
    16640U,	// VST3LNdAsm_16
    16640U,	// VST3LNdAsm_32
    16640U,	// VST3LNdAsm_8
    33024U,	// VST3LNdWB_fixed_Asm_16
    33024U,	// VST3LNdWB_fixed_Asm_32
    33024U,	// VST3LNdWB_fixed_Asm_8
    524544U,	// VST3LNdWB_register_Asm_16
    524544U,	// VST3LNdWB_register_Asm_32
    524544U,	// VST3LNdWB_register_Asm_8
    16640U,	// VST3LNqAsm_16
    16640U,	// VST3LNqAsm_32
    33024U,	// VST3LNqWB_fixed_Asm_16
    33024U,	// VST3LNqWB_fixed_Asm_32
    524544U,	// VST3LNqWB_register_Asm_16
    524544U,	// VST3LNqWB_register_Asm_32
    518U,	// VST3dAsm_16
    518U,	// VST3dAsm_32
    518U,	// VST3dAsm_8
    646U,	// VST3dWB_fixed_Asm_16
    646U,	// VST3dWB_fixed_Asm_32
    646U,	// VST3dWB_fixed_Asm_8
    49926U,	// VST3dWB_register_Asm_16
    49926U,	// VST3dWB_register_Asm_32
    49926U,	// VST3dWB_register_Asm_8
    2U,	// VST3qAsm_16
    2U,	// VST3qAsm_32
    2U,	// VST3qAsm_8
    4U,	// VST3qWB_fixed_Asm_16
    4U,	// VST3qWB_fixed_Asm_32
    4U,	// VST3qWB_fixed_Asm_8
    16768U,	// VST3qWB_register_Asm_16
    16768U,	// VST3qWB_register_Asm_32
    16768U,	// VST3qWB_register_Asm_8
    16640U,	// VST4LNdAsm_16
    16640U,	// VST4LNdAsm_32
    16640U,	// VST4LNdAsm_8
    33024U,	// VST4LNdWB_fixed_Asm_16
    33024U,	// VST4LNdWB_fixed_Asm_32
    33024U,	// VST4LNdWB_fixed_Asm_8
    524544U,	// VST4LNdWB_register_Asm_16
    524544U,	// VST4LNdWB_register_Asm_32
    524544U,	// VST4LNdWB_register_Asm_8
    16640U,	// VST4LNqAsm_16
    16640U,	// VST4LNqAsm_32
    33024U,	// VST4LNqWB_fixed_Asm_16
    33024U,	// VST4LNqWB_fixed_Asm_32
    524544U,	// VST4LNqWB_register_Asm_16
    524544U,	// VST4LNqWB_register_Asm_32
    518U,	// VST4dAsm_16
    518U,	// VST4dAsm_32
    518U,	// VST4dAsm_8
    646U,	// VST4dWB_fixed_Asm_16
    646U,	// VST4dWB_fixed_Asm_32
    646U,	// VST4dWB_fixed_Asm_8
    49926U,	// VST4dWB_register_Asm_16
    49926U,	// VST4dWB_register_Asm_32
    49926U,	// VST4dWB_register_Asm_8
    2U,	// VST4qAsm_16
    2U,	// VST4qAsm_32
    2U,	// VST4qAsm_8
    4U,	// VST4qWB_fixed_Asm_16
    4U,	// VST4qWB_fixed_Asm_32
    4U,	// VST4qWB_fixed_Asm_8
    16768U,	// VST4qWB_register_Asm_16
    16768U,	// VST4qWB_register_Asm_32
    16768U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2CALL_BTI
    0U,	// t2DoLoopStart
    0U,	// t2DoLoopStartTP
    0U,	// t2LDMIA_RET
    16384U,	// t2LDRBpcrel
    16384U,	// t2LDRConstPool
    16384U,	// t2LDRHpcrel
    0U,	// t2LDRLIT_ga_pcrel
    16384U,	// t2LDRSBpcrel
    16384U,	// t2LDRSHpcrel
    896U,	// t2LDR_POST_imm
    0U,	// t2LDR_PRE_imm
    0U,	// t2LDRpci_pic
    16384U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2LoopEndDec
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    1024U,	// t2MOVSsi
    1152U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    1024U,	// t2MOVsi
    1152U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    896U,	// t2STR_POST_imm
    0U,	// t2STR_PRE_imm
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2SpeculationBarrierISBDSBEndBB
    0U,	// t2SpeculationBarrierSBEndBB
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopSetup
    0U,	// t2WhileLoopStart
    0U,	// t2WhileLoopStartLR
    0U,	// t2WhileLoopStartTP
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBLXNS_CALL
    0U,	// tBLXr_noip
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBXNS_RET
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tCMP_SWAP_16
    0U,	// tCMP_SWAP_32
    0U,	// tCMP_SWAP_8
    0U,	// tLDMIA_UPD
    16384U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    1048576U,	// ADCri
    0U,	// ADCrr
    1572864U,	// ADCrsi
    0U,	// ADCrsr
    1048576U,	// ADDri
    0U,	// ADDrr
    1572864U,	// ADDrsi
    0U,	// ADDrsr
    1280U,	// ADR
    2U,	// AESD
    2U,	// AESE
    2U,	// AESIMC
    2U,	// AESMC
    1048576U,	// ANDri
    0U,	// ANDrr
    1572864U,	// ANDrsi
    0U,	// ANDrsr
    2163072U,	// BF16VDOTI_VDOTD
    2163072U,	// BF16VDOTI_VDOTQ
    16768U,	// BF16VDOTS_VDOTD
    16768U,	// BF16VDOTS_VDOTQ
    2U,	// BF16_VCVT
    2U,	// BF16_VCVTB
    2U,	// BF16_VCVTT
    1408U,	// BFC
    2622976U,	// BFI
    1048576U,	// BICri
    0U,	// BICrr
    1572864U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    2U,	// BLX_pred
    0U,	// BLXi
    2U,	// BL_pred
    0U,	// BX
    2U,	// BXJ
    0U,	// BX_RET
    2U,	// BX_pred
    2U,	// Bcc
    2U,	// CDE_CX1
    16776U,	// CDE_CX1A
    0U,	// CDE_CX1D
    522U,	// CDE_CX1DA
    16768U,	// CDE_CX2
    524680U,	// CDE_CX2A
    524U,	// CDE_CX2D
    2179850U,	// CDE_CX2DA
    524672U,	// CDE_CX3
    34079112U,	// CDE_CX3A
    2179852U,	// CDE_CX3D
    70337290U,	// CDE_CX3DA
    2U,	// CDE_VCX1A_fpdp
    2U,	// CDE_VCX1A_fpsp
    16776U,	// CDE_VCX1A_vec
    2U,	// CDE_VCX1_fpdp
    2U,	// CDE_VCX1_fpsp
    17928U,	// CDE_VCX1_vec
    18048U,	// CDE_VCX2A_fpdp
    18048U,	// CDE_VCX2A_fpsp
    524680U,	// CDE_VCX2A_vec
    16768U,	// CDE_VCX2_fpdp
    16768U,	// CDE_VCX2_fpsp
    3671560U,	// CDE_VCX2_vec
    4195968U,	// CDE_VCX3A_fpdp
    4195968U,	// CDE_VCX3A_fpsp
    34079112U,	// CDE_VCX3A_vec
    524672U,	// CDE_VCX3_fpdp
    524672U,	// CDE_VCX3_fpsp
    37225992U,	// CDE_VCX3_vec
    99086U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    16384U,	// CLZ
    1792U,	// CMNri
    16384U,	// CMNzrr
    1920U,	// CMNzrsi
    1152U,	// CMNzrsr
    1792U,	// CMPri
    16384U,	// CMPrr
    1920U,	// CMPrsi
    1152U,	// CMPrsr
    0U,	// CPS1p
    2U,	// CPS2p
    17920U,	// CPS3p
    17920U,	// CRC32B
    17920U,	// CRC32CB
    17920U,	// CRC32CH
    17920U,	// CRC32CW
    17920U,	// CRC32H
    17920U,	// CRC32W
    2U,	// DBG
    0U,	// DMB
    0U,	// DSB
    1048576U,	// EORri
    0U,	// EORrr
    1572864U,	// EORrsi
    0U,	// EORrsr
    0U,	// ERET
    16U,	// FCONSTD
    2048U,	// FCONSTH
    2048U,	// FCONSTS
    530U,	// FLDMXDB_UPD
    18560U,	// FLDMXIA
    530U,	// FLDMXIA_UPD
    0U,	// FMSTAT
    530U,	// FSTMXDB_UPD
    18560U,	// FSTMXIA
    530U,	// FSTMXIA_UPD
    2U,	// HINT
    0U,	// HLT
    0U,	// HVC
    0U,	// ISB
    128U,	// LDA
    128U,	// LDAB
    128U,	// LDAEX
    128U,	// LDAEXB
    0U,	// LDAEXD
    128U,	// LDAEXH
    128U,	// LDAH
    0U,	// LDC2L_OFFSET
    2304U,	// LDC2L_OPTION
    2432U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    2304U,	// LDC2_OPTION
    2432U,	// LDC2_POST
    0U,	// LDC2_PRE
    2580U,	// LDCL_OFFSET
    4721300U,	// LDCL_OPTION
    5245588U,	// LDCL_POST
    2836U,	// LDCL_PRE
    2580U,	// LDC_OFFSET
    4721300U,	// LDC_OPTION
    5245588U,	// LDC_POST
    2836U,	// LDC_PRE
    18560U,	// LDMDA
    530U,	// LDMDA_UPD
    18560U,	// LDMDB
    530U,	// LDMDB_UPD
    18560U,	// LDMIA
    530U,	// LDMIA_UPD
    18560U,	// LDMIB
    530U,	// LDMIB_UPD
    5769856U,	// LDRBT_POST_IMM
    5769856U,	// LDRBT_POST_REG
    5769856U,	// LDRB_POST_IMM
    5769856U,	// LDRB_POST_REG
    2944U,	// LDRB_PRE_IMM
    3072U,	// LDRB_PRE_REG
    3200U,	// LDRBi12
    3328U,	// LDRBrs
    6291456U,	// LDRD
    40370176U,	// LDRD_POST
    7340032U,	// LDRD_PRE
    128U,	// LDREX
    128U,	// LDREXB
    0U,	// LDREXD
    128U,	// LDREXH
    3456U,	// LDRH
    7867008U,	// LDRHTi
    8391296U,	// LDRHTr
    8915584U,	// LDRH_POST
    3584U,	// LDRH_PRE
    3456U,	// LDRSB
    7867008U,	// LDRSBTi
    8391296U,	// LDRSBTr
    8915584U,	// LDRSB_POST
    3584U,	// LDRSB_PRE
    3456U,	// LDRSH
    7867008U,	// LDRSHTi
    8391296U,	// LDRSHTr
    8915584U,	// LDRSH_POST
    3584U,	// LDRSH_PRE
    5769856U,	// LDRT_POST_IMM
    5769856U,	// LDRT_POST_REG
    5769856U,	// LDR_POST_IMM
    5769856U,	// LDR_POST_REG
    2944U,	// LDR_PRE_IMM
    3072U,	// LDR_PRE_REG
    3200U,	// LDRcp
    3200U,	// LDRi12
    3328U,	// LDRrs
    103924494U,	// MCR
    3712U,	// MCR2
    137478926U,	// MCRR
    9437568U,	// MCRR2
    33554432U,	// MLA
    33554432U,	// MLS
    0U,	// MOVPCLR
    17920U,	// MOVTi16
    1792U,	// MOVi
    16384U,	// MOVi16
    16384U,	// MOVr
    16384U,	// MOVr_TC
    1920U,	// MOVsi
    1152U,	// MOVsr
    131862U,	// MRC
    0U,	// MRC2
    0U,	// MRRC
    0U,	// MRRC2
    24U,	// MRS
    3840U,	// MRSbanked
    26U,	// MRSsys
    526U,	// MSR
    0U,	// MSRbanked
    28U,	// MSRi
    0U,	// MUL
    524288U,	// MVE_ASRLi
    524288U,	// MVE_ASRLr
    2U,	// MVE_DLSTP_16
    2U,	// MVE_DLSTP_32
    2U,	// MVE_DLSTP_64
    2U,	// MVE_DLSTP_8
    0U,	// MVE_LCTP
    0U,	// MVE_LETP
    524288U,	// MVE_LSLLi
    524288U,	// MVE_LSLLr
    524288U,	// MVE_LSRL
    17920U,	// MVE_SQRSHR
    9961472U,	// MVE_SQRSHRL
    17920U,	// MVE_SQSHL
    524288U,	// MVE_SQSHLL
    17920U,	// MVE_SRSHR
    524288U,	// MVE_SRSHRL
    17920U,	// MVE_UQRSHL
    9961472U,	// MVE_UQRSHLL
    17920U,	// MVE_UQSHL
    524288U,	// MVE_UQSHLL
    17920U,	// MVE_URSHR
    524288U,	// MVE_URSHRL
    3671552U,	// MVE_VABAVs16
    3671552U,	// MVE_VABAVs32
    3671552U,	// MVE_VABAVs8
    3671552U,	// MVE_VABAVu16
    3671552U,	// MVE_VABAVu32
    3671552U,	// MVE_VABAVu8
    0U,	// MVE_VABDf16
    0U,	// MVE_VABDf32
    0U,	// MVE_VABDs16
    0U,	// MVE_VABDs32
    0U,	// MVE_VABDs8
    0U,	// MVE_VABDu16
    0U,	// MVE_VABDu32
    0U,	// MVE_VABDu8
    16384U,	// MVE_VABSf16
    16384U,	// MVE_VABSf32
    16384U,	// MVE_VABSs16
    16384U,	// MVE_VABSs32
    16384U,	// MVE_VABSs8
    3671552U,	// MVE_VADC
    3671552U,	// MVE_VADCI
    524288U,	// MVE_VADDLVs32acc
    0U,	// MVE_VADDLVs32no_acc
    524288U,	// MVE_VADDLVu32acc
    0U,	// MVE_VADDLVu32no_acc
    17920U,	// MVE_VADDVs16acc
    16384U,	// MVE_VADDVs16no_acc
    17920U,	// MVE_VADDVs32acc
    16384U,	// MVE_VADDVs32no_acc
    17920U,	// MVE_VADDVs8acc
    16384U,	// MVE_VADDVs8no_acc
    17920U,	// MVE_VADDVu16acc
    16384U,	// MVE_VADDVu16no_acc
    17920U,	// MVE_VADDVu32acc
    16384U,	// MVE_VADDVu32no_acc
    17920U,	// MVE_VADDVu8acc
    16384U,	// MVE_VADDVu8no_acc
    0U,	// MVE_VADD_qr_f16
    0U,	// MVE_VADD_qr_f32
    0U,	// MVE_VADD_qr_i16
    0U,	// MVE_VADD_qr_i32
    0U,	// MVE_VADD_qr_i8
    0U,	// MVE_VADDf16
    0U,	// MVE_VADDf32
    0U,	// MVE_VADDi16
    0U,	// MVE_VADDi32
    0U,	// MVE_VADDi8
    0U,	// MVE_VAND
    0U,	// MVE_VBIC
    3968U,	// MVE_VBICimmi16
    3968U,	// MVE_VBICimmi32
    0U,	// MVE_VBRSR16
    0U,	// MVE_VBRSR32
    0U,	// MVE_VBRSR8
    33554432U,	// MVE_VCADDf16
    33554432U,	// MVE_VCADDf32
    33554432U,	// MVE_VCADDi16
    33554432U,	// MVE_VCADDi32
    33554432U,	// MVE_VCADDi8
    16384U,	// MVE_VCLSs16
    16384U,	// MVE_VCLSs32
    16384U,	// MVE_VCLSs8
    16384U,	// MVE_VCLZs16
    16384U,	// MVE_VCLZs32
    16384U,	// MVE_VCLZs8
    37225984U,	// MVE_VCMLAf16
    37225984U,	// MVE_VCMLAf32
    0U,	// MVE_VCMPf16
    0U,	// MVE_VCMPf16r
    0U,	// MVE_VCMPf32
    0U,	// MVE_VCMPf32r
    0U,	// MVE_VCMPi16
    0U,	// MVE_VCMPi16r
    0U,	// MVE_VCMPi32
    0U,	// MVE_VCMPi32r
    0U,	// MVE_VCMPi8
    0U,	// MVE_VCMPi8r
    0U,	// MVE_VCMPs16
    0U,	// MVE_VCMPs16r
    0U,	// MVE_VCMPs32
    0U,	// MVE_VCMPs32r
    0U,	// MVE_VCMPs8
    0U,	// MVE_VCMPs8r
    0U,	// MVE_VCMPu16
    0U,	// MVE_VCMPu16r
    0U,	// MVE_VCMPu32
    0U,	// MVE_VCMPu32r
    0U,	// MVE_VCMPu8
    0U,	// MVE_VCMPu8r
    33554432U,	// MVE_VCMULf16
    33554432U,	// MVE_VCMULf32
    2U,	// MVE_VCTP16
    2U,	// MVE_VCTP32
    2U,	// MVE_VCTP64
    2U,	// MVE_VCTP8
    2U,	// MVE_VCVTf16f32bh
    2U,	// MVE_VCVTf16f32th
    534U,	// MVE_VCVTf16s16_fix
    0U,	// MVE_VCVTf16s16n
    534U,	// MVE_VCVTf16u16_fix
    0U,	// MVE_VCVTf16u16n
    0U,	// MVE_VCVTf32f16bh
    0U,	// MVE_VCVTf32f16th
    534U,	// MVE_VCVTf32s32_fix
    0U,	// MVE_VCVTf32s32n
    534U,	// MVE_VCVTf32u32_fix
    0U,	// MVE_VCVTf32u32n
    534U,	// MVE_VCVTs16f16_fix
    0U,	// MVE_VCVTs16f16a
    0U,	// MVE_VCVTs16f16m
    0U,	// MVE_VCVTs16f16n
    0U,	// MVE_VCVTs16f16p
    0U,	// MVE_VCVTs16f16z
    534U,	// MVE_VCVTs32f32_fix
    0U,	// MVE_VCVTs32f32a
    0U,	// MVE_VCVTs32f32m
    0U,	// MVE_VCVTs32f32n
    0U,	// MVE_VCVTs32f32p
    0U,	// MVE_VCVTs32f32z
    534U,	// MVE_VCVTu16f16_fix
    0U,	// MVE_VCVTu16f16a
    0U,	// MVE_VCVTu16f16m
    0U,	// MVE_VCVTu16f16n
    0U,	// MVE_VCVTu16f16p
    0U,	// MVE_VCVTu16f16z
    534U,	// MVE_VCVTu32f32_fix
    0U,	// MVE_VCVTu32f32a
    0U,	// MVE_VCVTu32f32m
    0U,	// MVE_VCVTu32f32n
    0U,	// MVE_VCVTu32f32p
    0U,	// MVE_VCVTu32f32z
    3670016U,	// MVE_VDDUPu16
    3670016U,	// MVE_VDDUPu32
    3670016U,	// MVE_VDDUPu8
    16384U,	// MVE_VDUP16
    16384U,	// MVE_VDUP32
    16384U,	// MVE_VDUP8
    37224448U,	// MVE_VDWDUPu16
    37224448U,	// MVE_VDWDUPu32
    37224448U,	// MVE_VDWDUPu8
    0U,	// MVE_VEOR
    3671552U,	// MVE_VFMA_qr_Sf16
    3671552U,	// MVE_VFMA_qr_Sf32
    3671552U,	// MVE_VFMA_qr_f16
    3671552U,	// MVE_VFMA_qr_f32
    3671552U,	// MVE_VFMAf16
    3671552U,	// MVE_VFMAf32
    3671552U,	// MVE_VFMSf16
    3671552U,	// MVE_VFMSf32
    0U,	// MVE_VHADD_qr_s16
    0U,	// MVE_VHADD_qr_s32
    0U,	// MVE_VHADD_qr_s8
    0U,	// MVE_VHADD_qr_u16
    0U,	// MVE_VHADD_qr_u32
    0U,	// MVE_VHADD_qr_u8
    0U,	// MVE_VHADDs16
    0U,	// MVE_VHADDs32
    0U,	// MVE_VHADDs8
    0U,	// MVE_VHADDu16
    0U,	// MVE_VHADDu32
    0U,	// MVE_VHADDu8
    33554432U,	// MVE_VHCADDs16
    33554432U,	// MVE_VHCADDs32
    33554432U,	// MVE_VHCADDs8
    0U,	// MVE_VHSUB_qr_s16
    0U,	// MVE_VHSUB_qr_s32
    0U,	// MVE_VHSUB_qr_s8
    0U,	// MVE_VHSUB_qr_u16
    0U,	// MVE_VHSUB_qr_u32
    0U,	// MVE_VHSUB_qr_u8
    0U,	// MVE_VHSUBs16
    0U,	// MVE_VHSUBs32
    0U,	// MVE_VHSUBs8
    0U,	// MVE_VHSUBu16
    0U,	// MVE_VHSUBu32
    0U,	// MVE_VHSUBu8
    3670016U,	// MVE_VIDUPu16
    3670016U,	// MVE_VIDUPu32
    3670016U,	// MVE_VIDUPu8
    37224448U,	// MVE_VIWDUPu16
    37224448U,	// MVE_VIWDUPu32
    37224448U,	// MVE_VIWDUPu8
    0U,	// MVE_VLD20_16
    0U,	// MVE_VLD20_16_wb
    0U,	// MVE_VLD20_32
    0U,	// MVE_VLD20_32_wb
    0U,	// MVE_VLD20_8
    0U,	// MVE_VLD20_8_wb
    0U,	// MVE_VLD21_16
    0U,	// MVE_VLD21_16_wb
    0U,	// MVE_VLD21_32
    0U,	// MVE_VLD21_32_wb
    0U,	// MVE_VLD21_8
    0U,	// MVE_VLD21_8_wb
    0U,	// MVE_VLD40_16
    0U,	// MVE_VLD40_16_wb
    0U,	// MVE_VLD40_32
    0U,	// MVE_VLD40_32_wb
    0U,	// MVE_VLD40_8
    0U,	// MVE_VLD40_8_wb
    0U,	// MVE_VLD41_16
    0U,	// MVE_VLD41_16_wb
    0U,	// MVE_VLD41_32
    0U,	// MVE_VLD41_32_wb
    0U,	// MVE_VLD41_8
    0U,	// MVE_VLD41_8_wb
    0U,	// MVE_VLD42_16
    0U,	// MVE_VLD42_16_wb
    0U,	// MVE_VLD42_32
    0U,	// MVE_VLD42_32_wb
    0U,	// MVE_VLD42_8
    0U,	// MVE_VLD42_8_wb
    0U,	// MVE_VLD43_16
    0U,	// MVE_VLD43_16_wb
    0U,	// MVE_VLD43_32
    0U,	// MVE_VLD43_32_wb
    0U,	// MVE_VLD43_8
    0U,	// MVE_VLD43_8_wb
    4096U,	// MVE_VLDRBS16
    150144U,	// MVE_VLDRBS16_post
    4224U,	// MVE_VLDRBS16_pre
    4352U,	// MVE_VLDRBS16_rq
    4096U,	// MVE_VLDRBS32
    150144U,	// MVE_VLDRBS32_post
    4224U,	// MVE_VLDRBS32_pre
    4352U,	// MVE_VLDRBS32_rq
    4096U,	// MVE_VLDRBU16
    150144U,	// MVE_VLDRBU16_post
    4224U,	// MVE_VLDRBU16_pre
    4352U,	// MVE_VLDRBU16_rq
    4096U,	// MVE_VLDRBU32
    150144U,	// MVE_VLDRBU32_post
    4224U,	// MVE_VLDRBU32_pre
    4352U,	// MVE_VLDRBU32_rq
    4096U,	// MVE_VLDRBU8
    150144U,	// MVE_VLDRBU8_post
    4480U,	// MVE_VLDRBU8_pre
    4352U,	// MVE_VLDRBU8_rq
    4096U,	// MVE_VLDRDU64_qi
    4224U,	// MVE_VLDRDU64_qi_pre
    4608U,	// MVE_VLDRDU64_rq
    4352U,	// MVE_VLDRDU64_rq_u
    4096U,	// MVE_VLDRHS32
    150144U,	// MVE_VLDRHS32_post
    4224U,	// MVE_VLDRHS32_pre
    4736U,	// MVE_VLDRHS32_rq
    4352U,	// MVE_VLDRHS32_rq_u
    4096U,	// MVE_VLDRHU16
    150144U,	// MVE_VLDRHU16_post
    4480U,	// MVE_VLDRHU16_pre
    4736U,	// MVE_VLDRHU16_rq
    4352U,	// MVE_VLDRHU16_rq_u
    4096U,	// MVE_VLDRHU32
    150144U,	// MVE_VLDRHU32_post
    4224U,	// MVE_VLDRHU32_pre
    4736U,	// MVE_VLDRHU32_rq
    4352U,	// MVE_VLDRHU32_rq_u
    4096U,	// MVE_VLDRWU32
    150144U,	// MVE_VLDRWU32_post
    4480U,	// MVE_VLDRWU32_pre
    4096U,	// MVE_VLDRWU32_qi
    4224U,	// MVE_VLDRWU32_qi_pre
    4864U,	// MVE_VLDRWU32_rq
    4352U,	// MVE_VLDRWU32_rq_u
    17920U,	// MVE_VMAXAVs16
    17920U,	// MVE_VMAXAVs32
    17920U,	// MVE_VMAXAVs8
    17920U,	// MVE_VMAXAs16
    17920U,	// MVE_VMAXAs32
    17920U,	// MVE_VMAXAs8
    17920U,	// MVE_VMAXNMAVf16
    17920U,	// MVE_VMAXNMAVf32
    17920U,	// MVE_VMAXNMAf16
    17920U,	// MVE_VMAXNMAf32
    17920U,	// MVE_VMAXNMVf16
    17920U,	// MVE_VMAXNMVf32
    0U,	// MVE_VMAXNMf16
    0U,	// MVE_VMAXNMf32
    17920U,	// MVE_VMAXVs16
    17920U,	// MVE_VMAXVs32
    17920U,	// MVE_VMAXVs8
    17920U,	// MVE_VMAXVu16
    17920U,	// MVE_VMAXVu32
    17920U,	// MVE_VMAXVu8
    0U,	// MVE_VMAXs16
    0U,	// MVE_VMAXs32
    0U,	// MVE_VMAXs8
    0U,	// MVE_VMAXu16
    0U,	// MVE_VMAXu32
    0U,	// MVE_VMAXu8
    17920U,	// MVE_VMINAVs16
    17920U,	// MVE_VMINAVs32
    17920U,	// MVE_VMINAVs8
    17920U,	// MVE_VMINAs16
    17920U,	// MVE_VMINAs32
    17920U,	// MVE_VMINAs8
    17920U,	// MVE_VMINNMAVf16
    17920U,	// MVE_VMINNMAVf32
    17920U,	// MVE_VMINNMAf16
    17920U,	// MVE_VMINNMAf32
    17920U,	// MVE_VMINNMVf16
    17920U,	// MVE_VMINNMVf32
    0U,	// MVE_VMINNMf16
    0U,	// MVE_VMINNMf32
    17920U,	// MVE_VMINVs16
    17920U,	// MVE_VMINVs32
    17920U,	// MVE_VMINVs8
    17920U,	// MVE_VMINVu16
    17920U,	// MVE_VMINVu32
    17920U,	// MVE_VMINVu8
    0U,	// MVE_VMINs16
    0U,	// MVE_VMINs32
    0U,	// MVE_VMINs8
    0U,	// MVE_VMINu16
    0U,	// MVE_VMINu32
    0U,	// MVE_VMINu8
    3671552U,	// MVE_VMLADAVas16
    3671552U,	// MVE_VMLADAVas32
    3671552U,	// MVE_VMLADAVas8
    3671552U,	// MVE_VMLADAVau16
    3671552U,	// MVE_VMLADAVau32
    3671552U,	// MVE_VMLADAVau8
    3671552U,	// MVE_VMLADAVaxs16
    3671552U,	// MVE_VMLADAVaxs32
    3671552U,	// MVE_VMLADAVaxs8
    0U,	// MVE_VMLADAVs16
    0U,	// MVE_VMLADAVs32
    0U,	// MVE_VMLADAVs8
    0U,	// MVE_VMLADAVu16
    0U,	// MVE_VMLADAVu32
    0U,	// MVE_VMLADAVu8
    0U,	// MVE_VMLADAVxs16
    0U,	// MVE_VMLADAVxs32
    0U,	// MVE_VMLADAVxs8
    34078720U,	// MVE_VMLALDAVas16
    34078720U,	// MVE_VMLALDAVas32
    34078720U,	// MVE_VMLALDAVau16
    34078720U,	// MVE_VMLALDAVau32
    34078720U,	// MVE_VMLALDAVaxs16
    34078720U,	// MVE_VMLALDAVaxs32
    33554432U,	// MVE_VMLALDAVs16
    33554432U,	// MVE_VMLALDAVs32
    33554432U,	// MVE_VMLALDAVu16
    33554432U,	// MVE_VMLALDAVu32
    33554432U,	// MVE_VMLALDAVxs16
    33554432U,	// MVE_VMLALDAVxs32
    3671552U,	// MVE_VMLAS_qr_i16
    3671552U,	// MVE_VMLAS_qr_i32
    3671552U,	// MVE_VMLAS_qr_i8
    3671552U,	// MVE_VMLA_qr_i16
    3671552U,	// MVE_VMLA_qr_i32
    3671552U,	// MVE_VMLA_qr_i8
    3671552U,	// MVE_VMLSDAVas16
    3671552U,	// MVE_VMLSDAVas32
    3671552U,	// MVE_VMLSDAVas8
    3671552U,	// MVE_VMLSDAVaxs16
    3671552U,	// MVE_VMLSDAVaxs32
    3671552U,	// MVE_VMLSDAVaxs8
    0U,	// MVE_VMLSDAVs16
    0U,	// MVE_VMLSDAVs32
    0U,	// MVE_VMLSDAVs8
    0U,	// MVE_VMLSDAVxs16
    0U,	// MVE_VMLSDAVxs32
    0U,	// MVE_VMLSDAVxs8
    34078720U,	// MVE_VMLSLDAVas16
    34078720U,	// MVE_VMLSLDAVas32
    34078720U,	// MVE_VMLSLDAVaxs16
    34078720U,	// MVE_VMLSLDAVaxs32
    33554432U,	// MVE_VMLSLDAVs16
    33554432U,	// MVE_VMLSLDAVs32
    33554432U,	// MVE_VMLSLDAVxs16
    33554432U,	// MVE_VMLSLDAVxs32
    16384U,	// MVE_VMOVLs16bh
    16384U,	// MVE_VMOVLs16th
    16384U,	// MVE_VMOVLs8bh
    16384U,	// MVE_VMOVLs8th
    16384U,	// MVE_VMOVLu16bh
    16384U,	// MVE_VMOVLu16th
    16384U,	// MVE_VMOVLu8bh
    16384U,	// MVE_VMOVLu8th
    17920U,	// MVE_VMOVNi16bh
    17920U,	// MVE_VMOVNi16th
    17920U,	// MVE_VMOVNi32bh
    17920U,	// MVE_VMOVNi32th
    163840U,	// MVE_VMOV_from_lane_32
    163840U,	// MVE_VMOV_from_lane_s16
    163840U,	// MVE_VMOV_from_lane_s8
    163840U,	// MVE_VMOV_from_lane_u16
    163840U,	// MVE_VMOV_from_lane_u8
    30U,	// MVE_VMOV_q_rr
    167772160U,	// MVE_VMOV_rr_q
    32U,	// MVE_VMOV_to_lane_16
    32U,	// MVE_VMOV_to_lane_32
    32U,	// MVE_VMOV_to_lane_8
    2048U,	// MVE_VMOVimmf32
    4992U,	// MVE_VMOVimmi16
    4992U,	// MVE_VMOVimmi32
    0U,	// MVE_VMOVimmi64
    4992U,	// MVE_VMOVimmi8
    0U,	// MVE_VMULHs16
    0U,	// MVE_VMULHs32
    0U,	// MVE_VMULHs8
    0U,	// MVE_VMULHu16
    0U,	// MVE_VMULHu32
    0U,	// MVE_VMULHu8
    0U,	// MVE_VMULLBp16
    0U,	// MVE_VMULLBp8
    0U,	// MVE_VMULLBs16
    0U,	// MVE_VMULLBs32
    0U,	// MVE_VMULLBs8
    0U,	// MVE_VMULLBu16
    0U,	// MVE_VMULLBu32
    0U,	// MVE_VMULLBu8
    0U,	// MVE_VMULLTp16
    0U,	// MVE_VMULLTp8
    0U,	// MVE_VMULLTs16
    0U,	// MVE_VMULLTs32
    0U,	// MVE_VMULLTs8
    0U,	// MVE_VMULLTu16
    0U,	// MVE_VMULLTu32
    0U,	// MVE_VMULLTu8
    0U,	// MVE_VMUL_qr_f16
    0U,	// MVE_VMUL_qr_f32
    0U,	// MVE_VMUL_qr_i16
    0U,	// MVE_VMUL_qr_i32
    0U,	// MVE_VMUL_qr_i8
    0U,	// MVE_VMULf16
    0U,	// MVE_VMULf32
    0U,	// MVE_VMULi16
    0U,	// MVE_VMULi32
    0U,	// MVE_VMULi8
    16384U,	// MVE_VMVN
    4992U,	// MVE_VMVNimmi16
    4992U,	// MVE_VMVNimmi32
    16384U,	// MVE_VNEGf16
    16384U,	// MVE_VNEGf32
    16384U,	// MVE_VNEGs16
    16384U,	// MVE_VNEGs32
    16384U,	// MVE_VNEGs8
    0U,	// MVE_VORN
    0U,	// MVE_VORR
    3968U,	// MVE_VORRimmi16
    3968U,	// MVE_VORRimmi32
    0U,	// MVE_VPNOT
    0U,	// MVE_VPSEL
    0U,	// MVE_VPST
    0U,	// MVE_VPTv16i8
    0U,	// MVE_VPTv16i8r
    0U,	// MVE_VPTv16s8
    0U,	// MVE_VPTv16s8r
    0U,	// MVE_VPTv16u8
    0U,	// MVE_VPTv16u8r
    0U,	// MVE_VPTv4f32
    0U,	// MVE_VPTv4f32r
    0U,	// MVE_VPTv4i32
    0U,	// MVE_VPTv4i32r
    0U,	// MVE_VPTv4s32
    0U,	// MVE_VPTv4s32r
    0U,	// MVE_VPTv4u32
    0U,	// MVE_VPTv4u32r
    0U,	// MVE_VPTv8f16
    0U,	// MVE_VPTv8f16r
    0U,	// MVE_VPTv8i16
    0U,	// MVE_VPTv8i16r
    0U,	// MVE_VPTv8s16
    0U,	// MVE_VPTv8s16r
    0U,	// MVE_VPTv8u16
    0U,	// MVE_VPTv8u16r
    16384U,	// MVE_VQABSs16
    16384U,	// MVE_VQABSs32
    16384U,	// MVE_VQABSs8
    0U,	// MVE_VQADD_qr_s16
    0U,	// MVE_VQADD_qr_s32
    0U,	// MVE_VQADD_qr_s8
    0U,	// MVE_VQADD_qr_u16
    0U,	// MVE_VQADD_qr_u32
    0U,	// MVE_VQADD_qr_u8
    0U,	// MVE_VQADDs16
    0U,	// MVE_VQADDs32
    0U,	// MVE_VQADDs8
    0U,	// MVE_VQADDu16
    0U,	// MVE_VQADDu32
    0U,	// MVE_VQADDu8
    3671552U,	// MVE_VQDMLADHXs16
    3671552U,	// MVE_VQDMLADHXs32
    3671552U,	// MVE_VQDMLADHXs8
    3671552U,	// MVE_VQDMLADHs16
    3671552U,	// MVE_VQDMLADHs32
    3671552U,	// MVE_VQDMLADHs8
    3671552U,	// MVE_VQDMLAH_qrs16
    3671552U,	// MVE_VQDMLAH_qrs32
    3671552U,	// MVE_VQDMLAH_qrs8
    3671552U,	// MVE_VQDMLASH_qrs16
    3671552U,	// MVE_VQDMLASH_qrs32
    3671552U,	// MVE_VQDMLASH_qrs8
    3671552U,	// MVE_VQDMLSDHXs16
    3671552U,	// MVE_VQDMLSDHXs32
    3671552U,	// MVE_VQDMLSDHXs8
    3671552U,	// MVE_VQDMLSDHs16
    3671552U,	// MVE_VQDMLSDHs32
    3671552U,	// MVE_VQDMLSDHs8
    0U,	// MVE_VQDMULH_qr_s16
    0U,	// MVE_VQDMULH_qr_s32
    0U,	// MVE_VQDMULH_qr_s8
    0U,	// MVE_VQDMULHi16
    0U,	// MVE_VQDMULHi32
    0U,	// MVE_VQDMULHi8
    0U,	// MVE_VQDMULL_qr_s16bh
    0U,	// MVE_VQDMULL_qr_s16th
    0U,	// MVE_VQDMULL_qr_s32bh
    0U,	// MVE_VQDMULL_qr_s32th
    0U,	// MVE_VQDMULLs16bh
    0U,	// MVE_VQDMULLs16th
    0U,	// MVE_VQDMULLs32bh
    0U,	// MVE_VQDMULLs32th
    17920U,	// MVE_VQMOVNs16bh
    17920U,	// MVE_VQMOVNs16th
    17920U,	// MVE_VQMOVNs32bh
    17920U,	// MVE_VQMOVNs32th
    17920U,	// MVE_VQMOVNu16bh
    17920U,	// MVE_VQMOVNu16th
    17920U,	// MVE_VQMOVNu32bh
    17920U,	// MVE_VQMOVNu32th
    17920U,	// MVE_VQMOVUNs16bh
    17920U,	// MVE_VQMOVUNs16th
    17920U,	// MVE_VQMOVUNs32bh
    17920U,	// MVE_VQMOVUNs32th
    16384U,	// MVE_VQNEGs16
    16384U,	// MVE_VQNEGs32
    16384U,	// MVE_VQNEGs8
    3671552U,	// MVE_VQRDMLADHXs16
    3671552U,	// MVE_VQRDMLADHXs32
    3671552U,	// MVE_VQRDMLADHXs8
    3671552U,	// MVE_VQRDMLADHs16
    3671552U,	// MVE_VQRDMLADHs32
    3671552U,	// MVE_VQRDMLADHs8
    3671552U,	// MVE_VQRDMLAH_qrs16
    3671552U,	// MVE_VQRDMLAH_qrs32
    3671552U,	// MVE_VQRDMLAH_qrs8
    3671552U,	// MVE_VQRDMLASH_qrs16
    3671552U,	// MVE_VQRDMLASH_qrs32
    3671552U,	// MVE_VQRDMLASH_qrs8
    3671552U,	// MVE_VQRDMLSDHXs16
    3671552U,	// MVE_VQRDMLSDHXs32
    3671552U,	// MVE_VQRDMLSDHXs8
    3671552U,	// MVE_VQRDMLSDHs16
    3671552U,	// MVE_VQRDMLSDHs32
    3671552U,	// MVE_VQRDMLSDHs8
    0U,	// MVE_VQRDMULH_qr_s16
    0U,	// MVE_VQRDMULH_qr_s32
    0U,	// MVE_VQRDMULH_qr_s8
    0U,	// MVE_VQRDMULHi16
    0U,	// MVE_VQRDMULHi32
    0U,	// MVE_VQRDMULHi8
    0U,	// MVE_VQRSHL_by_vecs16
    0U,	// MVE_VQRSHL_by_vecs32
    0U,	// MVE_VQRSHL_by_vecs8
    0U,	// MVE_VQRSHL_by_vecu16
    0U,	// MVE_VQRSHL_by_vecu32
    0U,	// MVE_VQRSHL_by_vecu8
    17920U,	// MVE_VQRSHL_qrs16
    17920U,	// MVE_VQRSHL_qrs32
    17920U,	// MVE_VQRSHL_qrs8
    17920U,	// MVE_VQRSHL_qru16
    17920U,	// MVE_VQRSHL_qru32
    17920U,	// MVE_VQRSHL_qru8
    3671552U,	// MVE_VQRSHRNbhs16
    3671552U,	// MVE_VQRSHRNbhs32
    3671552U,	// MVE_VQRSHRNbhu16
    3671552U,	// MVE_VQRSHRNbhu32
    3671552U,	// MVE_VQRSHRNths16
    3671552U,	// MVE_VQRSHRNths32
    3671552U,	// MVE_VQRSHRNthu16
    3671552U,	// MVE_VQRSHRNthu32
    3671552U,	// MVE_VQRSHRUNs16bh
    3671552U,	// MVE_VQRSHRUNs16th
    3671552U,	// MVE_VQRSHRUNs32bh
    3671552U,	// MVE_VQRSHRUNs32th
    0U,	// MVE_VQSHLU_imms16
    0U,	// MVE_VQSHLU_imms32
    0U,	// MVE_VQSHLU_imms8
    0U,	// MVE_VQSHL_by_vecs16
    0U,	// MVE_VQSHL_by_vecs32
    0U,	// MVE_VQSHL_by_vecs8
    0U,	// MVE_VQSHL_by_vecu16
    0U,	// MVE_VQSHL_by_vecu32
    0U,	// MVE_VQSHL_by_vecu8
    17920U,	// MVE_VQSHL_qrs16
    17920U,	// MVE_VQSHL_qrs32
    17920U,	// MVE_VQSHL_qrs8
    17920U,	// MVE_VQSHL_qru16
    17920U,	// MVE_VQSHL_qru32
    17920U,	// MVE_VQSHL_qru8
    0U,	// MVE_VQSHLimms16
    0U,	// MVE_VQSHLimms32
    0U,	// MVE_VQSHLimms8
    0U,	// MVE_VQSHLimmu16
    0U,	// MVE_VQSHLimmu32
    0U,	// MVE_VQSHLimmu8
    3671552U,	// MVE_VQSHRNbhs16
    3671552U,	// MVE_VQSHRNbhs32
    3671552U,	// MVE_VQSHRNbhu16
    3671552U,	// MVE_VQSHRNbhu32
    3671552U,	// MVE_VQSHRNths16
    3671552U,	// MVE_VQSHRNths32
    3671552U,	// MVE_VQSHRNthu16
    3671552U,	// MVE_VQSHRNthu32
    3671552U,	// MVE_VQSHRUNs16bh
    3671552U,	// MVE_VQSHRUNs16th
    3671552U,	// MVE_VQSHRUNs32bh
    3671552U,	// MVE_VQSHRUNs32th
    0U,	// MVE_VQSUB_qr_s16
    0U,	// MVE_VQSUB_qr_s32
    0U,	// MVE_VQSUB_qr_s8
    0U,	// MVE_VQSUB_qr_u16
    0U,	// MVE_VQSUB_qr_u32
    0U,	// MVE_VQSUB_qr_u8
    0U,	// MVE_VQSUBs16
    0U,	// MVE_VQSUBs32
    0U,	// MVE_VQSUBs8
    0U,	// MVE_VQSUBu16
    0U,	// MVE_VQSUBu32
    0U,	// MVE_VQSUBu8
    16384U,	// MVE_VREV16_8
    16384U,	// MVE_VREV32_16
    16384U,	// MVE_VREV32_8
    16384U,	// MVE_VREV64_16
    16384U,	// MVE_VREV64_32
    16384U,	// MVE_VREV64_8
    0U,	// MVE_VRHADDs16
    0U,	// MVE_VRHADDs32
    0U,	// MVE_VRHADDs8
    0U,	// MVE_VRHADDu16
    0U,	// MVE_VRHADDu32
    0U,	// MVE_VRHADDu8
    16384U,	// MVE_VRINTf16A
    16384U,	// MVE_VRINTf16M
    16384U,	// MVE_VRINTf16N
    16384U,	// MVE_VRINTf16P
    16384U,	// MVE_VRINTf16X
    16384U,	// MVE_VRINTf16Z
    16384U,	// MVE_VRINTf32A
    16384U,	// MVE_VRINTf32M
    16384U,	// MVE_VRINTf32N
    16384U,	// MVE_VRINTf32P
    16384U,	// MVE_VRINTf32X
    16384U,	// MVE_VRINTf32Z
    34078720U,	// MVE_VRMLALDAVHas32
    34078720U,	// MVE_VRMLALDAVHau32
    34078720U,	// MVE_VRMLALDAVHaxs32
    33554432U,	// MVE_VRMLALDAVHs32
    33554432U,	// MVE_VRMLALDAVHu32
    33554432U,	// MVE_VRMLALDAVHxs32
    34078720U,	// MVE_VRMLSLDAVHas32
    34078720U,	// MVE_VRMLSLDAVHaxs32
    33554432U,	// MVE_VRMLSLDAVHs32
    33554432U,	// MVE_VRMLSLDAVHxs32
    0U,	// MVE_VRMULHs16
    0U,	// MVE_VRMULHs32
    0U,	// MVE_VRMULHs8
    0U,	// MVE_VRMULHu16
    0U,	// MVE_VRMULHu32
    0U,	// MVE_VRMULHu8
    0U,	// MVE_VRSHL_by_vecs16
    0U,	// MVE_VRSHL_by_vecs32
    0U,	// MVE_VRSHL_by_vecs8
    0U,	// MVE_VRSHL_by_vecu16
    0U,	// MVE_VRSHL_by_vecu32
    0U,	// MVE_VRSHL_by_vecu8
    17920U,	// MVE_VRSHL_qrs16
    17920U,	// MVE_VRSHL_qrs32
    17920U,	// MVE_VRSHL_qrs8
    17920U,	// MVE_VRSHL_qru16
    17920U,	// MVE_VRSHL_qru32
    17920U,	// MVE_VRSHL_qru8
    3671552U,	// MVE_VRSHRNi16bh
    3671552U,	// MVE_VRSHRNi16th
    3671552U,	// MVE_VRSHRNi32bh
    3671552U,	// MVE_VRSHRNi32th
    0U,	// MVE_VRSHR_imms16
    0U,	// MVE_VRSHR_imms32
    0U,	// MVE_VRSHR_imms8
    0U,	// MVE_VRSHR_immu16
    0U,	// MVE_VRSHR_immu32
    0U,	// MVE_VRSHR_immu8
    3671552U,	// MVE_VSBC
    3671552U,	// MVE_VSBCI
    524672U,	// MVE_VSHLC
    0U,	// MVE_VSHLL_imms16bh
    0U,	// MVE_VSHLL_imms16th
    0U,	// MVE_VSHLL_imms8bh
    0U,	// MVE_VSHLL_imms8th
    0U,	// MVE_VSHLL_immu16bh
    0U,	// MVE_VSHLL_immu16th
    0U,	// MVE_VSHLL_immu8bh
    0U,	// MVE_VSHLL_immu8th
    180224U,	// MVE_VSHLL_lws16bh
    180224U,	// MVE_VSHLL_lws16th
    196608U,	// MVE_VSHLL_lws8bh
    196608U,	// MVE_VSHLL_lws8th
    180224U,	// MVE_VSHLL_lwu16bh
    180224U,	// MVE_VSHLL_lwu16th
    196608U,	// MVE_VSHLL_lwu8bh
    196608U,	// MVE_VSHLL_lwu8th
    0U,	// MVE_VSHL_by_vecs16
    0U,	// MVE_VSHL_by_vecs32
    0U,	// MVE_VSHL_by_vecs8
    0U,	// MVE_VSHL_by_vecu16
    0U,	// MVE_VSHL_by_vecu32
    0U,	// MVE_VSHL_by_vecu8
    0U,	// MVE_VSHL_immi16
    0U,	// MVE_VSHL_immi32
    0U,	// MVE_VSHL_immi8
    17920U,	// MVE_VSHL_qrs16
    17920U,	// MVE_VSHL_qrs32
    17920U,	// MVE_VSHL_qrs8
    17920U,	// MVE_VSHL_qru16
    17920U,	// MVE_VSHL_qru32
    17920U,	// MVE_VSHL_qru8
    3671552U,	// MVE_VSHRNi16bh
    3671552U,	// MVE_VSHRNi16th
    3671552U,	// MVE_VSHRNi32bh
    3671552U,	// MVE_VSHRNi32th
    0U,	// MVE_VSHR_imms16
    0U,	// MVE_VSHR_imms32
    0U,	// MVE_VSHR_imms8
    0U,	// MVE_VSHR_immu16
    0U,	// MVE_VSHR_immu32
    0U,	// MVE_VSHR_immu8
    3671552U,	// MVE_VSLIimm16
    3671552U,	// MVE_VSLIimm32
    3671552U,	// MVE_VSLIimm8
    3671552U,	// MVE_VSRIimm16
    3671552U,	// MVE_VSRIimm32
    3671552U,	// MVE_VSRIimm8
    0U,	// MVE_VST20_16
    0U,	// MVE_VST20_16_wb
    0U,	// MVE_VST20_32
    0U,	// MVE_VST20_32_wb
    0U,	// MVE_VST20_8
    0U,	// MVE_VST20_8_wb
    0U,	// MVE_VST21_16
    0U,	// MVE_VST21_16_wb
    0U,	// MVE_VST21_32
    0U,	// MVE_VST21_32_wb
    0U,	// MVE_VST21_8
    0U,	// MVE_VST21_8_wb
    0U,	// MVE_VST40_16
    0U,	// MVE_VST40_16_wb
    0U,	// MVE_VST40_32
    0U,	// MVE_VST40_32_wb
    0U,	// MVE_VST40_8
    0U,	// MVE_VST40_8_wb
    0U,	// MVE_VST41_16
    0U,	// MVE_VST41_16_wb
    0U,	// MVE_VST41_32
    0U,	// MVE_VST41_32_wb
    0U,	// MVE_VST41_8
    0U,	// MVE_VST41_8_wb
    0U,	// MVE_VST42_16
    0U,	// MVE_VST42_16_wb
    0U,	// MVE_VST42_32
    0U,	// MVE_VST42_32_wb
    0U,	// MVE_VST42_8
    0U,	// MVE_VST42_8_wb
    0U,	// MVE_VST43_16
    0U,	// MVE_VST43_16_wb
    0U,	// MVE_VST43_32
    0U,	// MVE_VST43_32_wb
    0U,	// MVE_VST43_8
    0U,	// MVE_VST43_8_wb
    4096U,	// MVE_VSTRB16
    150144U,	// MVE_VSTRB16_post
    4224U,	// MVE_VSTRB16_pre
    4352U,	// MVE_VSTRB16_rq
    4096U,	// MVE_VSTRB32
    150144U,	// MVE_VSTRB32_post
    4224U,	// MVE_VSTRB32_pre
    4352U,	// MVE_VSTRB32_rq
    4352U,	// MVE_VSTRB8_rq
    4096U,	// MVE_VSTRBU8
    150144U,	// MVE_VSTRBU8_post
    4480U,	// MVE_VSTRBU8_pre
    4096U,	// MVE_VSTRD64_qi
    4224U,	// MVE_VSTRD64_qi_pre
    4608U,	// MVE_VSTRD64_rq
    4352U,	// MVE_VSTRD64_rq_u
    4736U,	// MVE_VSTRH16_rq
    4352U,	// MVE_VSTRH16_rq_u
    4096U,	// MVE_VSTRH32
    150144U,	// MVE_VSTRH32_post
    4224U,	// MVE_VSTRH32_pre
    4736U,	// MVE_VSTRH32_rq
    4352U,	// MVE_VSTRH32_rq_u
    4096U,	// MVE_VSTRHU16
    150144U,	// MVE_VSTRHU16_post
    4480U,	// MVE_VSTRHU16_pre
    4096U,	// MVE_VSTRW32_qi
    4224U,	// MVE_VSTRW32_qi_pre
    4864U,	// MVE_VSTRW32_rq
    4352U,	// MVE_VSTRW32_rq_u
    4096U,	// MVE_VSTRWU32
    150144U,	// MVE_VSTRWU32_post
    4480U,	// MVE_VSTRWU32_pre
    0U,	// MVE_VSUB_qr_f16
    0U,	// MVE_VSUB_qr_f32
    0U,	// MVE_VSUB_qr_i16
    0U,	// MVE_VSUB_qr_i32
    0U,	// MVE_VSUB_qr_i8
    0U,	// MVE_VSUBf16
    0U,	// MVE_VSUBf32
    0U,	// MVE_VSUBi16
    0U,	// MVE_VSUBi32
    0U,	// MVE_VSUBi8
    21504U,	// MVE_WLSTP_16
    21504U,	// MVE_WLSTP_32
    21504U,	// MVE_WLSTP_64
    21504U,	// MVE_WLSTP_8
    1792U,	// MVNi
    16384U,	// MVNr
    1920U,	// MVNsi
    1152U,	// MVNsr
    17920U,	// NEON_VMAXNMNDf
    17920U,	// NEON_VMAXNMNDh
    17920U,	// NEON_VMAXNMNQf
    17920U,	// NEON_VMAXNMNQh
    17920U,	// NEON_VMINNMNDf
    17920U,	// NEON_VMINNMNDh
    17920U,	// NEON_VMINNMNQf
    17920U,	// NEON_VMINNMNQh
    1048576U,	// ORRri
    0U,	// ORRrr
    1572864U,	// ORRrsi
    0U,	// ORRrsr
    201326592U,	// PKHBT
    234881024U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    0U,	// QADD
    0U,	// QADD16
    0U,	// QADD8
    0U,	// QASX
    0U,	// QDADD
    0U,	// QDSUB
    0U,	// QSAX
    0U,	// QSUB
    0U,	// QSUB16
    0U,	// QSUB8
    16384U,	// RBIT
    16384U,	// REV
    16384U,	// REV16
    16384U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    1048576U,	// RSBri
    0U,	// RSBrr
    1572864U,	// RSBrsi
    0U,	// RSBrsr
    1048576U,	// RSCri
    0U,	// RSCrr
    1572864U,	// RSCrsi
    0U,	// RSCrsr
    0U,	// SADD16
    0U,	// SADD8
    0U,	// SASX
    0U,	// SB
    1048576U,	// SBCri
    0U,	// SBCrr
    1572864U,	// SBCrsi
    0U,	// SBCrsr
    33554432U,	// SBFX
    0U,	// SDIV
    0U,	// SEL
    0U,	// SETEND
    0U,	// SETPAN
    16768U,	// SHA1C
    2U,	// SHA1H
    16768U,	// SHA1M
    16768U,	// SHA1P
    16768U,	// SHA1SU0
    2U,	// SHA1SU1
    16768U,	// SHA256H
    16768U,	// SHA256H2
    2U,	// SHA256SU0
    16768U,	// SHA256SU1
    0U,	// SHADD16
    0U,	// SHADD8
    0U,	// SHASX
    0U,	// SHSAX
    0U,	// SHSUB16
    0U,	// SHSUB8
    2U,	// SMC
    33554432U,	// SMLABB
    33554432U,	// SMLABT
    33554432U,	// SMLAD
    33554432U,	// SMLADX
    0U,	// SMLAL
    33554432U,	// SMLALBB
    33554432U,	// SMLALBT
    33554432U,	// SMLALD
    33554432U,	// SMLALDX
    33554432U,	// SMLALTB
    33554432U,	// SMLALTT
    33554432U,	// SMLATB
    33554432U,	// SMLATT
    33554432U,	// SMLAWB
    33554432U,	// SMLAWT
    33554432U,	// SMLSD
    33554432U,	// SMLSDX
    33554432U,	// SMLSLD
    33554432U,	// SMLSLDX
    33554432U,	// SMMLA
    33554432U,	// SMMLAR
    33554432U,	// SMMLS
    33554432U,	// SMMLSR
    0U,	// SMMUL
    0U,	// SMMULR
    0U,	// SMUAD
    0U,	// SMUADX
    0U,	// SMULBB
    0U,	// SMULBT
    33554432U,	// SMULL
    0U,	// SMULTB
    0U,	// SMULTT
    0U,	// SMULWB
    0U,	// SMULWT
    0U,	// SMUSD
    0U,	// SMUSDX
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    218240U,	// SSAT
    21632U,	// SSAT16
    0U,	// SSAX
    0U,	// SSUB16
    0U,	// SSUB8
    0U,	// STC2L_OFFSET
    2304U,	// STC2L_OPTION
    2432U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    2304U,	// STC2_OPTION
    2432U,	// STC2_POST
    0U,	// STC2_PRE
    2580U,	// STCL_OFFSET
    4721300U,	// STCL_OPTION
    5245588U,	// STCL_POST
    2836U,	// STCL_PRE
    2580U,	// STC_OFFSET
    4721300U,	// STC_OPTION
    5245588U,	// STC_POST
    2836U,	// STC_PRE
    128U,	// STL
    128U,	// STLB
    10485760U,	// STLEX
    10485760U,	// STLEXB
    5376U,	// STLEXD
    10485760U,	// STLEXH
    128U,	// STLH
    18560U,	// STMDA
    530U,	// STMDA_UPD
    18560U,	// STMDB
    530U,	// STMDB_UPD
    18560U,	// STMIA
    530U,	// STMIA_UPD
    18560U,	// STMIB
    530U,	// STMIB_UPD
    5769856U,	// STRBT_POST_IMM
    5769856U,	// STRBT_POST_REG
    5769856U,	// STRB_POST_IMM
    5769856U,	// STRB_POST_REG
    2944U,	// STRB_PRE_IMM
    3072U,	// STRB_PRE_REG
    3200U,	// STRBi12
    3328U,	// STRBrs
    6291456U,	// STRD
    40371712U,	// STRD_POST
    7341568U,	// STRD_PRE
    10485760U,	// STREX
    10485760U,	// STREXB
    5376U,	// STREXD
    10485760U,	// STREXH
    3456U,	// STRH
    7867008U,	// STRHTi
    8391296U,	// STRHTr
    8915584U,	// STRH_POST
    3584U,	// STRH_PRE
    5769856U,	// STRT_POST_IMM
    5769856U,	// STRT_POST_REG
    5769856U,	// STR_POST_IMM
    5769856U,	// STR_POST_REG
    2944U,	// STR_PRE_IMM
    3072U,	// STR_PRE_REG
    3200U,	// STRi12
    3328U,	// STRrs
    1048576U,	// SUBri
    0U,	// SUBrr
    1572864U,	// SUBrsi
    0U,	// SUBrsr
    2U,	// SVC
    10485760U,	// SWP
    10485760U,	// SWPB
    268435456U,	// SXTAB
    268435456U,	// SXTAB16
    268435456U,	// SXTAH
    229376U,	// SXTB
    229376U,	// SXTB16
    229376U,	// SXTH
    1792U,	// TEQri
    16384U,	// TEQrr
    1920U,	// TEQrsi
    1152U,	// TEQrsr
    0U,	// TRAP
    0U,	// TRAPNaCl
    0U,	// TSB
    1792U,	// TSTri
    16384U,	// TSTrr
    1920U,	// TSTrsi
    1152U,	// TSTrsr
    0U,	// UADD16
    0U,	// UADD8
    0U,	// UASX
    33554432U,	// UBFX
    0U,	// UDF
    0U,	// UDIV
    0U,	// UHADD16
    0U,	// UHADD8
    0U,	// UHASX
    0U,	// UHSAX
    0U,	// UHSUB16
    0U,	// UHSUB8
    33554432U,	// UMAAL
    0U,	// UMLAL
    33554432U,	// UMULL
    0U,	// UQADD16
    0U,	// UQADD8
    0U,	// UQASX
    0U,	// UQSAX
    0U,	// UQSUB16
    0U,	// UQSUB8
    0U,	// USAD8
    33554432U,	// USADA8
    301989888U,	// USAT
    0U,	// USAT16
    0U,	// USAX
    0U,	// USUB16
    0U,	// USUB8
    268435456U,	// UXTAB
    268435456U,	// UXTAB16
    268435456U,	// UXTAH
    229376U,	// UXTB
    229376U,	// UXTB16
    229376U,	// UXTH
    3671552U,	// VABALsv2i64
    3671552U,	// VABALsv4i32
    3671552U,	// VABALsv8i16
    3671552U,	// VABALuv2i64
    3671552U,	// VABALuv4i32
    3671552U,	// VABALuv8i16
    3671552U,	// VABAsv16i8
    3671552U,	// VABAsv2i32
    3671552U,	// VABAsv4i16
    3671552U,	// VABAsv4i32
    3671552U,	// VABAsv8i16
    3671552U,	// VABAsv8i8
    3671552U,	// VABAuv16i8
    3671552U,	// VABAuv2i32
    3671552U,	// VABAuv4i16
    3671552U,	// VABAuv4i32
    3671552U,	// VABAuv8i16
    3671552U,	// VABAuv8i8
    0U,	// VABDLsv2i64
    0U,	// VABDLsv4i32
    0U,	// VABDLsv8i16
    0U,	// VABDLuv2i64
    0U,	// VABDLuv4i32
    0U,	// VABDLuv8i16
    0U,	// VABDfd
    0U,	// VABDfq
    0U,	// VABDhd
    0U,	// VABDhq
    0U,	// VABDsv16i8
    0U,	// VABDsv2i32
    0U,	// VABDsv4i16
    0U,	// VABDsv4i32
    0U,	// VABDsv8i16
    0U,	// VABDsv8i8
    0U,	// VABDuv16i8
    0U,	// VABDuv2i32
    0U,	// VABDuv4i16
    0U,	// VABDuv4i32
    0U,	// VABDuv8i16
    0U,	// VABDuv8i8
    526U,	// VABSD
    16384U,	// VABSH
    16384U,	// VABSS
    16384U,	// VABSfd
    16384U,	// VABSfq
    16384U,	// VABShd
    16384U,	// VABShq
    16384U,	// VABSv16i8
    16384U,	// VABSv2i32
    16384U,	// VABSv4i16
    16384U,	// VABSv4i32
    16384U,	// VABSv8i16
    16384U,	// VABSv8i8
    0U,	// VACGEfd
    0U,	// VACGEfq
    0U,	// VACGEhd
    0U,	// VACGEhq
    0U,	// VACGTfd
    0U,	// VACGTfq
    0U,	// VACGThd
    0U,	// VACGThq
    2212622U,	// VADDD
    0U,	// VADDH
    17920U,	// VADDHNv2i32
    0U,	// VADDHNv4i16
    0U,	// VADDHNv8i8
    0U,	// VADDLsv2i64
    0U,	// VADDLsv4i32
    0U,	// VADDLsv8i16
    0U,	// VADDLuv2i64
    0U,	// VADDLuv4i32
    0U,	// VADDLuv8i16
    0U,	// VADDS
    0U,	// VADDWsv2i64
    0U,	// VADDWsv4i32
    0U,	// VADDWsv8i16
    0U,	// VADDWuv2i64
    0U,	// VADDWuv4i32
    0U,	// VADDWuv8i16
    0U,	// VADDfd
    0U,	// VADDfq
    0U,	// VADDhd
    0U,	// VADDhq
    0U,	// VADDv16i8
    17920U,	// VADDv1i64
    0U,	// VADDv2i32
    17920U,	// VADDv2i64
    0U,	// VADDv4i16
    0U,	// VADDv4i32
    0U,	// VADDv8i16
    0U,	// VADDv8i8
    0U,	// VANDd
    0U,	// VANDq
    16768U,	// VBF16MALBQ
    2163072U,	// VBF16MALBQI
    16768U,	// VBF16MALTQ
    2163072U,	// VBF16MALTQI
    0U,	// VBICd
    4992U,	// VBICiv2i32
    4992U,	// VBICiv4i16
    4992U,	// VBICiv4i32
    4992U,	// VBICiv8i16
    0U,	// VBICq
    3671552U,	// VBIFd
    3671552U,	// VBIFq
    3671552U,	// VBITd
    3671552U,	// VBITq
    3671552U,	// VBSLd
    3671552U,	// VBSLq
    0U,	// VBSPd
    0U,	// VBSPq
    11011584U,	// VCADDv2f32
    11011584U,	// VCADDv4f16
    11011584U,	// VCADDv4f32
    11011584U,	// VCADDv8f16
    0U,	// VCEQfd
    0U,	// VCEQfq
    0U,	// VCEQhd
    0U,	// VCEQhq
    0U,	// VCEQv16i8
    0U,	// VCEQv2i32
    0U,	// VCEQv4i16
    0U,	// VCEQv4i32
    0U,	// VCEQv8i16
    0U,	// VCEQv8i8
    245760U,	// VCEQzv16i8
    245760U,	// VCEQzv2f32
    245760U,	// VCEQzv2i32
    245760U,	// VCEQzv4f16
    245760U,	// VCEQzv4f32
    245760U,	// VCEQzv4i16
    245760U,	// VCEQzv4i32
    245760U,	// VCEQzv8f16
    245760U,	// VCEQzv8i16
    245760U,	// VCEQzv8i8
    0U,	// VCGEfd
    0U,	// VCGEfq
    0U,	// VCGEhd
    0U,	// VCGEhq
    0U,	// VCGEsv16i8
    0U,	// VCGEsv2i32
    0U,	// VCGEsv4i16
    0U,	// VCGEsv4i32
    0U,	// VCGEsv8i16
    0U,	// VCGEsv8i8
    0U,	// VCGEuv16i8
    0U,	// VCGEuv2i32
    0U,	// VCGEuv4i16
    0U,	// VCGEuv4i32
    0U,	// VCGEuv8i16
    0U,	// VCGEuv8i8
    245760U,	// VCGEzv16i8
    245760U,	// VCGEzv2f32
    245760U,	// VCGEzv2i32
    245760U,	// VCGEzv4f16
    245760U,	// VCGEzv4f32
    245760U,	// VCGEzv4i16
    245760U,	// VCGEzv4i32
    245760U,	// VCGEzv8f16
    245760U,	// VCGEzv8i16
    245760U,	// VCGEzv8i8
    0U,	// VCGTfd
    0U,	// VCGTfq
    0U,	// VCGThd
    0U,	// VCGThq
    0U,	// VCGTsv16i8
    0U,	// VCGTsv2i32
    0U,	// VCGTsv4i16
    0U,	// VCGTsv4i32
    0U,	// VCGTsv8i16
    0U,	// VCGTsv8i8
    0U,	// VCGTuv16i8
    0U,	// VCGTuv2i32
    0U,	// VCGTuv4i16
    0U,	// VCGTuv4i32
    0U,	// VCGTuv8i16
    0U,	// VCGTuv8i8
    245760U,	// VCGTzv16i8
    245760U,	// VCGTzv2f32
    245760U,	// VCGTzv2i32
    245760U,	// VCGTzv4f16
    245760U,	// VCGTzv4f32
    245760U,	// VCGTzv4i16
    245760U,	// VCGTzv4i32
    245760U,	// VCGTzv8f16
    245760U,	// VCGTzv8i16
    245760U,	// VCGTzv8i8
    245760U,	// VCLEzv16i8
    245760U,	// VCLEzv2f32
    245760U,	// VCLEzv2i32
    245760U,	// VCLEzv4f16
    245760U,	// VCLEzv4f32
    245760U,	// VCLEzv4i16
    245760U,	// VCLEzv4i32
    245760U,	// VCLEzv8f16
    245760U,	// VCLEzv8i16
    245760U,	// VCLEzv8i8
    16384U,	// VCLSv16i8
    16384U,	// VCLSv2i32
    16384U,	// VCLSv4i16
    16384U,	// VCLSv4i32
    16384U,	// VCLSv8i16
    16384U,	// VCLSv8i8
    245760U,	// VCLTzv16i8
    245760U,	// VCLTzv2f32
    245760U,	// VCLTzv2i32
    245760U,	// VCLTzv4f16
    245760U,	// VCLTzv4f32
    245760U,	// VCLTzv4i16
    245760U,	// VCLTzv4i32
    245760U,	// VCLTzv8f16
    245760U,	// VCLTzv8i16
    245760U,	// VCLTzv8i8
    16384U,	// VCLZv16i8
    16384U,	// VCLZv2i32
    16384U,	// VCLZv4i16
    16384U,	// VCLZv4i32
    16384U,	// VCLZv8i16
    16384U,	// VCLZv8i8
    11534720U,	// VCMLAv2f32
    338755968U,	// VCMLAv2f32_indexed
    11534720U,	// VCMLAv4f16
    338755968U,	// VCMLAv4f16_indexed
    11534720U,	// VCMLAv4f32
    338755968U,	// VCMLAv4f32_indexed
    11534720U,	// VCMLAv8f16
    338755968U,	// VCMLAv8f16_indexed
    526U,	// VCMPD
    526U,	// VCMPED
    16384U,	// VCMPEH
    16384U,	// VCMPES
    0U,	// VCMPEZD
    34U,	// VCMPEZH
    34U,	// VCMPEZS
    16384U,	// VCMPH
    16384U,	// VCMPS
    0U,	// VCMPZD
    34U,	// VCMPZH
    34U,	// VCMPZS
    16384U,	// VCNTd
    16384U,	// VCNTq
    2U,	// VCVTANSDf
    2U,	// VCVTANSDh
    2U,	// VCVTANSQf
    2U,	// VCVTANSQh
    2U,	// VCVTANUDf
    2U,	// VCVTANUDh
    2U,	// VCVTANUQf
    2U,	// VCVTANUQh
    2U,	// VCVTASD
    2U,	// VCVTASH
    2U,	// VCVTASS
    2U,	// VCVTAUD
    2U,	// VCVTAUH
    2U,	// VCVTAUS
    0U,	// VCVTBDH
    0U,	// VCVTBHD
    0U,	// VCVTBHS
    2U,	// VCVTBSH
    0U,	// VCVTDS
    2U,	// VCVTMNSDf
    2U,	// VCVTMNSDh
    2U,	// VCVTMNSQf
    2U,	// VCVTMNSQh
    2U,	// VCVTMNUDf
    2U,	// VCVTMNUDh
    2U,	// VCVTMNUQf
    2U,	// VCVTMNUQh
    2U,	// VCVTMSD
    2U,	// VCVTMSH
    2U,	// VCVTMSS
    2U,	// VCVTMUD
    2U,	// VCVTMUH
    2U,	// VCVTMUS
    2U,	// VCVTNNSDf
    2U,	// VCVTNNSDh
    2U,	// VCVTNNSQf
    2U,	// VCVTNNSQh
    2U,	// VCVTNNUDf
    2U,	// VCVTNNUDh
    2U,	// VCVTNNUQf
    2U,	// VCVTNNUQh
    2U,	// VCVTNSD
    2U,	// VCVTNSH
    2U,	// VCVTNSS
    2U,	// VCVTNUD
    2U,	// VCVTNUH
    2U,	// VCVTNUS
    2U,	// VCVTPNSDf
    2U,	// VCVTPNSDh
    2U,	// VCVTPNSQf
    2U,	// VCVTPNSQh
    2U,	// VCVTPNUDf
    2U,	// VCVTPNUDh
    2U,	// VCVTPNUQf
    2U,	// VCVTPNUQh
    2U,	// VCVTPSD
    2U,	// VCVTPSH
    2U,	// VCVTPSS
    2U,	// VCVTPUD
    2U,	// VCVTPUH
    2U,	// VCVTPUS
    0U,	// VCVTSD
    0U,	// VCVTTDH
    0U,	// VCVTTHD
    0U,	// VCVTTHS
    2U,	// VCVTTSH
    2U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    534U,	// VCVTf2xsd
    534U,	// VCVTf2xsq
    534U,	// VCVTf2xud
    534U,	// VCVTf2xuq
    0U,	// VCVTh2f
    0U,	// VCVTh2sd
    0U,	// VCVTh2sq
    0U,	// VCVTh2ud
    0U,	// VCVTh2uq
    534U,	// VCVTh2xsd
    534U,	// VCVTh2xsq
    534U,	// VCVTh2xud
    534U,	// VCVTh2xuq
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTs2hd
    0U,	// VCVTs2hq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    0U,	// VCVTu2hd
    0U,	// VCVTu2hq
    534U,	// VCVTxs2fd
    534U,	// VCVTxs2fq
    534U,	// VCVTxs2hd
    534U,	// VCVTxs2hq
    534U,	// VCVTxu2fd
    534U,	// VCVTxu2fq
    534U,	// VCVTxu2hd
    534U,	// VCVTxu2hq
    2212622U,	// VDIVD
    0U,	// VDIVH
    0U,	// VDIVS
    16384U,	// VDUP16d
    16384U,	// VDUP16q
    16384U,	// VDUP32d
    16384U,	// VDUP32q
    16384U,	// VDUP8d
    16384U,	// VDUP8q
    163840U,	// VDUPLN16d
    163840U,	// VDUPLN16q
    163840U,	// VDUPLN32d
    163840U,	// VDUPLN32q
    163840U,	// VDUPLN8d
    163840U,	// VDUPLN8q
    0U,	// VEORd
    0U,	// VEORq
    33554432U,	// VEXTd16
    33554432U,	// VEXTd32
    33554432U,	// VEXTd8
    33554432U,	// VEXTq16
    33554432U,	// VEXTq32
    33554432U,	// VEXTq64
    33554432U,	// VEXTq8
    49942U,	// VFMAD
    3671552U,	// VFMAH
    17920U,	// VFMALD
    263680U,	// VFMALDI
    17920U,	// VFMALQ
    263680U,	// VFMALQI
    3671552U,	// VFMAS
    3671552U,	// VFMAfd
    3671552U,	// VFMAfq
    3671552U,	// VFMAhd
    3671552U,	// VFMAhq
    49942U,	// VFMSD
    3671552U,	// VFMSH
    17920U,	// VFMSLD
    263680U,	// VFMSLDI
    17920U,	// VFMSLQ
    263680U,	// VFMSLQI
    3671552U,	// VFMSS
    3671552U,	// VFMSfd
    3671552U,	// VFMSfq
    3671552U,	// VFMShd
    3671552U,	// VFMShq
    49942U,	// VFNMAD
    3671552U,	// VFNMAH
    3671552U,	// VFNMAS
    49942U,	// VFNMSD
    3671552U,	// VFNMSH
    3671552U,	// VFNMSS
    17920U,	// VFP_VMAXNMD
    17920U,	// VFP_VMAXNMH
    17920U,	// VFP_VMAXNMS
    17920U,	// VFP_VMINNMD
    17920U,	// VFP_VMINNMH
    17920U,	// VFP_VMINNMS
    163840U,	// VGETLNi32
    163840U,	// VGETLNs16
    163840U,	// VGETLNs8
    163840U,	// VGETLNu16
    163840U,	// VGETLNu8
    0U,	// VHADDsv16i8
    0U,	// VHADDsv2i32
    0U,	// VHADDsv4i16
    0U,	// VHADDsv4i32
    0U,	// VHADDsv8i16
    0U,	// VHADDsv8i8
    0U,	// VHADDuv16i8
    0U,	// VHADDuv2i32
    0U,	// VHADDuv4i16
    0U,	// VHADDuv4i32
    0U,	// VHADDuv8i16
    0U,	// VHADDuv8i8
    0U,	// VHSUBsv16i8
    0U,	// VHSUBsv2i32
    0U,	// VHSUBsv4i16
    0U,	// VHSUBsv4i32
    0U,	// VHSUBsv8i16
    0U,	// VHSUBsv8i8
    0U,	// VHSUBuv16i8
    0U,	// VHSUBuv2i32
    0U,	// VHSUBuv4i16
    0U,	// VHSUBuv4i32
    0U,	// VHSUBuv8i16
    0U,	// VHSUBuv8i8
    2U,	// VINSH
    0U,	// VJCVT
    518U,	// VLD1DUPd16
    676U,	// VLD1DUPd16wb_fixed
    2179876U,	// VLD1DUPd16wb_register
    518U,	// VLD1DUPd32
    676U,	// VLD1DUPd32wb_fixed
    2179876U,	// VLD1DUPd32wb_register
    518U,	// VLD1DUPd8
    676U,	// VLD1DUPd8wb_fixed
    2179876U,	// VLD1DUPd8wb_register
    518U,	// VLD1DUPq16
    676U,	// VLD1DUPq16wb_fixed
    2179876U,	// VLD1DUPq16wb_register
    518U,	// VLD1DUPq32
    676U,	// VLD1DUPq32wb_fixed
    2179876U,	// VLD1DUPq32wb_register
    518U,	// VLD1DUPq8
    676U,	// VLD1DUPq8wb_fixed
    2179876U,	// VLD1DUPq8wb_register
    12342694U,	// VLD1LNd16
    12867110U,	// VLD1LNd16_UPD
    12342694U,	// VLD1LNd32
    12867110U,	// VLD1LNd32_UPD
    12342694U,	// VLD1LNd8
    12867110U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    518U,	// VLD1d16
    518U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    0U,	// VLD1d16QPseudoWB_fixed
    0U,	// VLD1d16QPseudoWB_register
    676U,	// VLD1d16Qwb_fixed
    2179876U,	// VLD1d16Qwb_register
    518U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    0U,	// VLD1d16TPseudoWB_fixed
    0U,	// VLD1d16TPseudoWB_register
    676U,	// VLD1d16Twb_fixed
    2179876U,	// VLD1d16Twb_register
    676U,	// VLD1d16wb_fixed
    2179876U,	// VLD1d16wb_register
    518U,	// VLD1d32
    518U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    0U,	// VLD1d32QPseudoWB_fixed
    0U,	// VLD1d32QPseudoWB_register
    676U,	// VLD1d32Qwb_fixed
    2179876U,	// VLD1d32Qwb_register
    518U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    0U,	// VLD1d32TPseudoWB_fixed
    0U,	// VLD1d32TPseudoWB_register
    676U,	// VLD1d32Twb_fixed
    2179876U,	// VLD1d32Twb_register
    676U,	// VLD1d32wb_fixed
    2179876U,	// VLD1d32wb_register
    518U,	// VLD1d64
    518U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    676U,	// VLD1d64Qwb_fixed
    2179876U,	// VLD1d64Qwb_register
    518U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    676U,	// VLD1d64Twb_fixed
    2179876U,	// VLD1d64Twb_register
    676U,	// VLD1d64wb_fixed
    2179876U,	// VLD1d64wb_register
    518U,	// VLD1d8
    518U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    0U,	// VLD1d8QPseudoWB_fixed
    0U,	// VLD1d8QPseudoWB_register
    676U,	// VLD1d8Qwb_fixed
    2179876U,	// VLD1d8Qwb_register
    518U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    0U,	// VLD1d8TPseudoWB_fixed
    0U,	// VLD1d8TPseudoWB_register
    676U,	// VLD1d8Twb_fixed
    2179876U,	// VLD1d8Twb_register
    676U,	// VLD1d8wb_fixed
    2179876U,	// VLD1d8wb_register
    518U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighQPseudo_UPD
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16HighTPseudo_UPD
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    676U,	// VLD1q16wb_fixed
    2179876U,	// VLD1q16wb_register
    518U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighQPseudo_UPD
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32HighTPseudo_UPD
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    676U,	// VLD1q32wb_fixed
    2179876U,	// VLD1q32wb_register
    518U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighQPseudo_UPD
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64HighTPseudo_UPD
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    676U,	// VLD1q64wb_fixed
    2179876U,	// VLD1q64wb_register
    518U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighQPseudo_UPD
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8HighTPseudo_UPD
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    676U,	// VLD1q8wb_fixed
    2179876U,	// VLD1q8wb_register
    518U,	// VLD2DUPd16
    676U,	// VLD2DUPd16wb_fixed
    2179876U,	// VLD2DUPd16wb_register
    518U,	// VLD2DUPd16x2
    676U,	// VLD2DUPd16x2wb_fixed
    2179876U,	// VLD2DUPd16x2wb_register
    518U,	// VLD2DUPd32
    676U,	// VLD2DUPd32wb_fixed
    2179876U,	// VLD2DUPd32wb_register
    518U,	// VLD2DUPd32x2
    676U,	// VLD2DUPd32x2wb_fixed
    2179876U,	// VLD2DUPd32x2wb_register
    518U,	// VLD2DUPd8
    676U,	// VLD2DUPd8wb_fixed
    2179876U,	// VLD2DUPd8wb_register
    518U,	// VLD2DUPd8x2
    676U,	// VLD2DUPd8x2wb_fixed
    2179876U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq16OddPseudoWB_fixed
    0U,	// VLD2DUPq16OddPseudoWB_register
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq32OddPseudoWB_fixed
    0U,	// VLD2DUPq32OddPseudoWB_register
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    0U,	// VLD2DUPq8OddPseudoWB_fixed
    0U,	// VLD2DUPq8OddPseudoWB_register
    13407782U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    13948582U,	// VLD2LNd16_UPD
    13407782U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    13948582U,	// VLD2LNd32_UPD
    13407782U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    13948582U,	// VLD2LNd8_UPD
    13407782U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    13948582U,	// VLD2LNq16_UPD
    13407782U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    13948582U,	// VLD2LNq32_UPD
    518U,	// VLD2b16
    676U,	// VLD2b16wb_fixed
    2179876U,	// VLD2b16wb_register
    518U,	// VLD2b32
    676U,	// VLD2b32wb_fixed
    2179876U,	// VLD2b32wb_register
    518U,	// VLD2b8
    676U,	// VLD2b8wb_fixed
    2179876U,	// VLD2b8wb_register
    518U,	// VLD2d16
    676U,	// VLD2d16wb_fixed
    2179876U,	// VLD2d16wb_register
    518U,	// VLD2d32
    676U,	// VLD2d32wb_fixed
    2179876U,	// VLD2d32wb_register
    518U,	// VLD2d8
    676U,	// VLD2d8wb_fixed
    2179876U,	// VLD2d8wb_register
    518U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    676U,	// VLD2q16wb_fixed
    2179876U,	// VLD2q16wb_register
    518U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    676U,	// VLD2q32wb_fixed
    2179876U,	// VLD2q32wb_register
    518U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    676U,	// VLD2q8wb_fixed
    2179876U,	// VLD2q8wb_register
    333608U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    14505768U,	// VLD3DUPd16_UPD
    333608U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    14505768U,	// VLD3DUPd32_UPD
    333608U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    14505768U,	// VLD3DUPd8_UPD
    333608U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    0U,	// VLD3DUPq16OddPseudo_UPD
    14505768U,	// VLD3DUPq16_UPD
    333608U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    0U,	// VLD3DUPq32OddPseudo_UPD
    14505768U,	// VLD3DUPq32_UPD
    333608U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    0U,	// VLD3DUPq8OddPseudo_UPD
    14505768U,	// VLD3DUPq8_UPD
    14997158U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    15488934U,	// VLD3LNd16_UPD
    14997158U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    15488934U,	// VLD3LNd32_UPD
    14997158U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    15488934U,	// VLD3LNd8_UPD
    14997158U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    15488934U,	// VLD3LNq16_UPD
    14997158U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    15488934U,	// VLD3LNq32_UPD
    369098752U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    369098752U,	// VLD3d16_UPD
    369098752U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    369098752U,	// VLD3d32_UPD
    369098752U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    369098752U,	// VLD3d8_UPD
    369098752U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    369098752U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    369098752U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    369098752U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    369098752U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    369098752U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    2447400U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    366632U,	// VLD4DUPd16_UPD
    2447400U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    366632U,	// VLD4DUPd32_UPD
    2447400U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    366632U,	// VLD4DUPd8_UPD
    2447400U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    0U,	// VLD4DUPq16OddPseudo_UPD
    366632U,	// VLD4DUPq16_UPD
    2447400U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    0U,	// VLD4DUPq32OddPseudo_UPD
    366632U,	// VLD4DUPq32_UPD
    2447400U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    0U,	// VLD4DUPq8OddPseudo_UPD
    366632U,	// VLD4DUPq8_UPD
    406624166U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    6310U,	// VLD4LNd16_UPD
    406624166U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    6310U,	// VLD4LNd32_UPD
    406624166U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    6310U,	// VLD4LNd8_UPD
    406624166U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    6310U,	// VLD4LNq16_UPD
    406624166U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    6310U,	// VLD4LNq32_UPD
    33554432U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    33554432U,	// VLD4d16_UPD
    33554432U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    33554432U,	// VLD4d32_UPD
    33554432U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    33554432U,	// VLD4d8_UPD
    33554432U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    33554432U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    33554432U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    33554432U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    33554432U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    33554432U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    530U,	// VLDMDDB_UPD
    18560U,	// VLDMDIA
    530U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    530U,	// VLDMSDB_UPD
    18560U,	// VLDMSIA
    530U,	// VLDMSIA_UPD
    6400U,	// VLDRD
    6528U,	// VLDRH
    6400U,	// VLDRS
    0U,	// VLDR_FPCXTNS_off
    42U,	// VLDR_FPCXTNS_post
    0U,	// VLDR_FPCXTNS_pre
    0U,	// VLDR_FPCXTS_off
    42U,	// VLDR_FPCXTS_post
    0U,	// VLDR_FPCXTS_pre
    0U,	// VLDR_FPSCR_NZCVQC_off
    42U,	// VLDR_FPSCR_NZCVQC_post
    0U,	// VLDR_FPSCR_NZCVQC_pre
    0U,	// VLDR_FPSCR_off
    42U,	// VLDR_FPSCR_post
    0U,	// VLDR_FPSCR_pre
    0U,	// VLDR_P0_off
    44U,	// VLDR_P0_post
    0U,	// VLDR_P0_pre
    0U,	// VLDR_VPR_off
    42U,	// VLDR_VPR_post
    0U,	// VLDR_VPR_pre
    2U,	// VLLDM
    2U,	// VLSTM
    0U,	// VMAXfd
    0U,	// VMAXfq
    0U,	// VMAXhd
    0U,	// VMAXhq
    0U,	// VMAXsv16i8
    0U,	// VMAXsv2i32
    0U,	// VMAXsv4i16
    0U,	// VMAXsv4i32
    0U,	// VMAXsv8i16
    0U,	// VMAXsv8i8
    0U,	// VMAXuv16i8
    0U,	// VMAXuv2i32
    0U,	// VMAXuv4i16
    0U,	// VMAXuv4i32
    0U,	// VMAXuv8i16
    0U,	// VMAXuv8i8
    0U,	// VMINfd
    0U,	// VMINfq
    0U,	// VMINhd
    0U,	// VMINhq
    0U,	// VMINsv16i8
    0U,	// VMINsv2i32
    0U,	// VMINsv4i16
    0U,	// VMINsv4i32
    0U,	// VMINsv8i16
    0U,	// VMINsv8i8
    0U,	// VMINuv16i8
    0U,	// VMINuv2i32
    0U,	// VMINuv4i16
    0U,	// VMINuv4i32
    0U,	// VMINuv8i16
    0U,	// VMINuv8i8
    49942U,	// VMLAD
    3671552U,	// VMLAH
    439879168U,	// VMLALslsv2i32
    439879168U,	// VMLALslsv4i16
    439879168U,	// VMLALsluv2i32
    439879168U,	// VMLALsluv4i16
    3671552U,	// VMLALsv2i64
    3671552U,	// VMLALsv4i32
    3671552U,	// VMLALsv8i16
    3671552U,	// VMLALuv2i64
    3671552U,	// VMLALuv4i32
    3671552U,	// VMLALuv8i16
    3671552U,	// VMLAS
    3671552U,	// VMLAfd
    3671552U,	// VMLAfq
    3671552U,	// VMLAhd
    3671552U,	// VMLAhq
    439879168U,	// VMLAslfd
    439879168U,	// VMLAslfq
    439879168U,	// VMLAslhd
    439879168U,	// VMLAslhq
    439879168U,	// VMLAslv2i32
    439879168U,	// VMLAslv4i16
    439879168U,	// VMLAslv4i32
    439879168U,	// VMLAslv8i16
    3671552U,	// VMLAv16i8
    3671552U,	// VMLAv2i32
    3671552U,	// VMLAv4i16
    3671552U,	// VMLAv4i32
    3671552U,	// VMLAv8i16
    3671552U,	// VMLAv8i8
    49942U,	// VMLSD
    3671552U,	// VMLSH
    439879168U,	// VMLSLslsv2i32
    439879168U,	// VMLSLslsv4i16
    439879168U,	// VMLSLsluv2i32
    439879168U,	// VMLSLsluv4i16
    3671552U,	// VMLSLsv2i64
    3671552U,	// VMLSLsv4i32
    3671552U,	// VMLSLsv8i16
    3671552U,	// VMLSLuv2i64
    3671552U,	// VMLSLuv4i32
    3671552U,	// VMLSLuv8i16
    3671552U,	// VMLSS
    3671552U,	// VMLSfd
    3671552U,	// VMLSfq
    3671552U,	// VMLShd
    3671552U,	// VMLShq
    439879168U,	// VMLSslfd
    439879168U,	// VMLSslfq
    439879168U,	// VMLSslhd
    439879168U,	// VMLSslhq
    439879168U,	// VMLSslv2i32
    439879168U,	// VMLSslv4i16
    439879168U,	// VMLSslv4i32
    439879168U,	// VMLSslv8i16
    3671552U,	// VMLSv16i8
    3671552U,	// VMLSv2i32
    3671552U,	// VMLSv4i16
    3671552U,	// VMLSv4i32
    3671552U,	// VMLSv8i16
    3671552U,	// VMLSv8i8
    16768U,	// VMMLA
    526U,	// VMOVD
    0U,	// VMOVDRR
    2U,	// VMOVH
    16384U,	// VMOVHR
    16384U,	// VMOVLsv2i64
    16384U,	// VMOVLsv4i32
    16384U,	// VMOVLsv8i16
    16384U,	// VMOVLuv2i64
    16384U,	// VMOVLuv4i32
    16384U,	// VMOVLuv8i16
    2U,	// VMOVNv2i32
    16384U,	// VMOVNv4i16
    16384U,	// VMOVNv8i8
    16384U,	// VMOVRH
    0U,	// VMOVRRD
    33554432U,	// VMOVRRS
    16384U,	// VMOVRS
    16384U,	// VMOVS
    16384U,	// VMOVSR
    33554432U,	// VMOVSRR
    4992U,	// VMOVv16i8
    0U,	// VMOVv1i64
    2048U,	// VMOVv2f32
    4992U,	// VMOVv2i32
    0U,	// VMOVv2i64
    2048U,	// VMOVv4f32
    4992U,	// VMOVv4i16
    4992U,	// VMOVv4i32
    4992U,	// VMOVv8i16
    4992U,	// VMOVv8i8
    46U,	// VMRS
    48U,	// VMRS_FPCXTNS
    50U,	// VMRS_FPCXTS
    52U,	// VMRS_FPEXC
    54U,	// VMRS_FPINST
    56U,	// VMRS_FPINST2
    58U,	// VMRS_FPSCR_NZCVQC
    60U,	// VMRS_FPSID
    62U,	// VMRS_MVFR0
    64U,	// VMRS_MVFR1
    66U,	// VMRS_MVFR2
    68U,	// VMRS_P0
    70U,	// VMRS_VPR
    2U,	// VMSR
    2U,	// VMSR_FPCXTNS
    2U,	// VMSR_FPCXTS
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPINST
    0U,	// VMSR_FPINST2
    2U,	// VMSR_FPSCR_NZCVQC
    0U,	// VMSR_FPSID
    2U,	// VMSR_P0
    2U,	// VMSR_VPR
    2212622U,	// VMULD
    0U,	// VMULH
    17920U,	// VMULLp64
    0U,	// VMULLp8
    167772160U,	// VMULLslsv2i32
    167772160U,	// VMULLslsv4i16
    167772160U,	// VMULLsluv2i32
    167772160U,	// VMULLsluv4i16
    0U,	// VMULLsv2i64
    0U,	// VMULLsv4i32
    0U,	// VMULLsv8i16
    0U,	// VMULLuv2i64
    0U,	// VMULLuv4i32
    0U,	// VMULLuv8i16
    0U,	// VMULS
    0U,	// VMULfd
    0U,	// VMULfq
    0U,	// VMULhd
    0U,	// VMULhq
    0U,	// VMULpd
    0U,	// VMULpq
    167772160U,	// VMULslfd
    167772160U,	// VMULslfq
    167772160U,	// VMULslhd
    167772160U,	// VMULslhq
    167772160U,	// VMULslv2i32
    167772160U,	// VMULslv4i16
    167772160U,	// VMULslv4i32
    167772160U,	// VMULslv8i16
    0U,	// VMULv16i8
    0U,	// VMULv2i32
    0U,	// VMULv4i16
    0U,	// VMULv4i32
    0U,	// VMULv8i16
    0U,	// VMULv8i8
    16384U,	// VMVNd
    16384U,	// VMVNq
    4992U,	// VMVNv2i32
    4992U,	// VMVNv4i16
    4992U,	// VMVNv4i32
    4992U,	// VMVNv8i16
    526U,	// VNEGD
    16384U,	// VNEGH
    16384U,	// VNEGS
    16384U,	// VNEGf32q
    16384U,	// VNEGfd
    16384U,	// VNEGhd
    16384U,	// VNEGhq
    16384U,	// VNEGs16d
    16384U,	// VNEGs16q
    16384U,	// VNEGs32d
    16384U,	// VNEGs32q
    16384U,	// VNEGs8d
    16384U,	// VNEGs8q
    49942U,	// VNMLAD
    3671552U,	// VNMLAH
    3671552U,	// VNMLAS
    49942U,	// VNMLSD
    3671552U,	// VNMLSH
    3671552U,	// VNMLSS
    2212622U,	// VNMULD
    0U,	// VNMULH
    0U,	// VNMULS
    0U,	// VORNd
    0U,	// VORNq
    0U,	// VORRd
    4992U,	// VORRiv2i32
    4992U,	// VORRiv4i16
    4992U,	// VORRiv4i32
    4992U,	// VORRiv8i16
    0U,	// VORRq
    17920U,	// VPADALsv16i8
    17920U,	// VPADALsv2i32
    17920U,	// VPADALsv4i16
    17920U,	// VPADALsv4i32
    17920U,	// VPADALsv8i16
    17920U,	// VPADALsv8i8
    17920U,	// VPADALuv16i8
    17920U,	// VPADALuv2i32
    17920U,	// VPADALuv4i16
    17920U,	// VPADALuv4i32
    17920U,	// VPADALuv8i16
    17920U,	// VPADALuv8i8
    16384U,	// VPADDLsv16i8
    16384U,	// VPADDLsv2i32
    16384U,	// VPADDLsv4i16
    16384U,	// VPADDLsv4i32
    16384U,	// VPADDLsv8i16
    16384U,	// VPADDLsv8i8
    16384U,	// VPADDLuv16i8
    16384U,	// VPADDLuv2i32
    16384U,	// VPADDLuv4i16
    16384U,	// VPADDLuv4i32
    16384U,	// VPADDLuv8i16
    16384U,	// VPADDLuv8i8
    0U,	// VPADDf
    0U,	// VPADDh
    0U,	// VPADDi16
    0U,	// VPADDi32
    0U,	// VPADDi8
    0U,	// VPMAXf
    0U,	// VPMAXh
    0U,	// VPMAXs16
    0U,	// VPMAXs32
    0U,	// VPMAXs8
    0U,	// VPMAXu16
    0U,	// VPMAXu32
    0U,	// VPMAXu8
    0U,	// VPMINf
    0U,	// VPMINh
    0U,	// VPMINs16
    0U,	// VPMINs32
    0U,	// VPMINs8
    0U,	// VPMINu16
    0U,	// VPMINu32
    0U,	// VPMINu8
    16384U,	// VQABSv16i8
    16384U,	// VQABSv2i32
    16384U,	// VQABSv4i16
    16384U,	// VQABSv4i32
    16384U,	// VQABSv8i16
    16384U,	// VQABSv8i8
    0U,	// VQADDsv16i8
    17920U,	// VQADDsv1i64
    0U,	// VQADDsv2i32
    17920U,	// VQADDsv2i64
    0U,	// VQADDsv4i16
    0U,	// VQADDsv4i32
    0U,	// VQADDsv8i16
    0U,	// VQADDsv8i8
    0U,	// VQADDuv16i8
    0U,	// VQADDuv1i64
    0U,	// VQADDuv2i32
    0U,	// VQADDuv2i64
    0U,	// VQADDuv4i16
    0U,	// VQADDuv4i32
    0U,	// VQADDuv8i16
    0U,	// VQADDuv8i8
    439879168U,	// VQDMLALslv2i32
    439879168U,	// VQDMLALslv4i16
    3671552U,	// VQDMLALv2i64
    3671552U,	// VQDMLALv4i32
    439879168U,	// VQDMLSLslv2i32
    439879168U,	// VQDMLSLslv4i16
    3671552U,	// VQDMLSLv2i64
    3671552U,	// VQDMLSLv4i32
    167772160U,	// VQDMULHslv2i32
    167772160U,	// VQDMULHslv4i16
    167772160U,	// VQDMULHslv4i32
    167772160U,	// VQDMULHslv8i16
    0U,	// VQDMULHv2i32
    0U,	// VQDMULHv4i16
    0U,	// VQDMULHv4i32
    0U,	// VQDMULHv8i16
    167772160U,	// VQDMULLslv2i32
    167772160U,	// VQDMULLslv4i16
    0U,	// VQDMULLv2i64
    0U,	// VQDMULLv4i32
    2U,	// VQMOVNsuv2i32
    16384U,	// VQMOVNsuv4i16
    16384U,	// VQMOVNsuv8i8
    2U,	// VQMOVNsv2i32
    16384U,	// VQMOVNsv4i16
    16384U,	// VQMOVNsv8i8
    16384U,	// VQMOVNuv2i32
    16384U,	// VQMOVNuv4i16
    16384U,	// VQMOVNuv8i8
    16384U,	// VQNEGv16i8
    16384U,	// VQNEGv2i32
    16384U,	// VQNEGv4i16
    16384U,	// VQNEGv4i32
    16384U,	// VQNEGv8i16
    16384U,	// VQNEGv8i8
    439879168U,	// VQRDMLAHslv2i32
    439879168U,	// VQRDMLAHslv4i16
    439879168U,	// VQRDMLAHslv4i32
    439879168U,	// VQRDMLAHslv8i16
    3671552U,	// VQRDMLAHv2i32
    3671552U,	// VQRDMLAHv4i16
    3671552U,	// VQRDMLAHv4i32
    3671552U,	// VQRDMLAHv8i16
    439879168U,	// VQRDMLSHslv2i32
    439879168U,	// VQRDMLSHslv4i16
    439879168U,	// VQRDMLSHslv4i32
    439879168U,	// VQRDMLSHslv8i16
    3671552U,	// VQRDMLSHv2i32
    3671552U,	// VQRDMLSHv4i16
    3671552U,	// VQRDMLSHv4i32
    3671552U,	// VQRDMLSHv8i16
    167772160U,	// VQRDMULHslv2i32
    167772160U,	// VQRDMULHslv4i16
    167772160U,	// VQRDMULHslv4i32
    167772160U,	// VQRDMULHslv8i16
    0U,	// VQRDMULHv2i32
    0U,	// VQRDMULHv4i16
    0U,	// VQRDMULHv4i32
    0U,	// VQRDMULHv8i16
    0U,	// VQRSHLsv16i8
    17920U,	// VQRSHLsv1i64
    0U,	// VQRSHLsv2i32
    17920U,	// VQRSHLsv2i64
    0U,	// VQRSHLsv4i16
    0U,	// VQRSHLsv4i32
    0U,	// VQRSHLsv8i16
    0U,	// VQRSHLsv8i8
    0U,	// VQRSHLuv16i8
    0U,	// VQRSHLuv1i64
    0U,	// VQRSHLuv2i32
    0U,	// VQRSHLuv2i64
    0U,	// VQRSHLuv4i16
    0U,	// VQRSHLuv4i32
    0U,	// VQRSHLuv8i16
    0U,	// VQRSHLuv8i8
    17920U,	// VQRSHRNsv2i32
    0U,	// VQRSHRNsv4i16
    0U,	// VQRSHRNsv8i8
    0U,	// VQRSHRNuv2i32
    0U,	// VQRSHRNuv4i16
    0U,	// VQRSHRNuv8i8
    17920U,	// VQRSHRUNv2i32
    0U,	// VQRSHRUNv4i16
    0U,	// VQRSHRUNv8i8
    0U,	// VQSHLsiv16i8
    17920U,	// VQSHLsiv1i64
    0U,	// VQSHLsiv2i32
    17920U,	// VQSHLsiv2i64
    0U,	// VQSHLsiv4i16
    0U,	// VQSHLsiv4i32
    0U,	// VQSHLsiv8i16
    0U,	// VQSHLsiv8i8
    0U,	// VQSHLsuv16i8
    17920U,	// VQSHLsuv1i64
    0U,	// VQSHLsuv2i32
    17920U,	// VQSHLsuv2i64
    0U,	// VQSHLsuv4i16
    0U,	// VQSHLsuv4i32
    0U,	// VQSHLsuv8i16
    0U,	// VQSHLsuv8i8
    0U,	// VQSHLsv16i8
    17920U,	// VQSHLsv1i64
    0U,	// VQSHLsv2i32
    17920U,	// VQSHLsv2i64
    0U,	// VQSHLsv4i16
    0U,	// VQSHLsv4i32
    0U,	// VQSHLsv8i16
    0U,	// VQSHLsv8i8
    0U,	// VQSHLuiv16i8
    0U,	// VQSHLuiv1i64
    0U,	// VQSHLuiv2i32
    0U,	// VQSHLuiv2i64
    0U,	// VQSHLuiv4i16
    0U,	// VQSHLuiv4i32
    0U,	// VQSHLuiv8i16
    0U,	// VQSHLuiv8i8
    0U,	// VQSHLuv16i8
    0U,	// VQSHLuv1i64
    0U,	// VQSHLuv2i32
    0U,	// VQSHLuv2i64
    0U,	// VQSHLuv4i16
    0U,	// VQSHLuv4i32
    0U,	// VQSHLuv8i16
    0U,	// VQSHLuv8i8
    17920U,	// VQSHRNsv2i32
    0U,	// VQSHRNsv4i16
    0U,	// VQSHRNsv8i8
    0U,	// VQSHRNuv2i32
    0U,	// VQSHRNuv4i16
    0U,	// VQSHRNuv8i8
    17920U,	// VQSHRUNv2i32
    0U,	// VQSHRUNv4i16
    0U,	// VQSHRUNv8i8
    0U,	// VQSUBsv16i8
    17920U,	// VQSUBsv1i64
    0U,	// VQSUBsv2i32
    17920U,	// VQSUBsv2i64
    0U,	// VQSUBsv4i16
    0U,	// VQSUBsv4i32
    0U,	// VQSUBsv8i16
    0U,	// VQSUBsv8i8
    0U,	// VQSUBuv16i8
    0U,	// VQSUBuv1i64
    0U,	// VQSUBuv2i32
    0U,	// VQSUBuv2i64
    0U,	// VQSUBuv4i16
    0U,	// VQSUBuv4i32
    0U,	// VQSUBuv8i16
    0U,	// VQSUBuv8i8
    17920U,	// VRADDHNv2i32
    0U,	// VRADDHNv4i16
    0U,	// VRADDHNv8i8
    16384U,	// VRECPEd
    16384U,	// VRECPEfd
    16384U,	// VRECPEfq
    16384U,	// VRECPEhd
    16384U,	// VRECPEhq
    16384U,	// VRECPEq
    0U,	// VRECPSfd
    0U,	// VRECPSfq
    0U,	// VRECPShd
    0U,	// VRECPShq
    16384U,	// VREV16d8
    16384U,	// VREV16q8
    16384U,	// VREV32d16
    16384U,	// VREV32d8
    16384U,	// VREV32q16
    16384U,	// VREV32q8
    16384U,	// VREV64d16
    16384U,	// VREV64d32
    16384U,	// VREV64d8
    16384U,	// VREV64q16
    16384U,	// VREV64q32
    16384U,	// VREV64q8
    0U,	// VRHADDsv16i8
    0U,	// VRHADDsv2i32
    0U,	// VRHADDsv4i16
    0U,	// VRHADDsv4i32
    0U,	// VRHADDsv8i16
    0U,	// VRHADDsv8i8
    0U,	// VRHADDuv16i8
    0U,	// VRHADDuv2i32
    0U,	// VRHADDuv4i16
    0U,	// VRHADDuv4i32
    0U,	// VRHADDuv8i16
    0U,	// VRHADDuv8i8
    2U,	// VRINTAD
    2U,	// VRINTAH
    2U,	// VRINTANDf
    2U,	// VRINTANDh
    2U,	// VRINTANQf
    2U,	// VRINTANQh
    2U,	// VRINTAS
    2U,	// VRINTMD
    2U,	// VRINTMH
    2U,	// VRINTMNDf
    2U,	// VRINTMNDh
    2U,	// VRINTMNQf
    2U,	// VRINTMNQh
    2U,	// VRINTMS
    2U,	// VRINTND
    2U,	// VRINTNH
    2U,	// VRINTNNDf
    2U,	// VRINTNNDh
    2U,	// VRINTNNQf
    2U,	// VRINTNNQh
    2U,	// VRINTNS
    2U,	// VRINTPD
    2U,	// VRINTPH
    2U,	// VRINTPNDf
    2U,	// VRINTPNDh
    2U,	// VRINTPNQf
    2U,	// VRINTPNQh
    2U,	// VRINTPS
    526U,	// VRINTRD
    16384U,	// VRINTRH
    16384U,	// VRINTRS
    526U,	// VRINTXD
    16384U,	// VRINTXH
    2U,	// VRINTXNDf
    2U,	// VRINTXNDh
    2U,	// VRINTXNQf
    2U,	// VRINTXNQh
    16384U,	// VRINTXS
    526U,	// VRINTZD
    16384U,	// VRINTZH
    2U,	// VRINTZNDf
    2U,	// VRINTZNDh
    2U,	// VRINTZNQf
    2U,	// VRINTZNQh
    16384U,	// VRINTZS
    0U,	// VRSHLsv16i8
    17920U,	// VRSHLsv1i64
    0U,	// VRSHLsv2i32
    17920U,	// VRSHLsv2i64
    0U,	// VRSHLsv4i16
    0U,	// VRSHLsv4i32
    0U,	// VRSHLsv8i16
    0U,	// VRSHLsv8i8
    0U,	// VRSHLuv16i8
    0U,	// VRSHLuv1i64
    0U,	// VRSHLuv2i32
    0U,	// VRSHLuv2i64
    0U,	// VRSHLuv4i16
    0U,	// VRSHLuv4i32
    0U,	// VRSHLuv8i16
    0U,	// VRSHLuv8i8
    17920U,	// VRSHRNv2i32
    0U,	// VRSHRNv4i16
    0U,	// VRSHRNv8i8
    0U,	// VRSHRsv16i8
    17920U,	// VRSHRsv1i64
    0U,	// VRSHRsv2i32
    17920U,	// VRSHRsv2i64
    0U,	// VRSHRsv4i16
    0U,	// VRSHRsv4i32
    0U,	// VRSHRsv8i16
    0U,	// VRSHRsv8i8
    0U,	// VRSHRuv16i8
    0U,	// VRSHRuv1i64
    0U,	// VRSHRuv2i32
    0U,	// VRSHRuv2i64
    0U,	// VRSHRuv4i16
    0U,	// VRSHRuv4i32
    0U,	// VRSHRuv8i16
    0U,	// VRSHRuv8i8
    16384U,	// VRSQRTEd
    16384U,	// VRSQRTEfd
    16384U,	// VRSQRTEfq
    16384U,	// VRSQRTEhd
    16384U,	// VRSQRTEhq
    16384U,	// VRSQRTEq
    0U,	// VRSQRTSfd
    0U,	// VRSQRTSfq
    0U,	// VRSQRTShd
    0U,	// VRSQRTShq
    3671552U,	// VRSRAsv16i8
    16768U,	// VRSRAsv1i64
    3671552U,	// VRSRAsv2i32
    16768U,	// VRSRAsv2i64
    3671552U,	// VRSRAsv4i16
    3671552U,	// VRSRAsv4i32
    3671552U,	// VRSRAsv8i16
    3671552U,	// VRSRAsv8i8
    3671552U,	// VRSRAuv16i8
    3671552U,	// VRSRAuv1i64
    3671552U,	// VRSRAuv2i32
    3671552U,	// VRSRAuv2i64
    3671552U,	// VRSRAuv4i16
    3671552U,	// VRSRAuv4i32
    3671552U,	// VRSRAuv8i16
    3671552U,	// VRSRAuv8i8
    17920U,	// VRSUBHNv2i32
    0U,	// VRSUBHNv4i16
    0U,	// VRSUBHNv8i8
    0U,	// VSCCLRMD
    0U,	// VSCCLRMS
    16768U,	// VSDOTD
    2163072U,	// VSDOTDI
    16768U,	// VSDOTQ
    2163072U,	// VSDOTQI
    17920U,	// VSELEQD
    17920U,	// VSELEQH
    17920U,	// VSELEQS
    17920U,	// VSELGED
    17920U,	// VSELGEH
    17920U,	// VSELGES
    17920U,	// VSELGTD
    17920U,	// VSELGTH
    17920U,	// VSELGTS
    17920U,	// VSELVSD
    17920U,	// VSELVSH
    17920U,	// VSELVSS
    32U,	// VSETLNi16
    32U,	// VSETLNi32
    32U,	// VSETLNi8
    0U,	// VSHLLi16
    0U,	// VSHLLi32
    0U,	// VSHLLi8
    0U,	// VSHLLsv2i64
    0U,	// VSHLLsv4i32
    0U,	// VSHLLsv8i16
    0U,	// VSHLLuv2i64
    0U,	// VSHLLuv4i32
    0U,	// VSHLLuv8i16
    0U,	// VSHLiv16i8
    17920U,	// VSHLiv1i64
    0U,	// VSHLiv2i32
    17920U,	// VSHLiv2i64
    0U,	// VSHLiv4i16
    0U,	// VSHLiv4i32
    0U,	// VSHLiv8i16
    0U,	// VSHLiv8i8
    0U,	// VSHLsv16i8
    17920U,	// VSHLsv1i64
    0U,	// VSHLsv2i32
    17920U,	// VSHLsv2i64
    0U,	// VSHLsv4i16
    0U,	// VSHLsv4i32
    0U,	// VSHLsv8i16
    0U,	// VSHLsv8i8
    0U,	// VSHLuv16i8
    0U,	// VSHLuv1i64
    0U,	// VSHLuv2i32
    0U,	// VSHLuv2i64
    0U,	// VSHLuv4i16
    0U,	// VSHLuv4i32
    0U,	// VSHLuv8i16
    0U,	// VSHLuv8i8
    17920U,	// VSHRNv2i32
    0U,	// VSHRNv4i16
    0U,	// VSHRNv8i8
    0U,	// VSHRsv16i8
    17920U,	// VSHRsv1i64
    0U,	// VSHRsv2i32
    17920U,	// VSHRsv2i64
    0U,	// VSHRsv4i16
    0U,	// VSHRsv4i32
    0U,	// VSHRsv8i16
    0U,	// VSHRsv8i8
    0U,	// VSHRuv16i8
    0U,	// VSHRuv1i64
    0U,	// VSHRuv2i32
    0U,	// VSHRuv2i64
    0U,	// VSHRuv4i16
    0U,	// VSHRuv4i32
    0U,	// VSHRuv8i16
    0U,	// VSHRuv8i8
    0U,	// VSHTOD
    72U,	// VSHTOH
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOH
    0U,	// VSITOS
    3671552U,	// VSLIv16i8
    3671552U,	// VSLIv1i64
    3671552U,	// VSLIv2i32
    3671552U,	// VSLIv2i64
    3671552U,	// VSLIv4i16
    3671552U,	// VSLIv4i32
    3671552U,	// VSLIv8i16
    3671552U,	// VSLIv8i8
    74U,	// VSLTOD
    74U,	// VSLTOH
    74U,	// VSLTOS
    16768U,	// VSMMLA
    526U,	// VSQRTD
    16384U,	// VSQRTH
    16384U,	// VSQRTS
    3671552U,	// VSRAsv16i8
    16768U,	// VSRAsv1i64
    3671552U,	// VSRAsv2i32
    16768U,	// VSRAsv2i64
    3671552U,	// VSRAsv4i16
    3671552U,	// VSRAsv4i32
    3671552U,	// VSRAsv8i16
    3671552U,	// VSRAsv8i8
    3671552U,	// VSRAuv16i8
    3671552U,	// VSRAuv1i64
    3671552U,	// VSRAuv2i32
    3671552U,	// VSRAuv2i64
    3671552U,	// VSRAuv4i16
    3671552U,	// VSRAuv4i32
    3671552U,	// VSRAuv8i16
    3671552U,	// VSRAuv8i8
    3671552U,	// VSRIv16i8
    3671552U,	// VSRIv1i64
    3671552U,	// VSRIv2i32
    3671552U,	// VSRIv2i64
    3671552U,	// VSRIv4i16
    3671552U,	// VSRIv4i32
    3671552U,	// VSRIv8i16
    3671552U,	// VSRIv8i8
    6694U,	// VST1LNd16
    482106022U,	// VST1LNd16_UPD
    6694U,	// VST1LNd32
    482106022U,	// VST1LNd32_UPD
    6694U,	// VST1LNd8
    482106022U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    0U,	// VST1d16QPseudoWB_fixed
    0U,	// VST1d16QPseudoWB_register
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16TPseudo
    0U,	// VST1d16TPseudoWB_fixed
    0U,	// VST1d16TPseudoWB_register
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    0U,	// VST1d32QPseudoWB_fixed
    0U,	// VST1d32QPseudoWB_register
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32TPseudo
    0U,	// VST1d32TPseudoWB_fixed
    0U,	// VST1d32TPseudoWB_register
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    0U,	// VST1d8QPseudoWB_fixed
    0U,	// VST1d8QPseudoWB_register
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8TPseudo
    0U,	// VST1d8TPseudoWB_fixed
    0U,	// VST1d8TPseudoWB_register
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighQPseudo_UPD
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16HighTPseudo_UPD
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighQPseudo_UPD
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32HighTPseudo_UPD
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighQPseudo_UPD
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64HighTPseudo_UPD
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighQPseudo_UPD
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8HighTPseudo_UPD
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    406623654U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    407148070U,	// VST2LNd16_UPD
    406623654U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    407148070U,	// VST2LNd32_UPD
    406623654U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    407148070U,	// VST2LNd8_UPD
    406623654U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    407148070U,	// VST2LNq16_UPD
    406623654U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    407148070U,	// VST2LNq32_UPD
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    406624934U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    6950U,	// VST3LNd16_UPD
    406624934U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    6950U,	// VST3LNd32_UPD
    406624934U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    6950U,	// VST3LNd8_UPD
    406624934U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    6950U,	// VST3LNq16_UPD
    406624934U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    6950U,	// VST3LNq32_UPD
    369623424U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    383872U,	// VST3d16_UPD
    369623424U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    383872U,	// VST3d32_UPD
    369623424U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    383872U,	// VST3d8_UPD
    369623424U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    383872U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    369623424U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    383872U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    369623424U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    383872U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    406623782U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    399014U,	// VST4LNd16_UPD
    406623782U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    399014U,	// VST4LNd32_UPD
    406623782U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    399014U,	// VST4LNd8_UPD
    406623782U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    399014U,	// VST4LNq16_UPD
    406623782U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    399014U,	// VST4LNq32_UPD
    34079104U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    15735680U,	// VST4d16_UPD
    34079104U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    15735680U,	// VST4d32_UPD
    34079104U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    15735680U,	// VST4d8_UPD
    34079104U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    15735680U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    34079104U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    15735680U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    34079104U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    15735680U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    530U,	// VSTMDDB_UPD
    18560U,	// VSTMDIA
    530U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    530U,	// VSTMSDB_UPD
    18560U,	// VSTMSIA
    530U,	// VSTMSIA_UPD
    6400U,	// VSTRD
    6528U,	// VSTRH
    6400U,	// VSTRS
    0U,	// VSTR_FPCXTNS_off
    42U,	// VSTR_FPCXTNS_post
    0U,	// VSTR_FPCXTNS_pre
    0U,	// VSTR_FPCXTS_off
    42U,	// VSTR_FPCXTS_post
    0U,	// VSTR_FPCXTS_pre
    0U,	// VSTR_FPSCR_NZCVQC_off
    42U,	// VSTR_FPSCR_NZCVQC_post
    0U,	// VSTR_FPSCR_NZCVQC_pre
    0U,	// VSTR_FPSCR_off
    42U,	// VSTR_FPSCR_post
    0U,	// VSTR_FPSCR_pre
    0U,	// VSTR_P0_off
    44U,	// VSTR_P0_post
    0U,	// VSTR_P0_pre
    0U,	// VSTR_VPR_off
    42U,	// VSTR_VPR_post
    0U,	// VSTR_VPR_pre
    2212622U,	// VSUBD
    0U,	// VSUBH
    17920U,	// VSUBHNv2i32
    0U,	// VSUBHNv4i16
    0U,	// VSUBHNv8i8
    0U,	// VSUBLsv2i64
    0U,	// VSUBLsv4i32
    0U,	// VSUBLsv8i16
    0U,	// VSUBLuv2i64
    0U,	// VSUBLuv4i32
    0U,	// VSUBLuv8i16
    0U,	// VSUBS
    0U,	// VSUBWsv2i64
    0U,	// VSUBWsv4i32
    0U,	// VSUBWsv8i16
    0U,	// VSUBWuv2i64
    0U,	// VSUBWuv4i32
    0U,	// VSUBWuv8i16
    0U,	// VSUBfd
    0U,	// VSUBfq
    0U,	// VSUBhd
    0U,	// VSUBhq
    0U,	// VSUBv16i8
    17920U,	// VSUBv1i64
    0U,	// VSUBv2i32
    17920U,	// VSUBv2i64
    0U,	// VSUBv4i16
    0U,	// VSUBv4i32
    0U,	// VSUBv8i16
    0U,	// VSUBv8i8
    2163072U,	// VSUDOTDI
    2163072U,	// VSUDOTQI
    16384U,	// VSWPd
    16384U,	// VSWPq
    7168U,	// VTBL1
    7296U,	// VTBL2
    7424U,	// VTBL3
    0U,	// VTBL3Pseudo
    7552U,	// VTBL4
    0U,	// VTBL4Pseudo
    7680U,	// VTBX1
    7808U,	// VTBX2
    7936U,	// VTBX3
    0U,	// VTBX3Pseudo
    8064U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    72U,	// VTOSHH
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRH
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZH
    0U,	// VTOSIZS
    74U,	// VTOSLD
    74U,	// VTOSLH
    74U,	// VTOSLS
    0U,	// VTOUHD
    72U,	// VTOUHH
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRH
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZH
    0U,	// VTOUIZS
    74U,	// VTOULD
    74U,	// VTOULH
    74U,	// VTOULS
    16384U,	// VTRNd16
    16384U,	// VTRNd32
    16384U,	// VTRNd8
    16384U,	// VTRNq16
    16384U,	// VTRNq32
    16384U,	// VTRNq8
    0U,	// VTSTv16i8
    0U,	// VTSTv2i32
    0U,	// VTSTv4i16
    0U,	// VTSTv4i32
    0U,	// VTSTv8i16
    0U,	// VTSTv8i8
    16768U,	// VUDOTD
    2163072U,	// VUDOTDI
    16768U,	// VUDOTQ
    2163072U,	// VUDOTQI
    0U,	// VUHTOD
    72U,	// VUHTOH
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOH
    0U,	// VUITOS
    74U,	// VULTOD
    74U,	// VULTOH
    74U,	// VULTOS
    16768U,	// VUMMLA
    16768U,	// VUSDOTD
    2163072U,	// VUSDOTDI
    16768U,	// VUSDOTQ
    2163072U,	// VUSDOTQI
    16768U,	// VUSMMLA
    16384U,	// VUZPd16
    16384U,	// VUZPd8
    16384U,	// VUZPq16
    16384U,	// VUZPq32
    16384U,	// VUZPq8
    16384U,	// VZIPd16
    16384U,	// VZIPd8
    16384U,	// VZIPq16
    16384U,	// VZIPq32
    16384U,	// VZIPq8
    411776U,	// sysLDMDA
    8210U,	// sysLDMDA_UPD
    411776U,	// sysLDMDB
    8210U,	// sysLDMDB_UPD
    411776U,	// sysLDMIA
    8210U,	// sysLDMIA_UPD
    411776U,	// sysLDMIB
    8210U,	// sysLDMIB_UPD
    411776U,	// sysSTMDA
    8210U,	// sysSTMDA_UPD
    411776U,	// sysSTMDB
    8210U,	// sysSTMDB_UPD
    411776U,	// sysSTMIA
    8210U,	// sysSTMIA_UPD
    411776U,	// sysSTMIB
    8210U,	// sysSTMIB_UPD
    0U,	// t2ADCri
    0U,	// t2ADCrr
    16252928U,	// t2ADCrs
    0U,	// t2ADDri
    0U,	// t2ADDri12
    0U,	// t2ADDrr
    16252928U,	// t2ADDrs
    0U,	// t2ADDspImm
    0U,	// t2ADDspImm12
    1280U,	// t2ADR
    0U,	// t2ANDri
    0U,	// t2ANDrr
    16252928U,	// t2ANDrs
    16777216U,	// t2ASRri
    0U,	// t2ASRrr
    0U,	// t2AUT
    524672U,	// t2AUTG
    2U,	// t2B
    1408U,	// t2BFC
    2622976U,	// t2BFI
    8320U,	// t2BFLi
    16384U,	// t2BFLr
    8320U,	// t2BFi
    17306624U,	// t2BFic
    16384U,	// t2BFr
    0U,	// t2BICri
    0U,	// t2BICrr
    16252928U,	// t2BICrs
    0U,	// t2BTI
    524672U,	// t2BXAUT
    2U,	// t2BXJ
    2U,	// t2Bcc
    99086U,	// t2CDP
    99086U,	// t2CDP2
    0U,	// t2CLREX
    0U,	// t2CLRM
    16384U,	// t2CLZ
    16384U,	// t2CMNri
    16384U,	// t2CMNzrr
    1024U,	// t2CMNzrs
    16384U,	// t2CMPri
    16384U,	// t2CMPrr
    1024U,	// t2CMPrs
    0U,	// t2CPS1p
    2U,	// t2CPS2p
    17920U,	// t2CPS3p
    17920U,	// t2CRC32B
    17920U,	// t2CRC32CB
    17920U,	// t2CRC32CH
    17920U,	// t2CRC32CW
    17920U,	// t2CRC32H
    17920U,	// t2CRC32W
    17303040U,	// t2CSEL
    17303040U,	// t2CSINC
    17303040U,	// t2CSINV
    17303040U,	// t2CSNEG
    2U,	// t2DBG
    0U,	// t2DCPS1
    0U,	// t2DCPS2
    0U,	// t2DCPS3
    2U,	// t2DLS
    0U,	// t2DMB
    0U,	// t2DSB
    0U,	// t2EORri
    0U,	// t2EORrr
    16252928U,	// t2EORrs
    2U,	// t2HINT
    0U,	// t2HVC
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    128U,	// t2LDA
    128U,	// t2LDAB
    128U,	// t2LDAEX
    128U,	// t2LDAEXB
    10485760U,	// t2LDAEXD
    128U,	// t2LDAEXH
    128U,	// t2LDAH
    2580U,	// t2LDC2L_OFFSET
    4721300U,	// t2LDC2L_OPTION
    5245588U,	// t2LDC2L_POST
    2836U,	// t2LDC2L_PRE
    2580U,	// t2LDC2_OFFSET
    4721300U,	// t2LDC2_OPTION
    5245588U,	// t2LDC2_POST
    2836U,	// t2LDC2_PRE
    2580U,	// t2LDCL_OFFSET
    4721300U,	// t2LDCL_OPTION
    5245588U,	// t2LDCL_POST
    2836U,	// t2LDCL_PRE
    2580U,	// t2LDC_OFFSET
    4721300U,	// t2LDC_OPTION
    5245588U,	// t2LDC_POST
    2836U,	// t2LDC_PRE
    18560U,	// t2LDMDB
    530U,	// t2LDMDB_UPD
    18560U,	// t2LDMIA
    530U,	// t2LDMIA_UPD
    4096U,	// t2LDRBT
    150144U,	// t2LDRB_POST
    4480U,	// t2LDRB_PRE
    3200U,	// t2LDRBi12
    4096U,	// t2LDRBi8
    8448U,	// t2LDRBpci
    8576U,	// t2LDRBs
    510132224U,	// t2LDRD_POST
    17825792U,	// t2LDRD_PRE
    18350080U,	// t2LDRDi8
    8704U,	// t2LDREX
    128U,	// t2LDREXB
    10485760U,	// t2LDREXD
    128U,	// t2LDREXH
    4096U,	// t2LDRHT
    150144U,	// t2LDRH_POST
    4480U,	// t2LDRH_PRE
    3200U,	// t2LDRHi12
    4096U,	// t2LDRHi8
    8448U,	// t2LDRHpci
    8576U,	// t2LDRHs
    4096U,	// t2LDRSBT
    150144U,	// t2LDRSB_POST
    4480U,	// t2LDRSB_PRE
    3200U,	// t2LDRSBi12
    4096U,	// t2LDRSBi8
    8448U,	// t2LDRSBpci
    8576U,	// t2LDRSBs
    4096U,	// t2LDRSHT
    150144U,	// t2LDRSH_POST
    4480U,	// t2LDRSH_PRE
    3200U,	// t2LDRSHi12
    4096U,	// t2LDRSHi8
    8448U,	// t2LDRSHpci
    8576U,	// t2LDRSHs
    4096U,	// t2LDRT
    150144U,	// t2LDR_POST
    4480U,	// t2LDR_PRE
    3200U,	// t2LDRi12
    4096U,	// t2LDRi8
    8448U,	// t2LDRpci
    8576U,	// t2LDRs
    0U,	// t2LE
    0U,	// t2LEUpdate
    0U,	// t2LSLri
    0U,	// t2LSLrr
    16777216U,	// t2LSRri
    0U,	// t2LSRrr
    103924494U,	// t2MCR
    103924494U,	// t2MCR2
    137478926U,	// t2MCRR
    137478926U,	// t2MCRR2
    33554432U,	// t2MLA
    33554432U,	// t2MLS
    17920U,	// t2MOVTi16
    16384U,	// t2MOVi
    16384U,	// t2MOVi16
    16384U,	// t2MOVr
    425984U,	// t2MOVsra_flag
    425984U,	// t2MOVsrl_flag
    131862U,	// t2MRC
    131862U,	// t2MRC2
    0U,	// t2MRRC
    0U,	// t2MRRC2
    24U,	// t2MRS_AR
    8832U,	// t2MRS_M
    3840U,	// t2MRSbanked
    26U,	// t2MRSsys_AR
    526U,	// t2MSR_AR
    526U,	// t2MSR_M
    0U,	// t2MSRbanked
    0U,	// t2MUL
    16384U,	// t2MVNi
    16384U,	// t2MVNr
    1024U,	// t2MVNs
    0U,	// t2ORNri
    0U,	// t2ORNrr
    16252928U,	// t2ORNrs
    0U,	// t2ORRri
    0U,	// t2ORRrr
    16252928U,	// t2ORRrs
    0U,	// t2PAC
    0U,	// t2PACBTI
    524672U,	// t2PACG
    201326592U,	// t2PKHBT
    234881024U,	// t2PKHTB
    0U,	// t2PLDWi12
    1U,	// t2PLDWi8
    1U,	// t2PLDWs
    0U,	// t2PLDi12
    1U,	// t2PLDi8
    1U,	// t2PLDpci
    1U,	// t2PLDs
    0U,	// t2PLIi12
    1U,	// t2PLIi8
    1U,	// t2PLIpci
    1U,	// t2PLIs
    0U,	// t2QADD
    0U,	// t2QADD16
    0U,	// t2QADD8
    0U,	// t2QASX
    0U,	// t2QDADD
    0U,	// t2QDSUB
    0U,	// t2QSAX
    0U,	// t2QSUB
    0U,	// t2QSUB16
    0U,	// t2QSUB8
    16384U,	// t2RBIT
    16384U,	// t2REV
    16384U,	// t2REV16
    16384U,	// t2REVSH
    2U,	// t2RFEDB
    4U,	// t2RFEDBW
    2U,	// t2RFEIA
    4U,	// t2RFEIAW
    0U,	// t2RORri
    0U,	// t2RORrr
    16384U,	// t2RRX
    0U,	// t2RSBri
    0U,	// t2RSBrr
    16252928U,	// t2RSBrs
    0U,	// t2SADD16
    0U,	// t2SADD8
    0U,	// t2SASX
    0U,	// t2SB
    0U,	// t2SBCri
    0U,	// t2SBCrr
    16252928U,	// t2SBCrs
    33554432U,	// t2SBFX
    0U,	// t2SDIV
    0U,	// t2SEL
    0U,	// t2SETPAN
    0U,	// t2SG
    0U,	// t2SHADD16
    0U,	// t2SHADD8
    0U,	// t2SHASX
    0U,	// t2SHSAX
    0U,	// t2SHSUB16
    0U,	// t2SHSUB8
    2U,	// t2SMC
    33554432U,	// t2SMLABB
    33554432U,	// t2SMLABT
    33554432U,	// t2SMLAD
    33554432U,	// t2SMLADX
    33554432U,	// t2SMLAL
    33554432U,	// t2SMLALBB
    33554432U,	// t2SMLALBT
    33554432U,	// t2SMLALD
    33554432U,	// t2SMLALDX
    33554432U,	// t2SMLALTB
    33554432U,	// t2SMLALTT
    33554432U,	// t2SMLATB
    33554432U,	// t2SMLATT
    33554432U,	// t2SMLAWB
    33554432U,	// t2SMLAWT
    33554432U,	// t2SMLSD
    33554432U,	// t2SMLSDX
    33554432U,	// t2SMLSLD
    33554432U,	// t2SMLSLDX
    33554432U,	// t2SMMLA
    33554432U,	// t2SMMLAR
    33554432U,	// t2SMMLS
    33554432U,	// t2SMMLSR
    0U,	// t2SMMUL
    0U,	// t2SMMULR
    0U,	// t2SMUAD
    0U,	// t2SMUADX
    0U,	// t2SMULBB
    0U,	// t2SMULBT
    33554432U,	// t2SMULL
    0U,	// t2SMULTB
    0U,	// t2SMULTT
    0U,	// t2SMULWB
    0U,	// t2SMULWT
    0U,	// t2SMUSD
    0U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    218240U,	// t2SSAT
    21632U,	// t2SSAT16
    0U,	// t2SSAX
    0U,	// t2SSUB16
    0U,	// t2SSUB8
    2580U,	// t2STC2L_OFFSET
    4721300U,	// t2STC2L_OPTION
    5245588U,	// t2STC2L_POST
    2836U,	// t2STC2L_PRE
    2580U,	// t2STC2_OFFSET
    4721300U,	// t2STC2_OPTION
    5245588U,	// t2STC2_POST
    2836U,	// t2STC2_PRE
    2580U,	// t2STCL_OFFSET
    4721300U,	// t2STCL_OPTION
    5245588U,	// t2STCL_POST
    2836U,	// t2STCL_PRE
    2580U,	// t2STC_OFFSET
    4721300U,	// t2STC_OPTION
    5245588U,	// t2STC_POST
    2836U,	// t2STC_PRE
    128U,	// t2STL
    128U,	// t2STLB
    10485760U,	// t2STLEX
    10485760U,	// t2STLEXB
    33554432U,	// t2STLEXD
    10485760U,	// t2STLEXH
    128U,	// t2STLH
    18560U,	// t2STMDB
    530U,	// t2STMDB_UPD
    18560U,	// t2STMIA
    530U,	// t2STMIA_UPD
    4096U,	// t2STRBT
    150144U,	// t2STRB_POST
    4480U,	// t2STRB_PRE
    3200U,	// t2STRBi12
    4096U,	// t2STRBi8
    8576U,	// t2STRBs
    510133760U,	// t2STRD_POST
    17827328U,	// t2STRD_PRE
    18350080U,	// t2STRDi8
    18874368U,	// t2STREX
    10485760U,	// t2STREXB
    33554432U,	// t2STREXD
    10485760U,	// t2STREXH
    4096U,	// t2STRHT
    150144U,	// t2STRH_POST
    4480U,	// t2STRH_PRE
    3200U,	// t2STRHi12
    4096U,	// t2STRHi8
    8576U,	// t2STRHs
    4096U,	// t2STRT
    150144U,	// t2STR_POST
    4480U,	// t2STR_PRE
    3200U,	// t2STRi12
    4096U,	// t2STRi8
    8576U,	// t2STRs
    0U,	// t2SUBS_PC_LR
    0U,	// t2SUBri
    0U,	// t2SUBri12
    0U,	// t2SUBrr
    16252928U,	// t2SUBrs
    0U,	// t2SUBspImm
    0U,	// t2SUBspImm12
    268435456U,	// t2SXTAB
    268435456U,	// t2SXTAB16
    268435456U,	// t2SXTAH
    229376U,	// t2SXTB
    229376U,	// t2SXTB16
    229376U,	// t2SXTH
    1U,	// t2TBB
    1U,	// t2TBH
    16384U,	// t2TEQri
    16384U,	// t2TEQrr
    1024U,	// t2TEQrs
    1U,	// t2TSB
    16384U,	// t2TSTri
    16384U,	// t2TSTrr
    1024U,	// t2TSTrs
    16384U,	// t2TT
    16384U,	// t2TTA
    16384U,	// t2TTAT
    16384U,	// t2TTT
    0U,	// t2UADD16
    0U,	// t2UADD8
    0U,	// t2UASX
    33554432U,	// t2UBFX
    0U,	// t2UDF
    0U,	// t2UDIV
    0U,	// t2UHADD16
    0U,	// t2UHADD8
    0U,	// t2UHASX
    0U,	// t2UHSAX
    0U,	// t2UHSUB16
    0U,	// t2UHSUB8
    33554432U,	// t2UMAAL
    33554432U,	// t2UMLAL
    33554432U,	// t2UMULL
    0U,	// t2UQADD16
    0U,	// t2UQADD8
    0U,	// t2UQASX
    0U,	// t2UQSAX
    0U,	// t2UQSUB16
    0U,	// t2UQSUB8
    0U,	// t2USAD8
    33554432U,	// t2USADA8
    301989888U,	// t2USAT
    0U,	// t2USAT16
    0U,	// t2USAX
    0U,	// t2USUB16
    0U,	// t2USUB8
    268435456U,	// t2UXTAB
    268435456U,	// t2UXTAB16
    268435456U,	// t2UXTAH
    229376U,	// t2UXTB
    229376U,	// t2UXTB16
    229376U,	// t2UXTH
    21504U,	// t2WLS
    2U,	// tADC
    17920U,	// tADDhirr
    16768U,	// tADDi3
    2U,	// tADDi8
    0U,	// tADDrSP
    19398656U,	// tADDrSPi
    16768U,	// tADDrr
    8960U,	// tADDspi
    17920U,	// tADDspr
    9088U,	// tADR
    2U,	// tAND
    9216U,	// tASRri
    2U,	// tASRrr
    2U,	// tB
    2U,	// tBIC
    0U,	// tBKPT
    0U,	// tBL
    2U,	// tBLXNSr
    0U,	// tBLXi
    2U,	// tBLXr
    2U,	// tBX
    2U,	// tBXNS
    2U,	// tBcc
    2U,	// tCBNZ
    2U,	// tCBZ
    16384U,	// tCMNz
    16384U,	// tCMPhir
    16384U,	// tCMPi8
    16384U,	// tCMPr
    2U,	// tCPS
    2U,	// tEOR
    2U,	// tHINT
    0U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    18560U,	// tLDMIA
    9344U,	// tLDRBi
    9472U,	// tLDRBr
    9600U,	// tLDRHi
    9472U,	// tLDRHr
    9472U,	// tLDRSB
    9472U,	// tLDRSH
    9728U,	// tLDRi
    8448U,	// tLDRpci
    9472U,	// tLDRr
    9856U,	// tLDRspi
    16768U,	// tLSLri
    2U,	// tLSLrr
    9216U,	// tLSRri
    2U,	// tLSRrr
    2U,	// tMOVSr
    0U,	// tMOVi8
    16384U,	// tMOVr
    16768U,	// tMUL
    0U,	// tMVN
    2U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPUSH
    16384U,	// tREV
    16384U,	// tREV16
    16384U,	// tREVSH
    2U,	// tROR
    0U,	// tRSB
    2U,	// tSBC
    0U,	// tSETEND
    530U,	// tSTMIA_UPD
    9344U,	// tSTRBi
    9472U,	// tSTRBr
    9600U,	// tSTRHi
    9472U,	// tSTRHr
    9728U,	// tSTRi
    9472U,	// tSTRr
    9856U,	// tSTRspi
    16768U,	// tSUBi3
    2U,	// tSUBi8
    16768U,	// tSUBrr
    8960U,	// tSUBspi
    2U,	// tSVC
    16384U,	// tSXTB
    16384U,	// tSXTH
    0U,	// tTRAP
    16384U,	// tTST
    0U,	// tUDF
    16384U,	// tUXTB
    16384U,	// tUXTH
    0U,	// t__brkdiv0
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MCInst_getOpcode(MI)] << 0;
  Bits |= (uint64_t)OpInfo1[MCInst_getOpcode(MI)] << 32;
  MnemonicBitsInfo MBI = {
#ifndef CAPSTONE_DIET
    AsmStrs+(Bits & 8191)-1,
#else
    NULL,
#endif // CAPSTONE_DIET
    Bits
  };
  return MBI;
}

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void printInstruction(MCInst *MI, uint64_t Address, SStream *O) {
  SStream_concat0(O, "");
  MnemonicBitsInfo MnemonicInfo = getMnemonic(MI, O);

  SStream_concat0(O, MnemonicInfo.first);

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 6 bits for 43 unique commands.
  switch ((Bits >> 13) & 63) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_VALUE_LIST, DBG_INSTR_REF, DBG_PHI, DBG_LABEL, BUNDLE, ...
    return;
    break;
  case 1:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCri, ADCrr, ADDri, A...
    printSBitModifierOperand(MI, 5, O);
    printPredicateOperand(MI, 3, O);
    break;
  case 2:
    // ITasm, t2IT
    printThumbITMask(MI, 1, O);
    break;
  case 3:
    // LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDRT_POST, STRB...
    printPredicateOperand(MI, 2, O);
    break;
  case 4:
    // RRXi, MOVi, MOVr, MOVr_TC, MVNi, MVNr, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, O);
    printPredicateOperand(MI, 2, O);
    break;
  case 5:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printPredicateOperand(MI, 4, O);
    break;
  case 6:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printPredicateOperand(MI, 5, O);
    break;
  case 7:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printPredicateOperand(MI, 3, O);
    break;
  case 8:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, O);
    printPredicateOperand(MI, 4, O);
    break;
  case 9:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, O);
    printPredicateOperand(MI, 5, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printSORegRegOperand(MI, 2, O);
    return;
    break;
  case 10:
    // AESD, AESE, AESIMC, AESMC, BKPT, BLX, BX, CPS1p, CRC32B, CRC32CB, CRC3...
    printOperand(MI, 0, O);
    break;
  case 11:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS_VDOTD, BF16VDOTS_VDOTQ, MV...
    printOperand(MI, 1, O);
    break;
  case 12:
    // BL, BLXi, t2BFic, t2LE
    printOperandAddr(MI, Address, 0, O);
    break;
  case 13:
    // BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, FLDMXIA, FSTMXIA, HINT, LDM...
    printPredicateOperand(MI, 1, O);
    break;
  case 14:
    // BX_RET, ERET, FMSTAT, MOVPCLR, MVE_LCTP, VSCCLRMD, VSCCLRMS, t2AUTG, t...
    printPredicateOperand(MI, 0, O);
    break;
  case 15:
    // CDE_CX1, CDE_CX1D, CDE_CX2, CDE_CX2D, CDE_CX3, CDE_CX3D, CDE_VCX1A_fpd...
    printPImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 16:
    // CDE_CX3A, CDE_CX3DA, CDP, LDRD_POST, LDRD_PRE, MCR, MRC, MVE_SQRSHRL, ...
    printPredicateOperand(MI, 6, O);
    break;
  case 17:
    // CDE_VCX1A_vec, CDE_VCX2_vec, MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, ...
    printVPTPredicateOperand(MI, 4, O);
    break;
  case 18:
    // CDE_VCX1_vec, MVE_VABDf16, MVE_VABDf32, MVE_VABDs16, MVE_VABDs32, MVE_...
    printVPTPredicateOperand(MI, 3, O);
    break;
  case 19:
    // CDE_VCX2A_vec, CDE_VCX3_vec, MVE_VADC, MVE_VADDLVs32acc, MVE_VADDLVu32...
    printVPTPredicateOperand(MI, 5, O);
    break;
  case 20:
    // CDE_VCX3A_vec, MVE_VMLALDAVas16, MVE_VMLALDAVas32, MVE_VMLALDAVau16, M...
    printVPTPredicateOperand(MI, 6, O);
    break;
  case 21:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 22:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, O);
    break;
  case 23:
    // DMB, DSB
    printMemBOption(MI, 0, O);
    return;
    break;
  case 24:
    // ISB
    printInstSyncBOption(MI, 0, O);
    return;
    break;
  case 25:
    // MRRC2
    printPImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 26:
    // MVE_VABSf16, MVE_VABSf32, MVE_VABSs16, MVE_VABSs32, MVE_VABSs8, MVE_VA...
    printVPTPredicateOperand(MI, 2, O);
    break;
  case 27:
    // MVE_VLD20_16, MVE_VLD20_16_wb, MVE_VLD20_32, MVE_VLD20_32_wb, MVE_VLD2...
    printMVEVectorList_2(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 28:
    // MVE_VLD40_16, MVE_VLD40_16_wb, MVE_VLD40_32, MVE_VLD40_32_wb, MVE_VLD4...
    printMVEVectorList_4(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 29:
    // MVE_VPST, MVE_VPTv16i8, MVE_VPTv16i8r, MVE_VPTv16s8, MVE_VPTv16s8r, MV...
    printVPTMask(MI, 0, O);
    break;
  case 30:
    // MVE_VST20_16_wb, MVE_VST20_32_wb, MVE_VST20_8_wb, MVE_VST21_16_wb, MVE...
    printMVEVectorList_2(MI, 1, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 31:
    // MVE_VST40_16_wb, MVE_VST40_32_wb, MVE_VST40_8_wb, MVE_VST41_16_wb, MVE...
    printMVEVectorList_4(MI, 1, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 32:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand_0(MI, 0, O);
    return;
    break;
  case 33:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, O);
    return;
    break;
  case 34:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, O);
    return;
    break;
  case 35:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, O);
    printPredicateOperand(MI, 6, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 36:
    // TSB
    printTraceSyncBOption(MI, 0, O);
    return;
    break;
  case 37:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, O);
    break;
  case 38:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, O);
    break;
  case 39:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, O);
    break;
  case 40:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, O);
    break;
  case 41:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, O);
    break;
  case 42:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, O);
    break;
  }


  // Fragment 1 encoded into 7 bits for 88 unique commands.
  switch ((Bits >> 19) & 127) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, ITasm, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHT...
    SStream_concat1(O, ' ');
    break;
  case 1:
    // VLD1LNdAsm_16, VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_register_Asm_16, VLD2...
    SStream_concat0(O, ".16\t");
    break;
  case 2:
    // VLD1LNdAsm_32, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_register_Asm_32, VLD2...
    SStream_concat0(O, ".32\t");
    break;
  case 3:
    // VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_8, VLD1LNdWB_register_Asm_8, VLD2LNd...
    SStream_concat0(O, ".8\t");
    break;
  case 4:
    // t2LDR_POST_imm, t2LDR_PRE_imm, t2STR_POST_imm, t2STR_PRE_imm
    SStream_concat0(O, ".w ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 5:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    SStream_concat0(O, "\t");
    break;
  case 6:
    // AESD, AESE, AESIMC, AESMC, BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS...
    SStream_concat0(O, ", ");
    break;
  case 7:
    // BF16_VCVT, BF16_VCVTB, BF16_VCVTT
    SStream_concat0(O, ".bf16.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 8:
    // BKPT, BL, BLX, BLXi, BX, CPS1p, ERET, HLT, HVC, RFEDA, RFEDB, RFEIA, R...
    return;
    break;
  case 9:
    // BX_RET
    SStream_concat0(O, "\tlr");
    return;
    break;
  case 10:
    // CDE_CX1, CDE_CX2, CDE_CX3, CDE_VCX1A_fpdp, CDE_VCX1A_fpsp, CDE_VCX1_fp...
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 11:
    // CDE_CX1D, CDE_CX2D, CDE_CX3D
    printGPRPairOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    break;
  case 12:
    // CDP2, MCR2, MCRR2
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 13:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    SStream_concat0(O, ".f64\t");
    printOperand(MI, 0, O);
    break;
  case 14:
    // FCONSTH, MVE_VABDf16, MVE_VABSf16, MVE_VADD_qr_f16, MVE_VADDf16, MVE_V...
    SStream_concat0(O, ".f16\t");
    break;
  case 15:
    // FCONSTS, MVE_VABDf32, MVE_VABSf32, MVE_VADD_qr_f32, MVE_VADDf32, MVE_V...
    SStream_concat0(O, ".f32\t");
    break;
  case 16:
    // FMSTAT
    SStream_concat0(O, "\tAPSR_nzcv, fpscr");
    return;
    break;
  case 17:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 18:
    // MOVPCLR
    SStream_concat0(O, "\tpc, lr");
    return;
    break;
  case 19:
    // MRC2
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 20:
    // MVE_VABAVs16, MVE_VABDs16, MVE_VABSs16, MVE_VADDVs16acc, MVE_VADDVs16n...
    SStream_concat0(O, ".s16\t");
    break;
  case 21:
    // MVE_VABAVs32, MVE_VABDs32, MVE_VABSs32, MVE_VADDLVs32acc, MVE_VADDLVs3...
    SStream_concat0(O, ".s32\t");
    break;
  case 22:
    // MVE_VABAVs8, MVE_VABDs8, MVE_VABSs8, MVE_VADDVs8acc, MVE_VADDVs8no_acc...
    SStream_concat0(O, ".s8\t");
    break;
  case 23:
    // MVE_VABAVu16, MVE_VABDu16, MVE_VADDVu16acc, MVE_VADDVu16no_acc, MVE_VC...
    SStream_concat0(O, ".u16\t");
    break;
  case 24:
    // MVE_VABAVu32, MVE_VABDu32, MVE_VADDLVu32acc, MVE_VADDLVu32no_acc, MVE_...
    SStream_concat0(O, ".u32\t");
    break;
  case 25:
    // MVE_VABAVu8, MVE_VABDu8, MVE_VADDVu8acc, MVE_VADDVu8no_acc, MVE_VCMPu8...
    SStream_concat0(O, ".u8\t");
    break;
  case 26:
    // MVE_VADC, MVE_VADCI, MVE_VADD_qr_i32, MVE_VADDi32, MVE_VBICimmi32, MVE...
    SStream_concat0(O, ".i32\t");
    break;
  case 27:
    // MVE_VADD_qr_i16, MVE_VADDi16, MVE_VBICimmi16, MVE_VCADDi16, MVE_VCLZs1...
    SStream_concat0(O, ".i16\t");
    break;
  case 28:
    // MVE_VADD_qr_i8, MVE_VADDi8, MVE_VCADDi8, MVE_VCLZs8, MVE_VCMPi8, MVE_V...
    SStream_concat0(O, ".i8\t");
    break;
  case 29:
    // MVE_VCTP64, MVE_VSTRD64_qi, MVE_VSTRD64_qi_pre, MVE_VSTRD64_rq, MVE_VS...
    SStream_concat0(O, ".64\t");
    break;
  case 30:
    // MVE_VCVTf16f32bh, MVE_VCVTf16f32th, VCVTBSH, VCVTTSH, VCVTf2h
    SStream_concat0(O, ".f16.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 31:
    // MVE_VCVTf16s16_fix, MVE_VCVTf16s16n, VCVTs2hd, VCVTs2hq, VCVTxs2hd, VC...
    SStream_concat0(O, ".f16.s16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 32:
    // MVE_VCVTf16u16_fix, MVE_VCVTf16u16n, VCVTu2hd, VCVTu2hq, VCVTxu2hd, VC...
    SStream_concat0(O, ".f16.u16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 33:
    // MVE_VCVTf32f16bh, MVE_VCVTf32f16th, VCVTBHS, VCVTTHS, VCVTh2f
    SStream_concat0(O, ".f32.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 34:
    // MVE_VCVTf32s32_fix, MVE_VCVTf32s32n, VCVTs2fd, VCVTs2fq, VCVTxs2fd, VC...
    SStream_concat0(O, ".f32.s32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 35:
    // MVE_VCVTf32u32_fix, MVE_VCVTf32u32n, VCVTu2fd, VCVTu2fq, VCVTxu2fd, VC...
    SStream_concat0(O, ".f32.u32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 36:
    // MVE_VCVTs16f16_fix, MVE_VCVTs16f16a, MVE_VCVTs16f16m, MVE_VCVTs16f16n,...
    SStream_concat0(O, ".s16.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 37:
    // MVE_VCVTs32f32_fix, MVE_VCVTs32f32a, MVE_VCVTs32f32m, MVE_VCVTs32f32n,...
    SStream_concat0(O, ".s32.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 38:
    // MVE_VCVTu16f16_fix, MVE_VCVTu16f16a, MVE_VCVTu16f16m, MVE_VCVTu16f16n,...
    SStream_concat0(O, ".u16.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 39:
    // MVE_VCVTu32f32_fix, MVE_VCVTu32f32a, MVE_VCVTu32f32m, MVE_VCVTu32f32n,...
    SStream_concat0(O, ".u32.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 40:
    // MVE_VLD20_16, MVE_VLD20_32, MVE_VLD20_8, MVE_VLD21_16, MVE_VLD21_32, M...
    printAddrMode7Operand(MI, 2, O);
    return;
    break;
  case 41:
    // MVE_VLD20_16_wb, MVE_VLD20_32_wb, MVE_VLD20_8_wb, MVE_VLD21_16_wb, MVE...
    printAddrMode7Operand(MI, 3, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 42:
    // MVE_VLDRDU64_qi, MVE_VLDRDU64_qi_pre, MVE_VLDRDU64_rq, MVE_VLDRDU64_rq...
    SStream_concat0(O, ".u64\t");
    break;
  case 43:
    // MVE_VMOVimmi64, VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i...
    SStream_concat0(O, ".i64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 44:
    // MVE_VMULLBp16, MVE_VMULLTp16
    SStream_concat0(O, ".p16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 45:
    // MVE_VMULLBp8, MVE_VMULLTp8, VMULLp8, VMULpd, VMULpq
    SStream_concat0(O, ".p8\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 46:
    // MVE_VST20_16, MVE_VST20_32, MVE_VST20_8, MVE_VST21_16, MVE_VST21_32, M...
    printAddrMode7Operand(MI, 1, O);
    return;
    break;
  case 47:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    SStream_concat1(O, '!');
    return;
    break;
  case 48:
    // VCVTBDH, VCVTTDH
    SStream_concat0(O, ".f16.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 49:
    // VCVTBHD, VCVTTHD
    SStream_concat0(O, ".f64.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 50:
    // VCVTDS
    SStream_concat0(O, ".f64.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 51:
    // VCVTSD
    SStream_concat0(O, ".f32.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 52:
    // VJCVT, VTOSIRD, VTOSIZD, VTOSLD
    SStream_concat0(O, ".s32.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 53:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    SStream_concat0(O, ".16\t{");
    break;
  case 54:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    SStream_concat0(O, ".32\t{");
    break;
  case 55:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    SStream_concat0(O, ".8\t{");
    break;
  case 56:
    // VLDR_FPCXTNS_off, VLDR_FPCXTNS_post, VLDR_FPCXTNS_pre, VMSR_FPCXTNS, V...
    SStream_concat0(O, "\tfpcxtns, ");
    break;
  case 57:
    // VLDR_FPCXTS_off, VLDR_FPCXTS_post, VLDR_FPCXTS_pre, VMSR_FPCXTS, VSTR_...
    SStream_concat0(O, "\tfpcxts, ");
    break;
  case 58:
    // VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_NZCVQC_post, VLDR_FPSCR_NZCVQC_pre, ...
    SStream_concat0(O, "\tfpscr_nzcvqc, ");
    break;
  case 59:
    // VLDR_FPSCR_off, VLDR_FPSCR_post, VLDR_FPSCR_pre, VMSR, VSTR_FPSCR_off,...
    SStream_concat0(O, "\tfpscr, ");
    break;
  case 60:
    // VLDR_P0_off, VLDR_P0_post, VLDR_P0_pre, VMSR_P0, VSTR_P0_off, VSTR_P0_...
    SStream_concat0(O, "\tp0, ");
    break;
  case 61:
    // VLDR_VPR_off, VLDR_VPR_post, VLDR_VPR_pre, VMSR_VPR, VSTR_VPR_off, VST...
    SStream_concat0(O, "\tvpr, ");
    break;
  case 62:
    // VMSR_FPEXC
    SStream_concat0(O, "\tfpexc, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 63:
    // VMSR_FPINST
    SStream_concat0(O, "\tfpinst, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 64:
    // VMSR_FPINST2
    SStream_concat0(O, "\tfpinst2, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 65:
    // VMSR_FPSID
    SStream_concat0(O, "\tfpsid, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 66:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    SStream_concat0(O, ".s64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 67:
    // VSHTOD
    SStream_concat0(O, ".f64.s16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 68:
    // VSHTOS
    SStream_concat0(O, ".f32.s16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 69:
    // VSITOD, VSLTOD
    SStream_concat0(O, ".f64.s32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 70:
    // VSITOH, VSLTOH
    SStream_concat0(O, ".f16.s32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 71:
    // VTOSHD
    SStream_concat0(O, ".s16.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 72:
    // VTOSHS
    SStream_concat0(O, ".s16.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 73:
    // VTOSIRH, VTOSIZH, VTOSLH
    SStream_concat0(O, ".s32.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 74:
    // VTOUHD
    SStream_concat0(O, ".u16.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 75:
    // VTOUHS
    SStream_concat0(O, ".u16.f32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 76:
    // VTOUIRD, VTOUIZD, VTOULD
    SStream_concat0(O, ".u32.f64\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 77:
    // VTOUIRH, VTOUIZH, VTOULH
    SStream_concat0(O, ".u32.f16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 78:
    // VUHTOD
    SStream_concat0(O, ".f64.u16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 79:
    // VUHTOS
    SStream_concat0(O, ".f32.u16\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printFBits16(MI, 2, O);
    return;
    break;
  case 80:
    // VUITOD, VULTOD
    SStream_concat0(O, ".f64.u32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 81:
    // VUITOH, VULTOH
    SStream_concat0(O, ".f16.u32\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    break;
  case 82:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADDspImm, t2ADR, t2ANDr...
    SStream_concat0(O, ".w\t");
    break;
  case 83:
    // t2SRSDB, t2SRSIA
    SStream_concat0(O, "\tsp, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 84:
    // t2SRSDB_UPD, t2SRSIA_UPD
    SStream_concat0(O, "\tsp!, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 85:
    // t2SUBS_PC_LR
    SStream_concat0(O, "\tpc, lr, ");
    printOperand(MI, 0, O);
    return;
    break;
  case 86:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 87:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, O);
    SStream_concat0(O, "\t");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    break;
  }


  // Fragment 2 encoded into 7 bits for 70 unique commands.
  switch ((Bits >> 26) & 127) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDR...
    printOperand(MI, 0, O);
    break;
  case 1:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, O);
    return;
    break;
  case 2:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 3:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printVectorListThree(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 5:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 6:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 7:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 8:
    // VLD4dAsm_16, VLD4dAsm_32, VLD4dAsm_8, VLD4dWB_fixed_Asm_16, VLD4dWB_fi...
    printVectorListFour(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 9:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    break;
  case 10:
    // t2LDR_POST_imm, t2STR_POST_imm, VLDR_FPCXTNS_post, VLDR_FPCXTS_post, V...
    printAddrMode7Operand(MI, 1, O);
    break;
  case 11:
    // t2LDR_PRE_imm, t2STR_PRE_imm
    printT2AddrModeImm8Operand_1(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 12:
    // AESD, AESE, BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS_VDOTD, BF16VDO...
    printOperand(MI, 2, O);
    break;
  case 13:
    // AESIMC, AESMC, BF16_VCVT, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, C...
    printOperand(MI, 1, O);
    break;
  case 14:
    // BL_pred, Bcc, t2B, t2BFLi, t2BFLr, t2BFi, t2BFr, t2Bcc, tB, tBcc
    printOperandAddr(MI, Address, 0, O);
    break;
  case 15:
    // CDE_CX1A, CDE_CX1DA, CDE_CX2A, CDE_CX2DA, CDE_CX3A, CDE_CX3DA, CDE_VCX...
    printPImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 16:
    // CDE_CX1D, MVE_LCTP, MVE_VCVTf16s16n, MVE_VCVTf16u16n, MVE_VCVTf32s32n,...
    return;
    break;
  case 17:
    // CDE_CX2D, CDE_CX3D, FCONSTD, MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, M...
    SStream_concat0(O, ", ");
    break;
  case 18:
    // CDE_VCX1A_fpdp, CDE_VCX1A_fpsp, CDE_VCX2A_fpdp, CDE_VCX2A_fpsp, CDE_VC...
    printOperand(MI, 3, O);
    break;
  case 19:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 20:
    // CDP2
    printCImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 21:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, O);
    break;
  case 22:
    // LDAEXD, LDREXD
    printGPRPairOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 1, O);
    return;
    break;
  case 23:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand_0(MI, 2, O);
    return;
    break;
  case 24:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, O);
    break;
  case 25:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 26:
    // MRRC, t2MRRC, t2MRRC2
    printPImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 27:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 28:
    // MSRbanked, t2MSRbanked
    printBankedRegOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 29:
    // MVE_LETP, t2LEUpdate, tBL, tBLXi
    printOperandAddr(MI, Address, 2, O);
    return;
    break;
  case 30:
    // MVE_VCMPf16, MVE_VCMPf16r, MVE_VCMPf32, MVE_VCMPf32r, MVE_VCMPi16, MVE...
    printMandatoryRestrictedPredicateOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 31:
    // MVE_VMOVimmi64, VMOVv1i64, VMOVv2i64
    printVMOVModImmOperand(MI, 1, O);
    return;
    break;
  case 32:
    // VCMPEZD, VCMPZD, tRSB
    SStream_concat0(O, ", #0");
    return;
    break;
  case 33:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 34:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 35:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 36:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 37:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 38:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 39:
    // VLDR_FPCXTNS_off, VLDR_FPCXTS_off, VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_o...
    printT2AddrModeImm8s4Operand_0(MI, 0, O);
    return;
    break;
  case 40:
    // VLDR_FPCXTNS_pre, VLDR_FPCXTS_pre, VLDR_FPSCR_NZCVQC_pre, VLDR_FPSCR_p...
    printT2AddrModeImm8s4Operand_1(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 41:
    // VLDR_P0_off, VSTR_P0_off
    printT2AddrModeImm8s4Operand_0(MI, 1, O);
    return;
    break;
  case 42:
    // VLDR_P0_pre, VSTR_P0_pre
    printT2AddrModeImm8s4Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 43:
    // VSCCLRMD, VSCCLRMS, t2CLRM, tPOP, tPUSH
    printRegisterList(MI, 2, O);
    return;
    break;
  case 44:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, O);
    break;
  case 45:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 46:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 47:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 48:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 49:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 50:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 51:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 52:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 53:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 54:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 55:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 56:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 57:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 58:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 59:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, O);
    SStream_concat0(O, ", ");
    printAddrMode6Operand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 60:
    // t2BFic, tCBNZ, tCBZ
    printOperandAddr(MI, Address, 1, O);
    break;
  case 61:
    // t2DMB, t2DSB
    printMemBOption(MI, 0, O);
    return;
    break;
  case 62:
    // t2ISB
    printInstSyncBOption(MI, 0, O);
    return;
    break;
  case 63:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand_0(MI, 0, O);
    return;
    break;
  case 64:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand_0(MI, 0, O);
    return;
    break;
  case 65:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, O);
    return;
    break;
  case 66:
    // t2PLDpci, t2PLIpci
    printThumbLdrLabelOperand(MI, 0, O);
    return;
    break;
  case 67:
    // t2TBB
    printAddrModeTBB(MI, 0, O);
    return;
    break;
  case 68:
    // t2TBH
    printAddrModeTBH(MI, 0, O);
    return;
    break;
  case 69:
    // t2TSB
    printTraceSyncBOption(MI, 0, O);
    return;
    break;
  }


  // Fragment 3 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 33) & 63) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDR...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPqAsm_16, VLD3DUP...
    return;
    break;
  case 2:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    SStream_concat1(O, '!');
    return;
    break;
  case 3:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printAddrMode6Operand(MI, 1, O);
    break;
  case 4:
    // CDE_CX1A, CDE_CX2A, CDE_CX3A, CDE_VCX1A_vec, CDE_VCX1_vec, CDE_VCX2A_v...
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    break;
  case 5:
    // CDE_CX1DA, CDE_CX2DA, CDE_CX3DA
    printGPRPairOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    break;
  case 6:
    // CDE_CX2D, CDE_CX3D
    printOperand(MI, 3, O);
    break;
  case 7:
    // CDP, MCR, MCRR, MSR, VABSD, VADDD, VCMPD, VCMPED, VDIVD, VMOVD, VMULD,...
    printOperand(MI, 1, O);
    break;
  case 8:
    // FCONSTD
    printFPImmOperand(MI, 1, O);
    return;
    break;
  case 9:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    SStream_concat0(O, "!, ");
    printRegisterList(MI, 4, O);
    break;
  case 10:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, O);
    SStream_concat0(O, ", ");
    break;
  case 11:
    // MRC, MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, MVE_VCVTf32s32_fix, MVE_V...
    printOperand(MI, 2, O);
    break;
  case 12:
    // MRS, t2MRS_AR
    SStream_concat0(O, ", apsr");
    return;
    break;
  case 13:
    // MRSsys, t2MRSsys_AR
    SStream_concat0(O, ", spsr");
    return;
    break;
  case 14:
    // MSRi
    printModImmOperand(MI, 1, O);
    return;
    break;
  case 15:
    // MVE_VMOV_q_rr
    printVectorIndex(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    printVectorIndex(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 16:
    // MVE_VMOV_to_lane_16, MVE_VMOV_to_lane_32, MVE_VMOV_to_lane_8, VSETLNi1...
    printVectorIndex(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 17:
    // VCMPEZH, VCMPEZS, VCMPZH, VCMPZS
    SStream_concat0(O, ", #0");
    return;
    break;
  case 18:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, O);
    break;
  case 19:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    SStream_concat1(O, '[');
    break;
  case 20:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    SStream_concat0(O, "[], ");
    printOperand(MI, 1, O);
    SStream_concat0(O, "[], ");
    printOperand(MI, 2, O);
    break;
  case 21:
    // VLDR_FPCXTNS_post, VLDR_FPCXTS_post, VLDR_FPSCR_NZCVQC_post, VLDR_FPSC...
    printT2AddrModeImm8s4OffsetOperand(MI, 2, O);
    return;
    break;
  case 22:
    // VLDR_P0_post, VSTR_P0_post
    printT2AddrModeImm8s4OffsetOperand(MI, 3, O);
    return;
    break;
  case 23:
    // VMRS
    SStream_concat0(O, ", fpscr");
    return;
    break;
  case 24:
    // VMRS_FPCXTNS
    SStream_concat0(O, ", fpcxtns");
    return;
    break;
  case 25:
    // VMRS_FPCXTS
    SStream_concat0(O, ", fpcxts");
    return;
    break;
  case 26:
    // VMRS_FPEXC
    SStream_concat0(O, ", fpexc");
    return;
    break;
  case 27:
    // VMRS_FPINST
    SStream_concat0(O, ", fpinst");
    return;
    break;
  case 28:
    // VMRS_FPINST2
    SStream_concat0(O, ", fpinst2");
    return;
    break;
  case 29:
    // VMRS_FPSCR_NZCVQC
    SStream_concat0(O, ", fpscr_nzcvqc");
    return;
    break;
  case 30:
    // VMRS_FPSID
    SStream_concat0(O, ", fpsid");
    return;
    break;
  case 31:
    // VMRS_MVFR0
    SStream_concat0(O, ", mvfr0");
    return;
    break;
  case 32:
    // VMRS_MVFR1
    SStream_concat0(O, ", mvfr1");
    return;
    break;
  case 33:
    // VMRS_MVFR2
    SStream_concat0(O, ", mvfr2");
    return;
    break;
  case 34:
    // VMRS_P0
    SStream_concat0(O, ", p0");
    return;
    break;
  case 35:
    // VMRS_VPR
    SStream_concat0(O, ", vpr");
    return;
    break;
  case 36:
    // VSHTOH, VTOSHH, VTOUHH, VUHTOH
    printFBits16(MI, 2, O);
    return;
    break;
  case 37:
    // VSLTOD, VSLTOH, VSLTOS, VTOSLD, VTOSLH, VTOSLS, VTOULD, VTOULH, VTOULS...
    printFBits32(MI, 2, O);
    return;
    break;
  }


  // Fragment 4 encoded into 7 bits for 78 unique commands.
  switch ((Bits >> 39) & 127) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRConstPool, LSLi, LSLr, LSRi, LSRr, RORi, RORr, RRXi, t2...
    printOperand(MI, 1, O);
    break;
  case 1:
    // LDRBT_POST, LDRHTii, LDRSBTii, LDRSHTii, LDRT_POST, STRBT_POST, STRT_P...
    printAddrMode7Operand(MI, 1, O);
    return;
    break;
  case 2:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, O);
    break;
  case 3:
    // VLD3DUPdWB_register_Asm_16, VLD3DUPdWB_register_Asm_32, VLD3DUPdWB_reg...
    printOperand(MI, 3, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD4dAsm_16, VLD4dAsm_32, VLD4dA...
    return;
    break;
  case 5:
    // VLD3dWB_fixed_Asm_16, VLD3dWB_fixed_Asm_32, VLD3dWB_fixed_Asm_8, VLD4d...
    SStream_concat1(O, '!');
    return;
    break;
  case 6:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    SStream_concat0(O, ", ");
    break;
  case 7:
    // t2LDR_POST_imm, t2STR_POST_imm
    printT2AddrModeImm8OffsetOperand(MI, 2, O);
    return;
    break;
  case 8:
    // t2MOVSsi, t2MOVsi, t2CMNzrs, t2CMPrs, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, O);
    return;
    break;
  case 9:
    // t2MOVSsr, t2MOVsr, CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr
    printSORegRegOperand(MI, 1, O);
    return;
    break;
  case 10:
    // ADR, t2ADR
    printAdrLabelOperand_0(MI, 1, O);
    return;
    break;
  case 11:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, O);
    return;
    break;
  case 12:
    // BFI, CDE_VCX1_vec, CDE_VCX2_vec, CDE_VCX3_vec, CPS3p, CRC32B, CRC32CB,...
    printOperand(MI, 2, O);
    break;
  case 13:
    // CDE_VCX2A_fpdp, CDE_VCX2A_fpsp, CDE_VCX3A_fpdp, CDE_VCX3A_fpsp
    printOperand(MI, 4, O);
    break;
  case 14:
    // CMNri, CMPri, MOVi, MVNi, TEQri, TSTri
    printModImmOperand(MI, 1, O);
    return;
    break;
  case 15:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, O);
    return;
    break;
  case 16:
    // FCONSTH, FCONSTS, MVE_VMOVimmf32, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, O);
    return;
    break;
  case 17:
    // FLDMXIA, FSTMXIA, LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STM...
    printRegisterList(MI, 3, O);
    break;
  case 18:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, O);
    return;
    break;
  case 19:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, O);
    return;
    break;
  case 20:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand_0(MI, 2, O);
    return;
    break;
  case 21:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, O);
    break;
  case 22:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE, t2LDC2L_PRE, t2LDC2_PRE, t2LDCL_...
    printAddrMode5Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 23:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 24:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 25:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand_0(MI, 1, O);
    return;
    break;
  case 26:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, O);
    return;
    break;
  case 27:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand_0(MI, 1, O);
    return;
    break;
  case 28:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 29:
    // MCR2
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 30:
    // MRSbanked, t2MRSbanked
    printBankedRegOperand(MI, 1, O);
    return;
    break;
  case 31:
    // MVE_VBICimmi16, MVE_VBICimmi32, MVE_VORRimmi16, MVE_VORRimmi32
    printVMOVModImmOperand(MI, 2, O);
    return;
    break;
  case 32:
    // MVE_VLDRBS16, MVE_VLDRBS32, MVE_VLDRBU16, MVE_VLDRBU32, MVE_VLDRBU8, M...
    printT2AddrModeImm8Operand_0(MI, 1, O);
    return;
    break;
  case 33:
    // MVE_VLDRBS16_pre, MVE_VLDRBS32_pre, MVE_VLDRBU16_pre, MVE_VLDRBU32_pre...
    printT2AddrModeImm8Operand_0(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 34:
    // MVE_VLDRBS16_rq, MVE_VLDRBS32_rq, MVE_VLDRBU16_rq, MVE_VLDRBU32_rq, MV...
    printMveAddrModeRQOperand_0(MI, 1, O);
    return;
    break;
  case 35:
    // MVE_VLDRBU8_pre, MVE_VLDRHU16_pre, MVE_VLDRWU32_pre, MVE_VSTRBU8_pre, ...
    printT2AddrModeImm8Operand_1(MI, 2, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 36:
    // MVE_VLDRDU64_rq, MVE_VSTRD64_rq
    printMveAddrModeRQOperand_3(MI, 1, O);
    return;
    break;
  case 37:
    // MVE_VLDRHS32_rq, MVE_VLDRHU16_rq, MVE_VLDRHU32_rq, MVE_VSTRH16_rq, MVE...
    printMveAddrModeRQOperand_1(MI, 1, O);
    return;
    break;
  case 38:
    // MVE_VLDRWU32_rq, MVE_VSTRW32_rq
    printMveAddrModeRQOperand_2(MI, 1, O);
    return;
    break;
  case 39:
    // MVE_VMOVimmi16, MVE_VMOVimmi32, MVE_VMOVimmi8, MVE_VMVNimmi16, MVE_VMV...
    printVMOVModImmOperand(MI, 1, O);
    return;
    break;
  case 40:
    // MVE_WLSTP_16, MVE_WLSTP_32, MVE_WLSTP_64, MVE_WLSTP_8, t2BFic, t2WLS
    printOperandAddr(MI, Address, 2, O);
    break;
  case 41:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    break;
  case 42:
    // STLEXD, STREXD
    printGPRPairOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printAddrMode7Operand(MI, 2, O);
    return;
    break;
  case 43:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, O);
    break;
  case 44:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, O);
    break;
  case 45:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    break;
  case 46:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    SStream_concat0(O, "[]}, ");
    break;
  case 47:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 1, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 2, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 10, O);
    break;
  case 48:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    SStream_concat0(O, "[], ");
    printOperand(MI, 3, O);
    SStream_concat0(O, "[]}, ");
    break;
  case 49:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 1, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 2, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 3, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 12, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
    break;
  case 50:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand_0(MI, 1, O);
    return;
    break;
  case 51:
    // VLDRH, VSTRH
    printAddrMode5FP16Operand_0(MI, 1, O);
    return;
    break;
  case 52:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case 53:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, O);
    break;
  case 54:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 5, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 6, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 7, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 55:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 6, O);
    break;
  case 56:
    // VTBL1
    printVectorListOne(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 57:
    // VTBL2
    printVectorListTwo(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 58:
    // VTBL3
    printVectorListThree(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 59:
    // VTBL4
    printVectorListFour(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 60:
    // VTBX1
    printVectorListOne(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 61:
    // VTBX2
    printVectorListTwo(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 62:
    // VTBX3
    printVectorListThree(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 63:
    // VTBX4
    printVectorListFour(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 64:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    SStream_concat0(O, " ^");
    return;
    break;
  case 65:
    // t2BFLi, t2BFi
    printOperandAddr(MI, Address, 1, O);
    return;
    break;
  case 66:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci, tLDRpci
    printThumbLdrLabelOperand(MI, 1, O);
    return;
    break;
  case 67:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, O);
    return;
    break;
  case 68:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, O);
    return;
    break;
  case 69:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, O);
    return;
    break;
  case 70:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, O);
    return;
    break;
  case 71:
    // tADR
    printAdrLabelOperandAddr_2(MI, Address, 1, O);
    return;
    break;
  case 72:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, O);
    return;
    break;
  case 73:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, O);
    return;
    break;
  case 74:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, O);
    return;
    break;
  case 75:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, O);
    return;
    break;
  case 76:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, O);
    return;
    break;
  case 77:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 27 unique commands.
  switch ((Bits >> 46) & 31) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // LDRConstPool, RRXi, VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD2LN...
    return;
    break;
  case 2:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    SStream_concat1(O, '!');
    return;
    break;
  case 3:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    printOperand(MI, 3, O);
    return;
    break;
  case 4:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, VBF16MALBQI, VBF16MALTQI, VCMLAv2f32...
    printVectorIndex(MI, 4, O);
    break;
  case 5:
    // CDE_CX2DA, CDE_CX3D, CDE_CX3DA, VLD1DUPd16wb_register, VLD1DUPd32wb_re...
    printOperand(MI, 4, O);
    break;
  case 6:
    // CDP, t2CDP, t2CDP2
    printCImmediate(MI, 2, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 7:
    // MCR, MCRR, VADDD, VDIVD, VMULD, VNMULD, VSUBD, t2MCR, t2MCR2, t2MCRR, ...
    printOperand(MI, 2, O);
    break;
  case 8:
    // MRC, t2MRC, t2MRC2
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 9:
    // MVE_VLDRBS16_post, MVE_VLDRBS32_post, MVE_VLDRBU16_post, MVE_VLDRBU32_...
    printT2AddrModeImm8OffsetOperand(MI, 3, O);
    return;
    break;
  case 10:
    // MVE_VMOV_from_lane_32, MVE_VMOV_from_lane_s16, MVE_VMOV_from_lane_s8, ...
    printVectorIndex(MI, 2, O);
    return;
    break;
  case 11:
    // MVE_VSHLL_lws16bh, MVE_VSHLL_lws16th, MVE_VSHLL_lwu16bh, MVE_VSHLL_lwu...
    SStream_concat0(O, ", #16");
    return;
    break;
  case 12:
    // MVE_VSHLL_lws8bh, MVE_VSHLL_lws8th, MVE_VSHLL_lwu8bh, MVE_VSHLL_lwu8th
    SStream_concat0(O, ", #8");
    return;
    break;
  case 13:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, O);
    return;
    break;
  case 14:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, O);
    return;
    break;
  case 15:
    // VCEQzv16i8, VCEQzv2f32, VCEQzv2i32, VCEQzv4f16, VCEQzv4f32, VCEQzv4i16...
    SStream_concat0(O, ", #0");
    return;
    break;
  case 16:
    // VFMALDI, VFMALQI, VFMSLDI, VFMSLQI
    printVectorIndex(MI, 3, O);
    return;
    break;
  case 17:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    SStream_concat0(O, "]}, ");
    break;
  case 18:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    SStream_concat0(O, "], ");
    break;
  case 19:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printOperand(MI, 1, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 8, O);
    break;
  case 20:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, O);
    return;
    break;
  case 21:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, O);
    break;
  case 22:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
    break;
  case 23:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 24:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 6, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 7, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 25:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    SStream_concat0(O, " ^");
    return;
    break;
  case 26:
    // t2MOVsra_flag, t2MOVsrl_flag
    SStream_concat0(O, ", #1");
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 51) & 63) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCrr, ADDrr, ANDrr, B...
    printOperand(MI, 2, O);
    break;
  case 1:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, O);
    break;
  case 2:
    // ADCri, ADDri, ANDri, BICri, EORri, ORRri, RSBri, RSCri, SBCri, SUBri
    printModImmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, O);
    return;
    break;
  case 4:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, CDE_CX2DA, CDE_CX3D, VADDD, VBF16MAL...
    return;
    break;
  case 5:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, O);
    return;
    break;
  case 6:
    // CDE_CX3DA, MCR, MCRR, VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f...
    SStream_concat0(O, ", ");
    break;
  case 7:
    // CDE_VCX2_vec, CDE_VCX3_vec, MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, M...
    printOperand(MI, 3, O);
    break;
  case 8:
    // CDE_VCX3A_fpdp, CDE_VCX3A_fpsp, VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8...
    printOperand(MI, 5, O);
    break;
  case 9:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, O);
    return;
    break;
  case 10:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, O);
    return;
    break;
  case 11:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, O);
    return;
    break;
  case 12:
    // LDRD, STRD
    printAddrMode3Operand_0(MI, 2, O);
    return;
    break;
  case 13:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, O);
    break;
  case 14:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand_1(MI, 3, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 15:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, O);
    return;
    break;
  case 16:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, O);
    return;
    break;
  case 17:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, O);
    return;
    break;
  case 18:
    // MCRR2
    printCImmediate(MI, 4, O);
    return;
    break;
  case 19:
    // MVE_SQRSHRL, MVE_UQRSHLL
    printMveSaturateOp(MI, 5, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 4, O);
    return;
    break;
  case 20:
    // STLEX, STLEXB, STLEXH, STREX, STREXB, STREXH, SWP, SWPB, t2LDAEXD, t2L...
    printAddrMode7Operand(MI, 2, O);
    return;
    break;
  case 21:
    // VCADDv2f32, VCADDv4f16, VCADDv4f32, VCADDv8f16
    printComplexRotationOp_180_90(MI, 3, O);
    return;
    break;
  case 22:
    // VCMLAv2f32, VCMLAv4f16, VCMLAv4f32, VCMLAv8f16
    printComplexRotationOp_90_0(MI, 4, O);
    return;
    break;
  case 23:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, O);
    break;
  case 24:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, O);
    printAddrMode6OffsetOperand(MI, 4, O);
    return;
    break;
  case 25:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 2, O);
    return;
    break;
  case 26:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 3, O);
    printAddrMode6OffsetOperand(MI, 5, O);
    return;
    break;
  case 27:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case 28:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    SStream_concat0(O, "], ");
    printOperand(MI, 2, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 8, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 3, O);
    return;
    break;
  case 29:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, O);
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case 30:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 31:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, O);
    return;
    break;
  case 32:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, O);
    return;
    break;
  case 33:
    // t2BFic, t2CSEL, t2CSINC, t2CSINV, t2CSNEG
    printMandatoryPredicateOperand(MI, 3, O);
    return;
    break;
  case 34:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand_1(MI, 3, O);
    SStream_concat1(O, '!');
    return;
    break;
  case 35:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand_0(MI, 2, O);
    return;
    break;
  case 36:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, O);
    return;
    break;
  case 37:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 7 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 57) & 15) {
  default: assert(0 && "Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    return;
    break;
  case 1:
    // CDE_CX3A, CDE_VCX3A_vec, CDE_VCX3_vec, LDRD_POST, MLA, MLS, MVE_VCADDf...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // CDE_CX3DA
    printOperand(MI, 5, O);
    return;
    break;
  case 3:
    // MCR, t2MCR, t2MCR2
    printCImmediate(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 5, O);
    return;
    break;
  case 4:
    // MCRR, t2MCRR, t2MCRR2
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printCImmediate(MI, 4, O);
    return;
    break;
  case 5:
    // MVE_VMOV_rr_q, VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4...
    printVectorIndex(MI, 3, O);
    break;
  case 6:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, O);
    return;
    break;
  case 7:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, O);
    return;
    break;
  case 8:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, O);
    return;
    break;
  case 9:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, O);
    return;
    break;
  case 10:
    // VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed, VCMLAv8f16...
    printComplexRotationOp_90_0(MI, 5, O);
    return;
    break;
  case 11:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    SStream_concat0(O, "}, ");
    break;
  case 12:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    SStream_concat1(O, '[');
    break;
  case 13:
    // VMLALslsv2i32, VMLALslsv4i16, VMLALsluv2i32, VMLALsluv4i16, VMLAslfd, ...
    printVectorIndex(MI, 4, O);
    return;
    break;
  case 14:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case 15:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, O);
    return;
    break;
  }

  switch (MCInst_getOpcode(MI)) {
  default: assert(0 && "Unexpected opcode.");
  case ARM_CDE_CX3A:
  case ARM_CDE_VCX3A_vec:
  case ARM_CDE_VCX3_vec:
  case ARM_LDRD_POST:
  case ARM_MLA:
  case ARM_MLS:
  case ARM_MVE_VCADDf16:
  case ARM_MVE_VCADDf32:
  case ARM_MVE_VCADDi16:
  case ARM_MVE_VCADDi32:
  case ARM_MVE_VCADDi8:
  case ARM_MVE_VCMLAf16:
  case ARM_MVE_VCMLAf32:
  case ARM_MVE_VCMULf16:
  case ARM_MVE_VCMULf32:
  case ARM_MVE_VDWDUPu16:
  case ARM_MVE_VDWDUPu32:
  case ARM_MVE_VDWDUPu8:
  case ARM_MVE_VHCADDs16:
  case ARM_MVE_VHCADDs32:
  case ARM_MVE_VHCADDs8:
  case ARM_MVE_VIWDUPu16:
  case ARM_MVE_VIWDUPu32:
  case ARM_MVE_VIWDUPu8:
  case ARM_MVE_VMLALDAVas16:
  case ARM_MVE_VMLALDAVas32:
  case ARM_MVE_VMLALDAVau16:
  case ARM_MVE_VMLALDAVau32:
  case ARM_MVE_VMLALDAVaxs16:
  case ARM_MVE_VMLALDAVaxs32:
  case ARM_MVE_VMLALDAVs16:
  case ARM_MVE_VMLALDAVs32:
  case ARM_MVE_VMLALDAVu16:
  case ARM_MVE_VMLALDAVu32:
  case ARM_MVE_VMLALDAVxs16:
  case ARM_MVE_VMLALDAVxs32:
  case ARM_MVE_VMLSLDAVas16:
  case ARM_MVE_VMLSLDAVas32:
  case ARM_MVE_VMLSLDAVaxs16:
  case ARM_MVE_VMLSLDAVaxs32:
  case ARM_MVE_VMLSLDAVs16:
  case ARM_MVE_VMLSLDAVs32:
  case ARM_MVE_VMLSLDAVxs16:
  case ARM_MVE_VMLSLDAVxs32:
  case ARM_MVE_VRMLALDAVHas32:
  case ARM_MVE_VRMLALDAVHau32:
  case ARM_MVE_VRMLALDAVHaxs32:
  case ARM_MVE_VRMLALDAVHs32:
  case ARM_MVE_VRMLALDAVHu32:
  case ARM_MVE_VRMLALDAVHxs32:
  case ARM_MVE_VRMLSLDAVHas32:
  case ARM_MVE_VRMLSLDAVHaxs32:
  case ARM_MVE_VRMLSLDAVHs32:
  case ARM_MVE_VRMLSLDAVHxs32:
  case ARM_SBFX:
  case ARM_SMLABB:
  case ARM_SMLABT:
  case ARM_SMLAD:
  case ARM_SMLADX:
  case ARM_SMLALBB:
  case ARM_SMLALBT:
  case ARM_SMLALD:
  case ARM_SMLALDX:
  case ARM_SMLALTB:
  case ARM_SMLALTT:
  case ARM_SMLATB:
  case ARM_SMLATT:
  case ARM_SMLAWB:
  case ARM_SMLAWT:
  case ARM_SMLSD:
  case ARM_SMLSDX:
  case ARM_SMLSLD:
  case ARM_SMLSLDX:
  case ARM_SMMLA:
  case ARM_SMMLAR:
  case ARM_SMMLS:
  case ARM_SMMLSR:
  case ARM_SMULL:
  case ARM_STRD_POST:
  case ARM_UBFX:
  case ARM_UMAAL:
  case ARM_UMULL:
  case ARM_USADA8:
  case ARM_VEXTd16:
  case ARM_VEXTd32:
  case ARM_VEXTd8:
  case ARM_VEXTq16:
  case ARM_VEXTq32:
  case ARM_VEXTq64:
  case ARM_VEXTq8:
  case ARM_VLD3d16:
  case ARM_VLD3d32:
  case ARM_VLD3d8:
  case ARM_VLD3q16:
  case ARM_VLD3q32:
  case ARM_VLD3q8:
  case ARM_VMOVRRS:
  case ARM_VMOVSRR:
  case ARM_VST3d16:
  case ARM_VST3d32:
  case ARM_VST3d8:
  case ARM_VST3q16:
  case ARM_VST3q32:
  case ARM_VST3q8:
  case ARM_t2MLA:
  case ARM_t2MLS:
  case ARM_t2SBFX:
  case ARM_t2SMLABB:
  case ARM_t2SMLABT:
  case ARM_t2SMLAD:
  case ARM_t2SMLADX:
  case ARM_t2SMLAL:
  case ARM_t2SMLALBB:
  case ARM_t2SMLALBT:
  case ARM_t2SMLALD:
  case ARM_t2SMLALDX:
  case ARM_t2SMLALTB:
  case ARM_t2SMLALTT:
  case ARM_t2SMLATB:
  case ARM_t2SMLATT:
  case ARM_t2SMLAWB:
  case ARM_t2SMLAWT:
  case ARM_t2SMLSD:
  case ARM_t2SMLSDX:
  case ARM_t2SMLSLD:
  case ARM_t2SMLSLDX:
  case ARM_t2SMMLA:
  case ARM_t2SMMLAR:
  case ARM_t2SMMLS:
  case ARM_t2SMMLSR:
  case ARM_t2SMULL:
  case ARM_t2STLEXD:
  case ARM_t2STREXD:
  case ARM_t2UBFX:
  case ARM_t2UMAAL:
  case ARM_t2UMLAL:
  case ARM_t2UMULL:
  case ARM_t2USADA8:
    switch (MCInst_getOpcode(MI)) {
    default: assert(0 && "Unexpected opcode.");
    case ARM_CDE_CX3A:
    case ARM_CDE_VCX3A_vec:
    case ARM_MVE_VMLALDAVas16:
    case ARM_MVE_VMLALDAVas32:
    case ARM_MVE_VMLALDAVau16:
    case ARM_MVE_VMLALDAVau32:
    case ARM_MVE_VMLALDAVaxs16:
    case ARM_MVE_VMLALDAVaxs32:
    case ARM_MVE_VMLSLDAVas16:
    case ARM_MVE_VMLSLDAVas32:
    case ARM_MVE_VMLSLDAVaxs16:
    case ARM_MVE_VMLSLDAVaxs32:
    case ARM_MVE_VRMLALDAVHas32:
    case ARM_MVE_VRMLALDAVHau32:
    case ARM_MVE_VRMLALDAVHaxs32:
    case ARM_MVE_VRMLSLDAVHas32:
    case ARM_MVE_VRMLSLDAVHaxs32:
      printOperand(MI, 5, O);
      break;
    case ARM_CDE_VCX3_vec:
    case ARM_MVE_VDWDUPu16:
    case ARM_MVE_VDWDUPu32:
    case ARM_MVE_VDWDUPu8:
    case ARM_MVE_VIWDUPu16:
    case ARM_MVE_VIWDUPu32:
    case ARM_MVE_VIWDUPu8:
      printOperand(MI, 4, O);
      break;
    case ARM_LDRD_POST:
    case ARM_STRD_POST:
      printAddrMode3OffsetOperand(MI, 4, O);
      break;
    case ARM_MLA:
    case ARM_MLS:
    case ARM_MVE_VMLALDAVs16:
    case ARM_MVE_VMLALDAVs32:
    case ARM_MVE_VMLALDAVu16:
    case ARM_MVE_VMLALDAVu32:
    case ARM_MVE_VMLALDAVxs16:
    case ARM_MVE_VMLALDAVxs32:
    case ARM_MVE_VMLSLDAVs16:
    case ARM_MVE_VMLSLDAVs32:
    case ARM_MVE_VMLSLDAVxs16:
    case ARM_MVE_VMLSLDAVxs32:
    case ARM_MVE_VRMLALDAVHs32:
    case ARM_MVE_VRMLALDAVHu32:
    case ARM_MVE_VRMLALDAVHxs32:
    case ARM_MVE_VRMLSLDAVHs32:
    case ARM_MVE_VRMLSLDAVHxs32:
    case ARM_SMLABB:
    case ARM_SMLABT:
    case ARM_SMLAD:
    case ARM_SMLADX:
    case ARM_SMLALBB:
    case ARM_SMLALBT:
    case ARM_SMLALD:
    case ARM_SMLALDX:
    case ARM_SMLALTB:
    case ARM_SMLALTT:
    case ARM_SMLATB:
    case ARM_SMLATT:
    case ARM_SMLAWB:
    case ARM_SMLAWT:
    case ARM_SMLSD:
    case ARM_SMLSDX:
    case ARM_SMLSLD:
    case ARM_SMLSLDX:
    case ARM_SMMLA:
    case ARM_SMMLAR:
    case ARM_SMMLS:
    case ARM_SMMLSR:
    case ARM_SMULL:
    case ARM_UMAAL:
    case ARM_UMULL:
    case ARM_USADA8:
    case ARM_VEXTd16:
    case ARM_VEXTd32:
    case ARM_VEXTd8:
    case ARM_VEXTq16:
    case ARM_VEXTq32:
    case ARM_VEXTq64:
    case ARM_VEXTq8:
    case ARM_VMOVRRS:
    case ARM_VMOVSRR:
    case ARM_t2MLA:
    case ARM_t2MLS:
    case ARM_t2SMLABB:
    case ARM_t2SMLABT:
    case ARM_t2SMLAD:
    case ARM_t2SMLADX:
    case ARM_t2SMLAL:
    case ARM_t2SMLALBB:
    case ARM_t2SMLALBT:
    case ARM_t2SMLALD:
    case ARM_t2SMLALDX:
    case ARM_t2SMLALTB:
    case ARM_t2SMLALTT:
    case ARM_t2SMLATB:
    case ARM_t2SMLATT:
    case ARM_t2SMLAWB:
    case ARM_t2SMLAWT:
    case ARM_t2SMLSD:
    case ARM_t2SMLSDX:
    case ARM_t2SMLSLD:
    case ARM_t2SMLSLDX:
    case ARM_t2SMMLA:
    case ARM_t2SMMLAR:
    case ARM_t2SMMLS:
    case ARM_t2SMMLSR:
    case ARM_t2SMULL:
    case ARM_t2UMAAL:
    case ARM_t2UMLAL:
    case ARM_t2UMULL:
    case ARM_t2USADA8:
      printOperand(MI, 3, O);
      break;
    case ARM_MVE_VCADDf16:
    case ARM_MVE_VCADDf32:
    case ARM_MVE_VCADDi16:
    case ARM_MVE_VCADDi32:
    case ARM_MVE_VCADDi8:
    case ARM_MVE_VHCADDs16:
    case ARM_MVE_VHCADDs32:
    case ARM_MVE_VHCADDs8:
      printComplexRotationOp_180_90(MI, 3, O);
      break;
    case ARM_MVE_VCMLAf16:
    case ARM_MVE_VCMLAf32:
      printComplexRotationOp_90_0(MI, 4, O);
      break;
    case ARM_MVE_VCMULf16:
    case ARM_MVE_VCMULf32:
      printComplexRotationOp_90_0(MI, 3, O);
      break;
    case ARM_SBFX:
    case ARM_UBFX:
    case ARM_t2SBFX:
    case ARM_t2UBFX:
      printImmPlusOneOperand(MI, 3, O);
      break;
    case ARM_VLD3d16:
    case ARM_VLD3d32:
    case ARM_VLD3d8:
    case ARM_VLD3q16:
    case ARM_VLD3q32:
    case ARM_VLD3q8:
      printAddrMode6Operand(MI, 3, O);
      break;
    case ARM_VST3d16:
    case ARM_VST3d32:
    case ARM_VST3d8:
    case ARM_VST3q16:
    case ARM_VST3q32:
    case ARM_VST3q8:
      printAddrMode6Operand(MI, 0, O);
      break;
    case ARM_t2STLEXD:
    case ARM_t2STREXD:
      printAddrMode7Operand(MI, 3, O);
      break;
    }
    return;
    break;
  case ARM_MVE_VMOV_rr_q:
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    printVectorIndex(MI, 4, O);
    return;
    break;
  case ARM_VLD3d16_UPD:
  case ARM_VLD3d32_UPD:
  case ARM_VLD3d8_UPD:
  case ARM_VLD3q16_UPD:
  case ARM_VLD3q32_UPD:
  case ARM_VLD3q8_UPD:
    printAddrMode6Operand(MI, 4, O);
    printAddrMode6OffsetOperand(MI, 6, O);
    return;
    break;
  case ARM_VLD4LNd16:
  case ARM_VLD4LNd32:
  case ARM_VLD4LNd8:
  case ARM_VLD4LNq16:
  case ARM_VLD4LNq32:
    printNoHashImmediate(MI, 10, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 4, O);
    return;
    break;
  case ARM_VLD4d16:
  case ARM_VLD4d32:
  case ARM_VLD4d8:
  case ARM_VLD4q16:
  case ARM_VLD4q32:
  case ARM_VLD4q8:
    printOperand(MI, 3, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 4, O);
    return;
    break;
  case ARM_VLD4d16_UPD:
  case ARM_VLD4d32_UPD:
  case ARM_VLD4d8_UPD:
  case ARM_VLD4q16_UPD:
  case ARM_VLD4q32_UPD:
  case ARM_VLD4q8_UPD:
    printOperand(MI, 3, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 5, O);
    printAddrMode6OffsetOperand(MI, 7, O);
    return;
    break;
  case ARM_VMULLslsv2i32:
  case ARM_VMULLslsv4i16:
  case ARM_VMULLsluv2i32:
  case ARM_VMULLsluv4i16:
  case ARM_VMULslfd:
  case ARM_VMULslfq:
  case ARM_VMULslhd:
  case ARM_VMULslhq:
  case ARM_VMULslv2i32:
  case ARM_VMULslv4i16:
  case ARM_VMULslv4i32:
  case ARM_VMULslv8i16:
  case ARM_VQDMULHslv2i32:
  case ARM_VQDMULHslv4i16:
  case ARM_VQDMULHslv4i32:
  case ARM_VQDMULHslv8i16:
  case ARM_VQDMULLslv2i32:
  case ARM_VQDMULLslv4i16:
  case ARM_VQRDMULHslv2i32:
  case ARM_VQRDMULHslv4i16:
  case ARM_VQRDMULHslv4i32:
  case ARM_VQRDMULHslv8i16:
    return;
    break;
  case ARM_VST2LNd16:
  case ARM_VST2LNd32:
  case ARM_VST2LNd8:
  case ARM_VST2LNq16:
  case ARM_VST2LNq32:
    printNoHashImmediate(MI, 4, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case ARM_VST2LNd16_UPD:
  case ARM_VST2LNd32_UPD:
  case ARM_VST2LNd8_UPD:
  case ARM_VST2LNq16_UPD:
  case ARM_VST2LNq32_UPD:
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 1, O);
    printAddrMode6OffsetOperand(MI, 3, O);
    return;
    break;
  case ARM_VST3LNd16:
  case ARM_VST3LNd32:
  case ARM_VST3LNd8:
  case ARM_VST3LNq16:
  case ARM_VST3LNq32:
    printNoHashImmediate(MI, 5, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 4, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 5, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case ARM_VST4LNd16:
  case ARM_VST4LNd32:
  case ARM_VST4LNd8:
  case ARM_VST4LNq16:
  case ARM_VST4LNq32:
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 4, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "], ");
    printOperand(MI, 5, O);
    SStream_concat1(O, '[');
    printNoHashImmediate(MI, 6, O);
    SStream_concat0(O, "]}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  case ARM_VST4d16:
  case ARM_VST4d32:
  case ARM_VST4d8:
  case ARM_VST4q16:
  case ARM_VST4q32:
  case ARM_VST4q8:
    printOperand(MI, 5, O);
    SStream_concat0(O, "}, ");
    printAddrMode6Operand(MI, 0, O);
    return;
    break;
  }
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *
getRegisterName(unsigned RegNo, unsigned AltIdx) {
#ifndef CAPSTONE_DIET
  assert(RegNo && RegNo < 296 && "Invalid register number!");

  static const char AsmStrsNoRegAltName[] = {
  /* 0 */ "D4_D6_D8_D10\0"
  /* 13 */ "D7_D8_D9_D10\0"
  /* 26 */ "Q7_Q8_Q9_Q10\0"
  /* 39 */ "d10\0"
  /* 43 */ "q10\0"
  /* 47 */ "r10\0"
  /* 51 */ "s10\0"
  /* 55 */ "D14_D16_D18_D20\0"
  /* 71 */ "D17_D18_D19_D20\0"
  /* 87 */ "d20\0"
  /* 91 */ "s20\0"
  /* 95 */ "D24_D26_D28_D30\0"
  /* 111 */ "D27_D28_D29_D30\0"
  /* 127 */ "d30\0"
  /* 131 */ "s30\0"
  /* 135 */ "d0\0"
  /* 138 */ "p0\0"
  /* 141 */ "q0\0"
  /* 144 */ "mvfr0\0"
  /* 150 */ "s0\0"
  /* 153 */ "D9_D10_D11\0"
  /* 164 */ "D5_D7_D9_D11\0"
  /* 177 */ "Q8_Q9_Q10_Q11\0"
  /* 191 */ "R10_R11\0"
  /* 199 */ "d11\0"
  /* 203 */ "q11\0"
  /* 207 */ "r11\0"
  /* 211 */ "s11\0"
  /* 215 */ "D19_D20_D21\0"
  /* 227 */ "D15_D17_D19_D21\0"
  /* 243 */ "d21\0"
  /* 247 */ "s21\0"
  /* 251 */ "D29_D30_D31\0"
  /* 263 */ "D25_D27_D29_D31\0"
  /* 279 */ "d31\0"
  /* 283 */ "s31\0"
  /* 287 */ "Q0_Q1\0"
  /* 293 */ "R0_R1\0"
  /* 299 */ "d1\0"
  /* 302 */ "q1\0"
  /* 305 */ "mvfr1\0"
  /* 311 */ "s1\0"
  /* 314 */ "D6_D8_D10_D12\0"
  /* 328 */ "D9_D10_D11_D12\0"
  /* 343 */ "Q9_Q10_Q11_Q12\0"
  /* 358 */ "d12\0"
  /* 362 */ "q12\0"
  /* 366 */ "r12\0"
  /* 370 */ "s12\0"
  /* 374 */ "D16_D18_D20_D22\0"
  /* 390 */ "D19_D20_D21_D22\0"
  /* 406 */ "d22\0"
  /* 410 */ "s22\0"
  /* 414 */ "D0_D2\0"
  /* 420 */ "D0_D1_D2\0"
  /* 429 */ "Q1_Q2\0"
  /* 435 */ "d2\0"
  /* 438 */ "q2\0"
  /* 441 */ "mvfr2\0"
  /* 447 */ "s2\0"
  /* 450 */ "fpinst2\0"
  /* 458 */ "D7_D9_D11_D13\0"
  /* 472 */ "D11_D12_D13\0"
  /* 484 */ "Q10_Q11_Q12_Q13\0"
  /* 500 */ "d13\0"
  /* 504 */ "q13\0"
  /* 508 */ "s13\0"
  /* 512 */ "D17_D19_D21_D23\0"
  /* 528 */ "D21_D22_D23\0"
  /* 540 */ "d23\0"
  /* 544 */ "s23\0"
  /* 548 */ "D1_D3\0"
  /* 554 */ "D1_D2_D3\0"
  /* 563 */ "Q0_Q1_Q2_Q3\0"
  /* 575 */ "R2_R3\0"
  /* 581 */ "d3\0"
  /* 584 */ "q3\0"
  /* 587 */ "r3\0"
  /* 590 */ "s3\0"
  /* 593 */ "D8_D10_D12_D14\0"
  /* 608 */ "D11_D12_D13_D14\0"
  /* 624 */ "Q11_Q12_Q13_Q14\0"
  /* 640 */ "d14\0"
  /* 644 */ "q14\0"
  /* 648 */ "s14\0"
  /* 652 */ "D18_D20_D22_D24\0"
  /* 668 */ "D21_D22_D23_D24\0"
  /* 684 */ "d24\0"
  /* 688 */ "s24\0"
  /* 692 */ "D0_D2_D4\0"
  /* 701 */ "D1_D2_D3_D4\0"
  /* 713 */ "Q1_Q2_Q3_Q4\0"
  /* 725 */ "d4\0"
  /* 728 */ "q4\0"
  /* 731 */ "r4\0"
  /* 734 */ "s4\0"
  /* 737 */ "D9_D11_D13_D15\0"
  /* 752 */ "D13_D14_D15\0"
  /* 764 */ "Q12_Q13_Q14_Q15\0"
  /* 780 */ "d15\0"
  /* 784 */ "q15\0"
  /* 788 */ "s15\0"
  /* 792 */ "D19_D21_D23_D25\0"
  /* 808 */ "D23_D24_D25\0"
  /* 820 */ "d25\0"
  /* 824 */ "s25\0"
  /* 828 */ "D1_D3_D5\0"
  /* 837 */ "D3_D4_D5\0"
  /* 846 */ "Q2_Q3_Q4_Q5\0"
  /* 858 */ "R4_R5\0"
  /* 864 */ "d5\0"
  /* 867 */ "q5\0"
  /* 870 */ "r5\0"
  /* 873 */ "s5\0"
  /* 876 */ "D10_D12_D14_D16\0"
  /* 892 */ "D13_D14_D15_D16\0"
  /* 908 */ "d16\0"
  /* 912 */ "s16\0"
  /* 916 */ "D20_D22_D24_D26\0"
  /* 932 */ "D23_D24_D25_D26\0"
  /* 948 */ "d26\0"
  /* 952 */ "s26\0"
  /* 956 */ "D0_D2_D4_D6\0"
  /* 968 */ "D3_D4_D5_D6\0"
  /* 980 */ "Q3_Q4_Q5_Q6\0"
  /* 992 */ "d6\0"
  /* 995 */ "q6\0"
  /* 998 */ "r6\0"
  /* 1001 */ "s6\0"
  /* 1004 */ "D11_D13_D15_D17\0"
  /* 1020 */ "D15_D16_D17\0"
  /* 1032 */ "d17\0"
  /* 1036 */ "s17\0"
  /* 1040 */ "D21_D23_D25_D27\0"
  /* 1056 */ "D25_D26_D27\0"
  /* 1068 */ "d27\0"
  /* 1072 */ "s27\0"
  /* 1076 */ "D1_D3_D5_D7\0"
  /* 1088 */ "D5_D6_D7\0"
  /* 1097 */ "Q4_Q5_Q6_Q7\0"
  /* 1109 */ "R6_R7\0"
  /* 1115 */ "d7\0"
  /* 1118 */ "q7\0"
  /* 1121 */ "r7\0"
  /* 1124 */ "s7\0"
  /* 1127 */ "D12_D14_D16_D18\0"
  /* 1143 */ "D15_D16_D17_D18\0"
  /* 1159 */ "d18\0"
  /* 1163 */ "s18\0"
  /* 1167 */ "D22_D24_D26_D28\0"
  /* 1183 */ "D25_D26_D27_D28\0"
  /* 1199 */ "d28\0"
  /* 1203 */ "s28\0"
  /* 1207 */ "D2_D4_D6_D8\0"
  /* 1219 */ "D5_D6_D7_D8\0"
  /* 1231 */ "Q5_Q6_Q7_Q8\0"
  /* 1243 */ "d8\0"
  /* 1246 */ "q8\0"
  /* 1249 */ "r8\0"
  /* 1252 */ "s8\0"
  /* 1255 */ "D13_D15_D17_D19\0"
  /* 1271 */ "D17_D18_D19\0"
  /* 1283 */ "d19\0"
  /* 1287 */ "s19\0"
  /* 1291 */ "D23_D25_D27_D29\0"
  /* 1307 */ "D27_D28_D29\0"
  /* 1319 */ "d29\0"
  /* 1323 */ "s29\0"
  /* 1327 */ "D3_D5_D7_D9\0"
  /* 1339 */ "D7_D8_D9\0"
  /* 1348 */ "Q6_Q7_Q8_Q9\0"
  /* 1360 */ "R8_R9\0"
  /* 1366 */ "d9\0"
  /* 1369 */ "q9\0"
  /* 1372 */ "r9\0"
  /* 1375 */ "s9\0"
  /* 1378 */ "R12_SP\0"
  /* 1385 */ "pc\0"
  /* 1388 */ "fpscr_nzcvqc\0"
  /* 1401 */ "fpexc\0"
  /* 1407 */ "fpsid\0"
  /* 1413 */ "ra_auth_code\0"
  /* 1426 */ "itstate\0"
  /* 1434 */ "sp\0"
  /* 1437 */ "fpscr\0"
  /* 1443 */ "lr\0"
  /* 1446 */ "vpr\0"
  /* 1450 */ "apsr\0"
  /* 1455 */ "cpsr\0"
  /* 1460 */ "spsr\0"
  /* 1465 */ "zr\0"
  /* 1468 */ "fpcxtns\0"
  /* 1476 */ "fpcxts\0"
  /* 1483 */ "fpinst\0"
  /* 1490 */ "fpscr_nzcv\0"
  /* 1501 */ "apsr_nzcv\0"
};
  static const uint16_t RegAsmOffsetNoRegAltName[] = {
    1450, 1501, 1455, 1468, 1476, 1401, 1483, 1437, 1490, 1388, 1407, 1426, 1443, 1385, 
    1413, 1434, 1460, 1446, 1465, 135, 299, 435, 581, 725, 864, 992, 1115, 1243, 
    1366, 39, 199, 358, 500, 640, 780, 908, 1032, 1159, 1283, 87, 243, 406, 
    540, 684, 820, 948, 1068, 1199, 1319, 127, 279, 450, 144, 305, 441, 138, 
    141, 302, 438, 584, 728, 867, 995, 1118, 1246, 1369, 43, 203, 362, 504, 
    644, 784, 147, 308, 444, 587, 731, 870, 998, 1121, 1249, 1372, 47, 207, 
    366, 150, 311, 447, 590, 734, 873, 1001, 1124, 1252, 1375, 51, 211, 370, 
    508, 648, 788, 912, 1036, 1163, 1287, 91, 247, 410, 544, 688, 824, 952, 
    1072, 1203, 1323, 131, 283, 414, 548, 695, 831, 962, 1082, 1213, 1333, 6, 
    170, 320, 464, 600, 744, 884, 1012, 1135, 1263, 63, 235, 382, 520, 660, 
    800, 924, 1048, 1175, 1299, 103, 271, 287, 429, 569, 719, 852, 986, 1103, 
    1237, 1354, 32, 183, 350, 492, 632, 772, 563, 713, 846, 980, 1097, 1231, 
    1348, 26, 177, 343, 484, 624, 764, 293, 575, 858, 1109, 1360, 191, 1378, 
    420, 554, 704, 837, 971, 1088, 1222, 1339, 16, 153, 331, 472, 612, 752, 
    896, 1020, 1147, 1271, 75, 215, 394, 528, 672, 808, 936, 1056, 1187, 1307, 
    115, 251, 692, 828, 959, 1079, 1210, 1330, 3, 167, 317, 461, 596, 740, 
    880, 1008, 1131, 1259, 59, 231, 378, 516, 656, 796, 920, 1044, 1171, 1295, 
    99, 267, 956, 1076, 1207, 1327, 0, 164, 314, 458, 593, 737, 876, 1004, 
    1127, 1255, 55, 227, 374, 512, 652, 792, 916, 1040, 1167, 1291, 95, 263, 
    423, 707, 974, 1225, 19, 335, 616, 900, 1151, 79, 398, 676, 940, 1191, 
    119, 701, 968, 1219, 13, 328, 608, 892, 1143, 71, 390, 668, 932, 1183, 
    111, 
  };

  static const char AsmStrsRegNamesRaw[] = {
  /* 0 */ "r13\0"
  /* 4 */ "r14\0"
  /* 8 */ "r15\0"
};
  static const uint8_t RegAsmOffsetRegNamesRaw[] = {
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 8, 
    3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 
  };

  switch(AltIdx) {
  default: assert(0 && "Invalid register alt name index!");
  case ARM_NoRegAltName:
    assert(*(AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1]) &&
           "Invalid alt name index for register!");
    return AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1];
  case ARM_RegNamesRaw:
    if (!*(AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1]))
      return getRegisterName(RegNo, ARM_NoRegAltName);
    return AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1];
  }
#else
  return NULL;
#endif // CAPSTONE_DIET
}
#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static bool printAliasInstr(MCInst *MI, uint64_t Address, SStream *OS) {
#ifndef CAPSTONE_DIET
  static const PatternsForOpcode OpToPatterns[] = {
    {ARM_DSB, 0, 3 },
    {ARM_HINT, 3, 9 },
    {ARM_MVE_VMLADAVas16, 12, 1 },
    {ARM_MVE_VMLADAVas32, 13, 1 },
    {ARM_MVE_VMLADAVas8, 14, 1 },
    {ARM_MVE_VMLADAVau16, 15, 1 },
    {ARM_MVE_VMLADAVau32, 16, 1 },
    {ARM_MVE_VMLADAVau8, 17, 1 },
    {ARM_MVE_VMLADAVs16, 18, 1 },
    {ARM_MVE_VMLADAVs32, 19, 1 },
    {ARM_MVE_VMLADAVs8, 20, 1 },
    {ARM_MVE_VMLADAVu16, 21, 1 },
    {ARM_MVE_VMLADAVu32, 22, 1 },
    {ARM_MVE_VMLADAVu8, 23, 1 },
    {ARM_MVE_VMLALDAVas16, 24, 1 },
    {ARM_MVE_VMLALDAVas32, 25, 1 },
    {ARM_MVE_VMLALDAVau16, 26, 1 },
    {ARM_MVE_VMLALDAVau32, 27, 1 },
    {ARM_MVE_VMLALDAVs16, 28, 1 },
    {ARM_MVE_VMLALDAVs32, 29, 1 },
    {ARM_MVE_VMLALDAVu16, 30, 1 },
    {ARM_MVE_VMLALDAVu32, 31, 1 },
    {ARM_MVE_VORR, 32, 1 },
    {ARM_MVE_VRMLALDAVHas32, 33, 1 },
    {ARM_MVE_VRMLALDAVHau32, 34, 1 },
    {ARM_MVE_VRMLALDAVHs32, 35, 1 },
    {ARM_MVE_VRMLALDAVHu32, 36, 1 },
    {ARM_t2CSINC, 37, 2 },
    {ARM_t2CSINV, 39, 2 },
    {ARM_t2CSNEG, 41, 1 },
    {ARM_t2DSB, 42, 3 },
    {ARM_t2HINT, 45, 13 },
    {ARM_t2SUBS_PC_LR, 58, 1 },
    {ARM_tHINT, 59, 6 },
  {0},  };

  static const AliasPattern Patterns[] = {
    // ARM_DSB - 0
    {0, 0, 1, 3 },
    {5, 3, 1, 3 },
    {11, 6, 1, 3 },
    // ARM_HINT - 3
    {15, 9, 3, 3 },
    {23, 12, 3, 3 },
    {33, 15, 3, 3 },
    {41, 18, 3, 3 },
    {49, 21, 3, 3 },
    {57, 24, 3, 3 },
    {66, 27, 3, 3 },
    {74, 30, 3, 3 },
    {83, 33, 3, 4 },
    // ARM_MVE_VMLADAVas16 - 12
    {94, 37, 7, 6 },
    // ARM_MVE_VMLADAVas32 - 13
    {120, 43, 7, 6 },
    // ARM_MVE_VMLADAVas8 - 14
    {146, 49, 7, 6 },
    // ARM_MVE_VMLADAVau16 - 15
    {171, 55, 7, 6 },
    // ARM_MVE_VMLADAVau32 - 16
    {197, 61, 7, 6 },
    // ARM_MVE_VMLADAVau8 - 17
    {223, 67, 7, 6 },
    // ARM_MVE_VMLADAVs16 - 18
    {248, 73, 6, 5 },
    // ARM_MVE_VMLADAVs32 - 19
    {273, 78, 6, 5 },
    // ARM_MVE_VMLADAVs8 - 20
    {298, 83, 6, 5 },
    // ARM_MVE_VMLADAVu16 - 21
    {322, 88, 6, 5 },
    // ARM_MVE_VMLADAVu32 - 22
    {347, 93, 6, 5 },
    // ARM_MVE_VMLADAVu8 - 23
    {372, 98, 6, 5 },
    // ARM_MVE_VMLALDAVas16 - 24
    {396, 103, 9, 8 },
    // ARM_MVE_VMLALDAVas32 - 25
    {427, 111, 9, 8 },
    // ARM_MVE_VMLALDAVau16 - 26
    {458, 119, 9, 8 },
    // ARM_MVE_VMLALDAVau32 - 27
    {489, 127, 9, 8 },
    // ARM_MVE_VMLALDAVs16 - 28
    {520, 135, 7, 6 },
    // ARM_MVE_VMLALDAVs32 - 29
    {550, 141, 7, 6 },
    // ARM_MVE_VMLALDAVu16 - 30
    {580, 147, 7, 6 },
    // ARM_MVE_VMLALDAVu32 - 31
    {610, 153, 7, 6 },
    // ARM_MVE_VORR - 32
    {640, 159, 7, 5 },
    // ARM_MVE_VRMLALDAVHas32 - 33
    {656, 164, 9, 8 },
    // ARM_MVE_VRMLALDAVHau32 - 34
    {689, 172, 9, 8 },
    // ARM_MVE_VRMLALDAVHs32 - 35
    {722, 180, 7, 6 },
    // ARM_MVE_VRMLALDAVHu32 - 36
    {754, 186, 7, 6 },
    // ARM_t2CSINC - 37
    {786, 192, 4, 4 },
    {800, 196, 4, 4 },
    // ARM_t2CSINV - 39
    {818, 200, 4, 4 },
    {833, 204, 4, 4 },
    // ARM_t2CSNEG - 41
    {851, 208, 4, 4 },
    // ARM_t2DSB - 42
    {0, 212, 3, 6 },
    {5, 218, 3, 6 },
    {869, 224, 3, 2 },
    // ARM_t2HINT - 45
    {877, 226, 3, 3 },
    {887, 229, 3, 3 },
    {899, 232, 3, 3 },
    {909, 235, 3, 3 },
    {919, 238, 3, 3 },
    {929, 241, 3, 4 },
    {940, 245, 3, 4 },
    {74, 249, 3, 3 },
    {950, 252, 3, 3 },
    {971, 255, 3, 3 },
    {979, 258, 3, 3 },
    {997, 261, 3, 3 },
    {83, 264, 3, 5 },
    // ARM_t2SUBS_PC_LR - 58
    {1015, 269, 3, 4 },
    // ARM_tHINT - 59
    {15, 273, 3, 3 },
    {23, 276, 3, 3 },
    {33, 279, 3, 3 },
    {41, 282, 3, 3 },
    {49, 285, 3, 3 },
    {57, 288, 3, 4 },
  {0},  };

  static const AliasPatternCond Conds[] = {
    // (DSB 0) - 0
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureDB},
    // (DSB 4) - 3
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureDB},
    // (DSB 12) - 6
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureDFB},
    // (HINT 0, pred:$p) - 9
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 1, pred:$p) - 12
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 2, pred:$p) - 15
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 3, pred:$p) - 18
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 4, pred:$p) - 21
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 5, pred:$p) - 24
    {AliasPatternCond_K_Imm, (uint32_t)5},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV8Ops},
    // (HINT 16, pred:$p) - 27
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureRAS},
    // (HINT 20, pred:$p) - 30
    {AliasPatternCond_K_Imm, (uint32_t)20},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6KOps},
    // (HINT 22, pred:$p) - 33
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_NegFeature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV8Ops},
    {AliasPatternCond_K_Feature, ARM_FeatureCLRBHB},
    // (MVE_VMLADAVas16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 37
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVas32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 43
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVas8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 49
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVau16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 55
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVau32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 61
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVau8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 67
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVs16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 73
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVs32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 78
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVs8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 83
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVu16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 88
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVu32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 93
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLADAVu8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 98
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVas16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 103
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVas32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 111
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVau16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 119
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVau32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 127
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVs16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 135
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVs32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 141
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVu16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 147
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VMLALDAVu32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 153
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VORR MQPR:$Qd, MQPR:$Qm, MQPR:$Qm, vpred_r:$vp) - 159
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VRMLALDAVHas32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 164
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VRMLALDAVHau32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 172
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VRMLALDAVHs32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 180
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (MVE_VRMLALDAVHu32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 186
    {AliasPatternCond_K_RegClass, ARM_tGPREvenRegClassID},
    {AliasPatternCond_K_RegClass, ARM_tGPROddRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_MQPRRegClassID},
    {AliasPatternCond_K_Feature, ARM_HasMVEIntegerOps},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    // (t2CSINC rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 192
    {AliasPatternCond_K_RegClass, ARM_rGPRRegClassID},
    {AliasPatternCond_K_Reg, ARM_ZR},
    {AliasPatternCond_K_Reg, ARM_ZR},
    {AliasPatternCond_K_Feature, ARM_HasV8_1MMainlineOps},
    // (t2CSINC rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 196
    {AliasPatternCond_K_RegClass, ARM_rGPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_GPRwithZRnospRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Feature, ARM_HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 200
    {AliasPatternCond_K_RegClass, ARM_rGPRRegClassID},
    {AliasPatternCond_K_Reg, ARM_ZR},
    {AliasPatternCond_K_Reg, ARM_ZR},
    {AliasPatternCond_K_Feature, ARM_HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 204
    {AliasPatternCond_K_RegClass, ARM_rGPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_GPRwithZRnospRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Feature, ARM_HasV8_1MMainlineOps},
    // (t2CSNEG rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 208
    {AliasPatternCond_K_RegClass, ARM_rGPRRegClassID},
    {AliasPatternCond_K_RegClass, ARM_GPRwithZRnospRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Feature, ARM_HasV8_1MMainlineOps},
    // (t2DSB 0, 14, 0) - 212
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Feature, ARM_FeatureDB},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2DSB 4, 14, 0) - 218
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_Imm, (uint32_t)14},
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Feature, ARM_FeatureDB},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2DSB 12, pred:$p) - 224
    {AliasPatternCond_K_Imm, (uint32_t)12},
    {AliasPatternCond_K_Feature, ARM_FeatureDFB},
    // (t2HINT 0, pred:$p) - 226
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 1, pred:$p) - 229
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 2, pred:$p) - 232
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 3, pred:$p) - 235
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 4, pred:$p) - 238
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 5, pred:$p) - 241
    {AliasPatternCond_K_Imm, (uint32_t)5},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    {AliasPatternCond_K_Feature, ARM_HasV8Ops},
    // (t2HINT 16, pred:$p) - 245
    {AliasPatternCond_K_Imm, (uint32_t)16},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    {AliasPatternCond_K_Feature, ARM_FeatureRAS},
    // (t2HINT 20, pred:$p) - 249
    {AliasPatternCond_K_Imm, (uint32_t)20},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 13, pred:$p) - 252
    {AliasPatternCond_K_Imm, (uint32_t)13},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 15, pred:$p) - 255
    {AliasPatternCond_K_Imm, (uint32_t)15},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 29, pred:$p) - 258
    {AliasPatternCond_K_Imm, (uint32_t)29},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 45, pred:$p) - 261
    {AliasPatternCond_K_Imm, (uint32_t)45},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    // (t2HINT 22, pred:$p) - 264
    {AliasPatternCond_K_Imm, (uint32_t)22},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    {AliasPatternCond_K_Feature, ARM_HasV8Ops},
    {AliasPatternCond_K_Feature, ARM_FeatureCLRBHB},
    // (t2SUBS_PC_LR 0, pred:$p) - 269
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    {AliasPatternCond_K_Feature, ARM_FeatureVirtualization},
    // (tHINT 0, pred:$p) - 273
    {AliasPatternCond_K_Imm, (uint32_t)0},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6MOps},
    // (tHINT 1, pred:$p) - 276
    {AliasPatternCond_K_Imm, (uint32_t)1},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6MOps},
    // (tHINT 2, pred:$p) - 279
    {AliasPatternCond_K_Imm, (uint32_t)2},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6MOps},
    // (tHINT 3, pred:$p) - 282
    {AliasPatternCond_K_Imm, (uint32_t)3},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6MOps},
    // (tHINT 4, pred:$p) - 285
    {AliasPatternCond_K_Imm, (uint32_t)4},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_HasV6MOps},
    // (tHINT 5, pred:$p) - 288
    {AliasPatternCond_K_Imm, (uint32_t)5},
    {AliasPatternCond_K_Feature, ARM_ModeThumb},
    {AliasPatternCond_K_Feature, ARM_FeatureThumb2},
    {AliasPatternCond_K_Feature, ARM_HasV8Ops},
  {0},  };

  static const char AsmStrings[] =
    /* 0 */ "ssbb\0"
    /* 5 */ "pssbb\0"
    /* 11 */ "dfb\0"
    /* 15 */ "nop$\xFF\x02\x01\0"
    /* 23 */ "yield$\xFF\x02\x01\0"
    /* 33 */ "wfe$\xFF\x02\x01\0"
    /* 41 */ "wfi$\xFF\x02\x01\0"
    /* 49 */ "sev$\xFF\x02\x01\0"
    /* 57 */ "sevl$\xFF\x02\x01\0"
    /* 66 */ "esb$\xFF\x02\x01\0"
    /* 74 */ "csdb$\xFF\x02\x01\0"
    /* 83 */ "clrbhb$\xFF\x02\x01\0"
    /* 94 */ "vmlava$\xFF\x05\x02.s16	$\x01, $\x03, $\x04\0"
    /* 120 */ "vmlava$\xFF\x05\x02.s32	$\x01, $\x03, $\x04\0"
    /* 146 */ "vmlava$\xFF\x05\x02.s8	$\x01, $\x03, $\x04\0"
    /* 171 */ "vmlava$\xFF\x05\x02.u16	$\x01, $\x03, $\x04\0"
    /* 197 */ "vmlava$\xFF\x05\x02.u32	$\x01, $\x03, $\x04\0"
    /* 223 */ "vmlava$\xFF\x05\x02.u8	$\x01, $\x03, $\x04\0"
    /* 248 */ "vmlav$\xFF\x04\x02.s16	$\x01, $\x02, $\x03\0"
    /* 273 */ "vmlav$\xFF\x04\x02.s32	$\x01, $\x02, $\x03\0"
    /* 298 */ "vmlav$\xFF\x04\x02.s8	$\x01, $\x02, $\x03\0"
    /* 322 */ "vmlav$\xFF\x04\x02.u16	$\x01, $\x02, $\x03\0"
    /* 347 */ "vmlav$\xFF\x04\x02.u32	$\x01, $\x02, $\x03\0"
    /* 372 */ "vmlav$\xFF\x04\x02.u8	$\x01, $\x02, $\x03\0"
    /* 396 */ "vmlalva$\xFF\x07\x02.s16	$\x01, $\x02, $\x05, $\x06\0"
    /* 427 */ "vmlalva$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 458 */ "vmlalva$\xFF\x07\x02.u16	$\x01, $\x02, $\x05, $\x06\0"
    /* 489 */ "vmlalva$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 520 */ "vmlalv$\xFF\x05\x02.s16	$\x01, $\x02, $\x03, $\x04\0"
    /* 550 */ "vmlalv$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 580 */ "vmlalv$\xFF\x05\x02.u16	$\x01, $\x02, $\x03, $\x04\0"
    /* 610 */ "vmlalv$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 640 */ "vmov$\xFF\x04\x02	$\x01, $\x02\0"
    /* 656 */ "vrmlalvha$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 689 */ "vrmlalvha$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 722 */ "vrmlalvh$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 754 */ "vrmlalvh$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 786 */ "cset	$\x01, $\xFF\x04\x03\0"
    /* 800 */ "cinc	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 818 */ "csetm	$\x01, $\xFF\x04\x03\0"
    /* 833 */ "cinv	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 851 */ "cneg	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 869 */ "dfb$\xFF\x02\x01\0"
    /* 877 */ "nop$\xFF\x02\x01.w\0"
    /* 887 */ "yield$\xFF\x02\x01.w\0"
    /* 899 */ "wfe$\xFF\x02\x01.w\0"
    /* 909 */ "wfi$\xFF\x02\x01.w\0"
    /* 919 */ "sev$\xFF\x02\x01.w\0"
    /* 929 */ "sevl$\xFF\x02\x01.w\0"
    /* 940 */ "esb$\xFF\x02\x01.w\0"
    /* 950 */ "pacbti$\xFF\x02\x01 r12,lr,sp\0"
    /* 971 */ "bti$\xFF\x02\x01\0"
    /* 979 */ "pac$\xFF\x02\x01 r12,lr,sp\0"
    /* 997 */ "aut$\xFF\x02\x01 r12,lr,sp\0"
    /* 1015 */ "eret$\xFF\x02\x01\0"
  ;

#ifndef NDEBUG
  //static struct SortCheck {
  //  SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
  //    assert(std::is_sorted(
  //               OpToPatterns.begin(), OpToPatterns.end(),
  //               [](const PatternsForOpcode &L, const //PatternsForOpcode &R) {
  //                 return L.Opcode < R.Opcode;
  //               }) &&
  //           "tablegen failed to sort opcode patterns");
  //  }
  //} sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M = {
    OpToPatterns,
    Patterns,
    Conds,
    AsmStrings,
  };
  const char *AsmString = matchAliasPatterns(MI, &M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  SStream_concat1(OS, '\t');
  char *substr = malloc(I+1);
  memcpy(substr, AsmString, I);
  substr[I] = '\0';
  SStream_concat0(OS, substr);
  free(substr);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      SStream_concat1(OS, '\t');
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, ((unsigned)AsmString[I++]) - 1, OS);
      } else {
        SStream_concat1(OS, AsmString[I++]);
      }
    } while (AsmString[I] != '\0');
  }

  return true;
#else
  return false;
#endif // CAPSTONE_DIET
}

void printCustomAliasOperand(
         MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         SStream *OS) {
#ifndef CAPSTONE_DIET
  switch (PrintMethodIdx) {
  default:
    assert(0 && "Unknown PrintMethod kind");
    break;
  case 0:
    printPredicateOperand(MI, OpIdx, OS);
    break;
  case 1:
    printVPTPredicateOperand(MI, OpIdx, OS);
    break;
  case 2:
    printMandatoryInvertedPredicateOperand(MI, OpIdx, OS);
    break;
  }
#endif // CAPSTONE_DIET
}

#endif // PRINT_ALIAS_INSTR
